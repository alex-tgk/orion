[0m[7m[1m[32m PASS [39m[22m[27m[0m [0m[7m[37m ai-interface [39m[27m[0m [2mpackages/ai-interface/src/app/utils/[22m[1mcost-calculator.spec.ts[22m ([0m[1m[41m5.607 s[49m[22m[0m)
  CostCalculator
    calculateOpenAICost
      [32m‚úì[39m [2mshould calculate cost for GPT-4 (16 ms)[22m
      [32m‚úì[39m [2mshould calculate cost for GPT-3.5-turbo (1 ms)[22m
      [32m‚úì[39m [2mshould calculate cost for text-embedding-ada-002 (1 ms)[22m
      [32m‚úì[39m [2mshould handle unknown models with default pricing (1 ms)[22m
      [32m‚úì[39m [2mshould handle zero tokens (1 ms)[22m
      [32m‚úì[39m [2mshould round to 6 decimal places (1 ms)[22m
    calculateAnthropicCost
      [32m‚úì[39m [2mshould calculate cost for Claude 3.5 Sonnet (4 ms)[22m
      [32m‚úì[39m [2mshould calculate cost for Claude 3 Opus (1 ms)[22m
      [32m‚úì[39m [2mshould calculate cost for Claude 3 Haiku (4 ms)[22m
    calculateCost
      [32m‚úì[39m [2mshould route to OpenAI calculator (1 ms)[22m
      [32m‚úì[39m [2mshould route to Anthropic calculator (1 ms)[22m
      [32m‚úì[39m [2mshould handle case insensitive provider names[22m
      [32m‚úì[39m [2mshould default to OpenAI for unknown providers (1 ms)[22m
    getPricing
      [32m‚úì[39m [2mshould return OpenAI pricing (8 ms)[22m
      [32m‚úì[39m [2mshould return Anthropic pricing (1 ms)[22m
      [32m‚úì[39m [2mshould return null for unknown models (1 ms)[22m
      [32m‚úì[39m [2mshould return null for unknown providers (1 ms)[22m
    estimateCost
      [32m‚úì[39m [2mshould estimate cost same as calculate cost (1 ms)[22m

[0m[7m[1m[31m FAIL [39m[22m[27m[0m [0m[7m[37m ai-interface [39m[27m[0m [2mpackages/ai-interface/src/app/services/[22m[1mcache.service.spec.ts[22m
  [1m‚óè [22mTest suite failed to run

    [96mpackages/ai-interface/src/app/services/cache.service.spec.ts[0m:[93m7[0m:[93m7[0m - [91merror[0m[90m TS6133: [0m'configService' is declared but its value is never read.

    [7m7[0m   let configService: ConfigService;
    [7m [0m [91m      ~~~~~~~~~~~~~[0m

[0m[7m[1m[31m FAIL [39m[22m[27m[0m [0m[7m[37m ai-interface [39m[27m[0m [2mpackages/ai-interface/src/app/controllers/[22m[1mai.controller.spec.ts[22m
  [1m‚óè [22mTest suite failed to run

    [96mpackages/ai-interface/src/app/controllers/ai.controller.spec.ts[0m:[93m18[0m:[93m7[0m - [91merror[0m[90m TS6133: [0m'orchestrator' is declared but its value is never read.

    [7m18[0m   let orchestrator: AIOrchestratorService;
    [7m  [0m [91m      ~~~~~~~~~~~~[0m
    [96mpackages/ai-interface/src/app/controllers/ai.controller.spec.ts[0m:[93m19[0m:[93m7[0m - [91merror[0m[90m TS6133: [0m'promptService' is declared but its value is never read.

    [7m19[0m   let promptService: PromptService;
    [7m  [0m [91m      ~~~~~~~~~~~~~[0m
    [96mpackages/ai-interface/src/app/controllers/ai.controller.spec.ts[0m:[93m20[0m:[93m7[0m - [91merror[0m[90m TS6133: [0m'usageService' is declared but its value is never read.

    [7m20[0m   let usageService: UsageService;
    [7m  [0m [91m      ~~~~~~~~~~~~[0m

[0m[7m[1m[31m FAIL [39m[22m[27m[0m [0m[7m[37m ai-interface [39m[27m[0m [2mpackages/ai-interface/src/app/services/[22m[1mprompt.service.spec.ts[22m
  [1m‚óè [22mTest suite failed to run

    [96mpackages/ai-interface/src/app/services/prompt.service.ts[0m:[93m21[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'prompt' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.

    [7m21[0m     const existing = await this.prisma.prompt.findUnique({
    [7m  [0m [91m                                       ~~~~~~[0m
    [96mpackages/ai-interface/src/app/services/prompt.service.ts[0m:[93m29[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'prompt' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.

    [7m29[0m     const prompt = await this.prisma.prompt.create({
    [7m  [0m [91m                                     ~~~~~~[0m
    [96mpackages/ai-interface/src/app/services/prompt.service.ts[0m:[93m52[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'prompt' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.

    [7m52[0m     const existing = await this.prisma.prompt.findUnique({
    [7m  [0m [91m                                       ~~~~~~[0m
    [96mpackages/ai-interface/src/app/services/prompt.service.ts[0m:[93m63[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'prompt' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.

    [7m63[0m     const updated = await this.prisma.prompt.update({
    [7m  [0m [91m                                      ~~~~~~[0m
    [96mpackages/ai-interface/src/app/services/prompt.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'prompt' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.

    [7m81[0m     const prompt = await this.prisma.prompt.findUnique({
    [7m  [0m [91m                                     ~~~~~~[0m
    [96mpackages/ai-interface/src/app/services/prompt.service.ts[0m:[93m96[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'prompt' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.

    [7m96[0m     const prompts = await this.prisma.prompt.findMany({
    [7m  [0m [91m                                      ~~~~~~[0m
    [96mpackages/ai-interface/src/app/services/prompt.service.ts[0m:[93m101[0m:[93m25[0m - [91merror[0m[90m TS7006: [0mParameter 'p' implicitly has an 'any' type.

    [7m101[0m     return prompts.map((p) => this.toResponseDto(p));
    [7m   [0m [91m                        ~[0m
    [96mpackages/ai-interface/src/app/services/prompt.service.ts[0m:[93m110[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'prompt' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.

    [7m110[0m     const existing = await this.prisma.prompt.findUnique({
    [7m   [0m [91m                                       ~~~~~~[0m
    [96mpackages/ai-interface/src/app/services/prompt.service.ts[0m:[93m118[0m:[93m23[0m - [91merror[0m[90m TS2339: [0mProperty 'prompt' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.

    [7m118[0m     await this.prisma.prompt.delete({
    [7m   [0m [91m                      ~~~~~~[0m

[0m[7m[1m[32m PASS [39m[22m[27m[0m [0m[7m[37m ai-interface [39m[27m[0m [2mpackages/ai-interface/src/app/utils/[22m[1mcache-key.spec.ts[22m ([0m[1m[41m10.243 s[49m[22m[0m)
  CacheKeyGenerator
    forChat
      [32m‚úì[39m [2mshould generate consistent cache keys for same inputs (13 ms)[22m
      [32m‚úì[39m [2mshould generate different keys for different messages (1 ms)[22m
      [32m‚úì[39m [2mshould generate different keys for different temperatures (1 ms)[22m
      [32m‚úì[39m [2mshould generate different keys for different providers (10 ms)[22m
      [32m‚úì[39m [2mshould generate different keys for different models (1 ms)[22m
      [32m‚úì[39m [2mshould have ai:chat prefix (1 ms)[22m
    forCompletion
      [32m‚úì[39m [2mshould generate consistent cache keys for same inputs (1 ms)[22m
      [32m‚úì[39m [2mshould generate different keys for different prompts (1 ms)[22m
      [32m‚úì[39m [2mshould have ai:completion prefix (1 ms)[22m
    forEmbedding
      [32m‚úì[39m [2mshould generate consistent cache keys for same inputs (1 ms)[22m
      [32m‚úì[39m [2mshould generate different keys for different texts[22m
      [32m‚úì[39m [2mshould have ai:embedding prefix (3 ms)[22m
    forUsage
      [32m‚úì[39m [2mshould generate consistent cache keys for same date range (2 ms)[22m
      [32m‚úì[39m [2mshould generate different keys for different users[22m
      [32m‚úì[39m [2mshould include date range in key (2 ms)[22m
    forConversation
      [32m‚úì[39m [2mshould generate consistent cache keys (1 ms)[22m
      [32m‚úì[39m [2mshould generate different keys for different conversations[22m
      [32m‚úì[39m [2mshould have ai:conversation prefix (1 ms)[22m

[31mFailed to collect coverage from /Users/acarroll/dev/projects/orion/packages/ai-interface/src/app/services/anthropic.service.ts[39m
[31mERROR: [96mpackages/ai-interface/src/app/services/anthropic.service.ts[0m:[93m109[0m:[93m19[0m - [91merror[0m[90m TS6133: [0m'request' is declared but its value is never read.[39m
[31m[39m
[31m[7m109[0m   async embedding(request: EmbeddingRequest): Promise<EmbeddingResponse> {[39m
[31m[7m   [0m [91m                  ~~~~~~~[0m[39m
[31mSTACK: [39m
[31mFailed to collect coverage from /Users/acarroll/dev/projects/orion/packages/ai-interface/src/app/services/usage.service.ts[39m
[31mERROR: [96mpackages/ai-interface/src/app/services/usage.service.ts[0m:[93m36[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'aIRequest' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.[39m
[31m[39m
[31m[7m36[0m     const requests = await this.prisma.aIRequest.findMany({[39m
[31m[7m  [0m [91m                                       ~~~~~~~~~[0m[39m
[31m[96mpackages/ai-interface/src/app/services/usage.service.ts[0m:[93m50[0m:[93m8[0m - [91merror[0m[90m TS7006: [0mParameter 'sum' implicitly has an 'any' type.[39m
[31m[39m
[31m[7m50[0m       (sum, req) => sum + req.totalTokens,[39m
[31m[7m  [0m [91m       ~~~[0m[39m
[31m[96mpackages/ai-interface/src/app/services/usage.service.ts[0m:[93m50[0m:[93m13[0m - [91merror[0m[90m TS7006: [0mParameter 'req' implicitly has an 'any' type.[39m
[31m[39m
[31m[7m50[0m       (sum, req) => sum + req.totalTokens,[39m
[31m[7m  [0m [91m            ~~~[0m[39m
[31m[96mpackages/ai-interface/src/app/services/usage.service.ts[0m:[93m54[0m:[93m8[0m - [91merror[0m[90m TS7006: [0mParameter 'sum' implicitly has an 'any' type.[39m
[31m[39m
[31m[7m54[0m       (sum, req) => sum + Number(req.cost),[39m
[31m[7m  [0m [91m       ~~~[0m[39m
[31m[96mpackages/ai-interface/src/app/services/usage.service.ts[0m:[93m54[0m:[93m13[0m - [91merror[0m[90m TS7006: [0mParameter 'req' implicitly has an 'any' type.[39m
[31m[39m
[31m[7m54[0m       (sum, req) => sum + Number(req.cost),[39m
[31m[7m  [0m [91m            ~~~[0m[39m
[31m[96mpackages/ai-interface/src/app/services/usage.service.ts[0m:[93m57[0m:[93m46[0m - [91merror[0m[90m TS7006: [0mParameter 'req' implicitly has an 'any' type.[39m
[31m[39m
[31m[7m57[0m     const cachedResponses = requests.filter((req) => req.cached).length;[39m
[31m[7m  [0m [91m                                             ~~~[0m[39m
[31m[96mpackages/ai-interface/src/app/services/usage.service.ts[0m:[93m63[0m:[93m23[0m - [91merror[0m[90m TS7006: [0mParameter 'req' implicitly has an 'any' type.[39m
[31m[39m
[31m[7m63[0m     requests.forEach((req) => {[39m
[31m[7m  [0m [91m                      ~~~[0m[39m
[31m[96mpackages/ai-interface/src/app/services/usage.service.ts[0m:[93m81[0m:[93m23[0m - [91merror[0m[90m TS7006: [0mParameter 'req' implicitly has an 'any' type.[39m
[31m[39m
[31m[7m81[0m     requests.forEach((req) => {[39m
[31m[7m  [0m [91m                      ~~~[0m[39m
[31m[96mpackages/ai-interface/src/app/services/usage.service.ts[0m:[93m115[0m:[93m30[0m - [91merror[0m[90m TS2339: [0mProperty 'aIRequest' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.[39m
[31m[39m
[31m[7m115[0m     return await this.prisma.aIRequest.findMany({[39m
[31m[7m   [0m [91m                             ~~~~~~~~~[0m[39m
[31mSTACK: [39m
[31mFailed to collect coverage from /Users/acarroll/dev/projects/orion/packages/ai-interface/src/app/services/prompt.service.ts[39m
[31mERROR: [96mpackages/ai-interface/src/app/services/prompt.service.ts[0m:[93m21[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'prompt' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.[39m
[31m[39m
[31m[7m21[0m     const existing = await this.prisma.prompt.findUnique({[39m
[31m[7m  [0m [91m                                       ~~~~~~[0m[39m
[31m[96mpackages/ai-interface/src/app/services/prompt.service.ts[0m:[93m29[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'prompt' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.[39m
[31m[39m
[31m[7m29[0m     const prompt = await this.prisma.prompt.create({[39m
[31m[7m  [0m [91m                                     ~~~~~~[0m[39m
[31m[96mpackages/ai-interface/src/app/services/prompt.service.ts[0m:[93m52[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'prompt' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.[39m
[31m[39m
[31m[7m52[0m     const existing = await this.prisma.prompt.findUnique({[39m
[31m[7m  [0m [91m                                       ~~~~~~[0m[39m
[31m[96mpackages/ai-interface/src/app/services/prompt.service.ts[0m:[93m63[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'prompt' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.[39m
[31m[39m
[31m[7m63[0m     const updated = await this.prisma.prompt.update({[39m
[31m[7m  [0m [91m                                      ~~~~~~[0m[39m
[31m[96mpackages/ai-interface/src/app/services/prompt.service.ts[0m:[93m81[0m:[93m38[0m - [91merror[0m[90m TS2339: [0mProperty 'prompt' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.[39m
[31m[39m
[31m[7m81[0m     const prompt = await this.prisma.prompt.findUnique({[39m
[31m[7m  [0m [91m                                     ~~~~~~[0m[39m
[31m[96mpackages/ai-interface/src/app/services/prompt.service.ts[0m:[93m96[0m:[93m39[0m - [91merror[0m[90m TS2339: [0mProperty 'prompt' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.[39m
[31m[39m
[31m[7m96[0m     const prompts = await this.prisma.prompt.findMany({[39m
[31m[7m  [0m [91m                                      ~~~~~~[0m[39m
[31m[96mpackages/ai-interface/src/app/services/prompt.service.ts[0m:[93m101[0m:[93m25[0m - [91merror[0m[90m TS7006: [0mParameter 'p' implicitly has an 'any' type.[39m
[31m[39m
[31m[7m101[0m     return prompts.map((p) => this.toResponseDto(p));[39m
[31m[7m   [0m [91m                        ~[0m[39m
[31m[96mpackages/ai-interface/src/app/services/prompt.service.ts[0m:[93m110[0m:[93m40[0m - [91merror[0m[90m TS2339: [0mProperty 'prompt' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.[39m
[31m[39m
[31m[7m110[0m     const existing = await this.prisma.prompt.findUnique({[39m
[31m[7m   [0m [91m                                       ~~~~~~[0m[39m
[31m[96mpackages/ai-interface/src/app/services/prompt.service.ts[0m:[93m118[0m:[93m23[0m - [91merror[0m[90m TS2339: [0mProperty 'prompt' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.[39m
[31m[39m
[31m[7m118[0m     await this.prisma.prompt.delete({[39m
[31m[7m   [0m [91m                      ~~~~~~[0m[39m
[31mSTACK: [39m
[31mFailed to collect coverage from /Users/acarroll/dev/projects/orion/packages/ai-interface/src/app/services/openai.service.ts[39m
[31mERROR: [96mpackages/ai-interface/src/app/services/openai.service.ts[0m:[93m92[0m:[93m20[0m - [91merror[0m[90m TS2322: [0mType '"user"' is not assignable to type 'ChatRole'.[39m
[31m[39m
[31m[7m92[0m       messages: [{ role: 'user', content: request.prompt }],[39m
[31m[7m  [0m [91m                   ~~~~[0m[39m
[31m[39m
[31m  [96mpackages/ai-interface/src/app/dto/chat-request.dto.ts[0m:[93m33[0m:[93m3[0m[39m
[31m    [7m33[0m   role!: ChatRole;[39m
[31m    [7m  [0m [96m  ~~~~[0m[39m
[31m    The expected type comes from property 'role' which is declared here on type 'ChatMessage'[39m
[31mSTACK: [39m
[31mFailed to collect coverage from /Users/acarroll/dev/projects/orion/packages/ai-interface/src/app/controllers/ai.controller.ts[39m
[31mERROR: [96mpackages/ai-interface/src/app/controllers/ai.controller.ts[0m:[93m16[0m:[93m22[0m - [91merror[0m[90m TS6133: [0m'from' is declared but its value is never read.[39m
[31m[39m
[31m[7m16[0m import { Observable, from } from 'rxjs';[39m
[31m[7m  [0m [91m                     ~~~~[0m[39m
[31mSTACK: [39m
[31mFailed to collect coverage from /Users/acarroll/dev/projects/orion/packages/ai-interface/src/app/services/ai-orchestrator.service.ts[39m
[31mERROR: [96mpackages/ai-interface/src/app/services/ai-orchestrator.service.ts[0m:[93m30[0m:[93m26[0m - [91merror[0m[90m TS2769: [0mNo overload matches this call.[39m
[31m  Overload 1 of 4, '(iterable?: Iterable<readonly [string, OpenAIService]> | null | undefined): Map<string, OpenAIService>', gave the following error.[39m
[31m    Argument of type '([string, OpenAIService] | [string, AnthropicService])[]' is not assignable to parameter of type 'Iterable<readonly [string, OpenAIService]>'.[39m
[31m      The types returned by '[Symbol.iterator]().next(...)' are incompatible between these types.[39m
[31m        Type 'IteratorResult<[string, OpenAIService] | [string, AnthropicService], undefined>' is not assignable to type 'IteratorResult<readonly [string, OpenAIService], any>'.[39m
[31m          Type 'IteratorYieldResult<[string, OpenAIService] | [string, AnthropicService]>' is not assignable to type 'IteratorResult<readonly [string, OpenAIService], any>'.[39m
[31m            Type 'IteratorYieldResult<[string, OpenAIService] | [string, AnthropicService]>' is not assignable to type 'IteratorYieldResult<readonly [string, OpenAIService]>'.[39m
[31m              Type '[string, OpenAIService] | [string, AnthropicService]' is not assignable to type 'readonly [string, OpenAIService]'.[39m
[31m                Type '[string, AnthropicService]' is not assignable to type 'readonly [string, OpenAIService]'.[39m
[31m                  Type at position 1 in source is not compatible with type at position 1 in target.[39m
[31m                    Type 'AnthropicService' is not assignable to type 'OpenAIService'.[39m
[31m                      Types have separate declarations of a private property 'logger'.[39m
[31m  Overload 2 of 4, '(entries?: readonly (readonly [string, OpenAIService])[] | null | undefined): Map<string, OpenAIService>', gave the following error.[39m
[31m    Type 'AnthropicService' is not assignable to type 'OpenAIService'.[39m
[31m      Types have separate declarations of a private property 'logger'.[39m
[31m[39m
[31m[7m30[0m     this.providers = new Map([[39m
[31m[7m  [0m [91m                         ~~~[0m[39m
[31m[39m
[31m[96mpackages/ai-interface/src/app/services/ai-orchestrator.service.ts[0m:[93m83[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'aIRequest' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.[39m
[31m[39m
[31m[7m83[0m     const aiRequest = await this.prisma.aIRequest.create({[39m
[31m[7m  [0m [91m                                        ~~~~~~~~~[0m[39m
[31m[96mpackages/ai-interface/src/app/services/ai-orchestrator.service.ts[0m:[93m191[0m:[93m41[0m - [91merror[0m[90m TS2339: [0mProperty 'aIRequest' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.[39m
[31m[39m
[31m[7m191[0m     const aiRequest = await this.prisma.aIRequest.create({[39m
[31m[7m   [0m [91m                                        ~~~~~~~~~[0m[39m
[31m[96mpackages/ai-interface/src/app/services/ai-orchestrator.service.ts[0m:[93m266[0m:[93m23[0m - [91merror[0m[90m TS2339: [0mProperty 'embedding' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.[39m
[31m[39m
[31m[7m266[0m     await this.prisma.embedding.create({[39m
[31m[7m   [0m [91m                      ~~~~~~~~~[0m[39m
[31mSTACK: [39m
----------------------------|---------|----------|---------|---------|-------------------
File                        | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
----------------------------|---------|----------|---------|---------|-------------------
[33;1mAll files                  [0m | [33;1m  52.08[0m | [31;1m   16.66[0m | [31;1m   37.5[0m | [33;1m  53.95[0m | [31;1m                 [0m 
[31;1m config                    [0m | [31;1m      0[0m | [31;1m       0[0m | [31;1m      0[0m | [31;1m      0[0m | [31;1m                 [0m 
[31;1m  ai.config.ts             [0m | [31;1m      0[0m | [31;1m       0[0m | [31;1m      0[0m | [31;1m      0[0m | [31;1m1-154            [0m 
[32;1m dto                       [0m | [32;1m  99.13[0m | [32;1m     100[0m | [33;1m  66.66[0m | [32;1m  99.13[0m | [31;1m                 [0m 
[32;1m  chat-request.dto.ts      [0m | [32;1m  95.45[0m | [32;1m     100[0m | [33;1m  66.66[0m | [32;1m  95.45[0m | [31;1m54               [0m 
[32;1m  chat-response.dto.ts     [0m | [32;1m    100[0m | [32;1m     100[0m | [32;1m    100[0m | [32;1m    100[0m | [33;1m                 [0m 
[32;1m  completion-request.dto.ts[0m | [32;1m    100[0m | [32;1m     100[0m | [32;1m    100[0m | [32;1m    100[0m | [33;1m                 [0m 
[32;1m  embedding-request.dto.ts [0m | [32;1m    100[0m | [32;1m     100[0m | [32;1m    100[0m | [32;1m    100[0m | [33;1m                 [0m 
[32;1m  prompt.dto.ts            [0m | [32;1m    100[0m | [32;1m     100[0m | [32;1m    100[0m | [32;1m    100[0m | [33;1m                 [0m 
[32;1m  usage.dto.ts             [0m | [32;1m    100[0m | [32;1m     100[0m | [32;1m    100[0m | [32;1m    100[0m | [33;1m                 [0m 
[31;1m services                  [0m | [31;1m      0[0m | [31;1m       0[0m | [31;1m      0[0m | [31;1m      0[0m | [31;1m                 [0m 
[31;1m  cache.service.ts         [0m | [31;1m      0[0m | [31;1m       0[0m | [31;1m      0[0m | [31;1m      0[0m | [31;1m1-158            [0m 
[33;1m utils                     [0m | [33;1m  52.23[0m | [31;1m   33.33[0m | [33;1m  66.66[0m | [33;1m  53.84[0m | [31;1m                 [0m 
[32;1m  cache-key.ts             [0m | [32;1m    100[0m | [32;1m     100[0m | [32;1m    100[0m | [32;1m    100[0m | [33;1m                 [0m 
[32;1m  cost-calculator.ts       [0m | [32;1m    100[0m | [32;1m   85.71[0m | [32;1m    100[0m | [32;1m    100[0m | [33;1m97,133           [0m 
[31;1m  retry.ts                 [0m | [31;1m      0[0m | [31;1m       0[0m | [31;1m      0[0m | [31;1m      0[0m | [31;1m15-123           [0m 
----------------------------|---------|----------|---------|---------|-------------------
[1m[31mJest: "global" coverage threshold for statements (80%) not met: 52.08%[39m[22m
[1m[31mJest: "global" coverage threshold for branches (80%) not met: 16.66%[39m[22m
[1m[31mJest: "global" coverage threshold for lines (80%) not met: 53.95%[39m[22m
[1m[31mJest: "global" coverage threshold for functions (80%) not met: 37.5%[39m[22m
[1mTest Suites: [22m[1m[31m3 failed[39m[22m, [1m[32m2 passed[39m[22m, 5 total
[1mTests:       [22m[1m[32m36 passed[39m[22m, 36 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        29.767 s
[2mRan all test suites[22m[2m.[22m
