> webpack-cli build --node-env=production

chunk (runtime: main) [1m[32mmain.js[39m[22m (main) 26.1 KiB [1m[33m[entry][39m[22m [1m[32m[rendered][39m[22m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m7:1[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m  5 |[39m [36mimport[39m { [33mLoginDto[39m[33m,[39m [33mRefreshTokenDto[39m[33m,[39m [33mLoginResponseDto[39m[33m,[39m [33mUserResponseDto[39m } [36mfrom[39m [32m'./dto'[39m[33m;[39m
   [90m  6 |[39m
  [31m[1m>[22m[39m[90m  7 |[39m describe([32m'AuthController'[39m[33m,[39m () [33m=>[39m {
   [90m    |[39m [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m  8 |[39m   [36mlet[39m controller[33m:[39m [33mAuthController[39m[33m;[39m
   [90m  9 |[39m   [36mlet[39m authService[33m:[39m jest[33m.[39m[33mMocked[39m[33m<[39m[33mAuthService[39m[33m>[39m[33m;[39m
   [90m 10 |[39m   [36mlet[39m sessionService[33m:[39m jest[33m.[39m[33mMocked[39m[33m<[39m[33mSessionService[39m[33m>[39m[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m9:20[22m[39m[1m[39m[22m
[90mTS2503: [39mCannot find namespace 'jest'.
  [0m [90m  7 |[39m describe([32m'AuthController'[39m[33m,[39m () [33m=>[39m {
   [90m  8 |[39m   [36mlet[39m controller[33m:[39m [33mAuthController[39m[33m;[39m
  [31m[1m>[22m[39m[90m  9 |[39m   [36mlet[39m authService[33m:[39m jest[33m.[39m[33mMocked[39m[33m<[39m[33mAuthService[39m[33m>[39m[33m;[39m
   [90m    |[39m                    [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 10 |[39m   [36mlet[39m sessionService[33m:[39m jest[33m.[39m[33mMocked[39m[33m<[39m[33mSessionService[39m[33m>[39m[33m;[39m
   [90m 11 |[39m
   [90m 12 |[39m   [36mconst[39m mockAuthService [33m=[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m10:23[22m[39m[1m[39m[22m
[90mTS2503: [39mCannot find namespace 'jest'.
  [0m [90m  8 |[39m   [36mlet[39m controller[33m:[39m [33mAuthController[39m[33m;[39m
   [90m  9 |[39m   [36mlet[39m authService[33m:[39m jest[33m.[39m[33mMocked[39m[33m<[39m[33mAuthService[39m[33m>[39m[33m;[39m
  [31m[1m>[22m[39m[90m 10 |[39m   [36mlet[39m sessionService[33m:[39m jest[33m.[39m[33mMocked[39m[33m<[39m[33mSessionService[39m[33m>[39m[33m;[39m
   [90m    |[39m                       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 11 |[39m
   [90m 12 |[39m   [36mconst[39m mockAuthService [33m=[39m {
   [90m 13 |[39m     login[33m:[39m jest[33m.[39mfn()[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m13:12[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 11 |[39m
   [90m 12 |[39m   [36mconst[39m mockAuthService [33m=[39m {
  [31m[1m>[22m[39m[90m 13 |[39m     login[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m            [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 14 |[39m     logout[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 15 |[39m     refreshTokens[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 16 |[39m     validateUser[33m:[39m jest[33m.[39mfn()[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m14:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 12 |[39m   [36mconst[39m mockAuthService [33m=[39m {
   [90m 13 |[39m     login[33m:[39m jest[33m.[39mfn()[33m,[39m
  [31m[1m>[22m[39m[90m 14 |[39m     logout[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 15 |[39m     refreshTokens[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 16 |[39m     validateUser[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 17 |[39m   }[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m15:20[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 13 |[39m     login[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 14 |[39m     logout[33m:[39m jest[33m.[39mfn()[33m,[39m
  [31m[1m>[22m[39m[90m 15 |[39m     refreshTokens[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m                    [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 16 |[39m     validateUser[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 17 |[39m   }[33m;[39m
   [90m 18 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m16:19[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 14 |[39m     logout[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 15 |[39m     refreshTokens[33m:[39m jest[33m.[39mfn()[33m,[39m
  [31m[1m>[22m[39m[90m 16 |[39m     validateUser[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m                   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 17 |[39m   }[33m;[39m
   [90m 18 |[39m
   [90m 19 |[39m   [36mconst[39m mockSessionService [33m=[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m20:21[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 18 |[39m
   [90m 19 |[39m   [36mconst[39m mockSessionService [33m=[39m {
  [31m[1m>[22m[39m[90m 20 |[39m     getRedisStatus[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m                     [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 21 |[39m   }[33m;[39m
   [90m 22 |[39m
   [90m 23 |[39m   [36mconst[39m mockLoginResponse[33m:[39m [33mLoginResponseDto[39m [33m=[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m42:3[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'beforeEach'.
  [0m [90m 40 |[39m   }[33m;[39m
   [90m 41 |[39m
  [31m[1m>[22m[39m[90m 42 |[39m   beforeEach([36masync[39m () [33m=>[39m {
   [90m    |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 43 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
   [90m 44 |[39m       controllers[33m:[39m [[33mAuthController[39m][33m,[39m
   [90m 45 |[39m       providers[33m:[39m [[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m55:5[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 53 |[39m     sessionService [33m=[39m module[33m.[39m[36mget[39m([33mSessionService[39m)[33m;[39m
   [90m 54 |[39m
  [31m[1m>[22m[39m[90m 55 |[39m     jest[33m.[39mclearAllMocks()[33m;[39m
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 56 |[39m   })[33m;[39m
   [90m 57 |[39m
   [90m 58 |[39m   afterEach(() [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m58:3[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'afterEach'.
  [0m [90m 56 |[39m   })[33m;[39m
   [90m 57 |[39m
  [31m[1m>[22m[39m[90m 58 |[39m   afterEach(() [33m=>[39m {
   [90m    |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 59 |[39m     jest[33m.[39mresetAllMocks()[33m;[39m
   [90m 60 |[39m   })[33m;[39m
   [90m 61 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m59:5[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 57 |[39m
   [90m 58 |[39m   afterEach(() [33m=>[39m {
  [31m[1m>[22m[39m[90m 59 |[39m     jest[33m.[39mresetAllMocks()[33m;[39m
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 60 |[39m   })[33m;[39m
   [90m 61 |[39m
   [90m 62 |[39m   describe([32m'login'[39m[33m,[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m62:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 60 |[39m   })[33m;[39m
   [90m 61 |[39m
  [31m[1m>[22m[39m[90m 62 |[39m   describe([32m'login'[39m[33m,[39m () [33m=>[39m {
   [90m    |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 63 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m 64 |[39m       expect(controller)[33m.[39mtoBeDefined()[33m;[39m
   [90m 65 |[39m       expect(controller[33m.[39mlogin)[33m.[39mtoBeDefined()[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m63:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 61 |[39m
   [90m 62 |[39m   describe([32m'login'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 63 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 64 |[39m       expect(controller)[33m.[39mtoBeDefined()[33m;[39m
   [90m 65 |[39m       expect(controller[33m.[39mlogin)[33m.[39mtoBeDefined()[33m;[39m
   [90m 66 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m64:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 62 |[39m   describe([32m'login'[39m[33m,[39m () [33m=>[39m {
   [90m 63 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 64 |[39m       expect(controller)[33m.[39mtoBeDefined()[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 65 |[39m       expect(controller[33m.[39mlogin)[33m.[39mtoBeDefined()[33m;[39m
   [90m 66 |[39m     })[33m;[39m
   [90m 67 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m65:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 63 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m 64 |[39m       expect(controller)[33m.[39mtoBeDefined()[33m;[39m
  [31m[1m>[22m[39m[90m 65 |[39m       expect(controller[33m.[39mlogin)[33m.[39mtoBeDefined()[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 66 |[39m     })[33m;[39m
   [90m 67 |[39m
   [90m 68 |[39m     it([32m'should successfully login a user'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m68:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 66 |[39m     })[33m;[39m
   [90m 67 |[39m
  [31m[1m>[22m[39m[90m 68 |[39m     it([32m'should successfully login a user'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 69 |[39m       [36mconst[39m loginDto[33m:[39m [33mLoginDto[39m [33m=[39m {
   [90m 70 |[39m         email[33m:[39m [32m'test@example.com'[39m[33m,[39m
   [90m 71 |[39m         password[33m:[39m [32m'password123'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m78:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 76 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m controller[33m.[39mlogin(loginDto)[33m;[39m
   [90m 77 |[39m
  [31m[1m>[22m[39m[90m 78 |[39m       expect(authService[33m.[39mlogin)[33m.[39mtoHaveBeenCalledWith(loginDto)[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 79 |[39m       expect(authService[33m.[39mlogin)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
   [90m 80 |[39m       expect(result)[33m.[39mtoEqual(mockLoginResponse)[33m;[39m
   [90m 81 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m79:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 77 |[39m
   [90m 78 |[39m       expect(authService[33m.[39mlogin)[33m.[39mtoHaveBeenCalledWith(loginDto)[33m;[39m
  [31m[1m>[22m[39m[90m 79 |[39m       expect(authService[33m.[39mlogin)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 80 |[39m       expect(result)[33m.[39mtoEqual(mockLoginResponse)[33m;[39m
   [90m 81 |[39m     })[33m;[39m
   [90m 82 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m80:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 78 |[39m       expect(authService[33m.[39mlogin)[33m.[39mtoHaveBeenCalledWith(loginDto)[33m;[39m
   [90m 79 |[39m       expect(authService[33m.[39mlogin)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 80 |[39m       expect(result)[33m.[39mtoEqual(mockLoginResponse)[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 81 |[39m     })[33m;[39m
   [90m 82 |[39m
   [90m 83 |[39m     it([32m'should handle different email formats'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m83:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 81 |[39m     })[33m;[39m
   [90m 82 |[39m
  [31m[1m>[22m[39m[90m 83 |[39m     it([32m'should handle different email formats'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 84 |[39m       [36mconst[39m emails [33m=[39m [
   [90m 85 |[39m         [32m'user@example.com'[39m[33m,[39m
   [90m 86 |[39m         [32m'user+tag@example.com'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m97:9[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m  95 |[39m         [36mawait[39m controller[33m.[39mlogin(loginDto)[33m;[39m
   [90m  96 |[39m
  [31m[1m>[22m[39m[90m  97 |[39m         expect(authService[33m.[39mlogin)[33m.[39mtoHaveBeenCalledWith(loginDto)[33m;[39m
   [90m     |[39m         [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m  98 |[39m       }
   [90m  99 |[39m     })[33m;[39m
   [90m 100 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m101:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m  99 |[39m     })[33m;[39m
   [90m 100 |[39m
  [31m[1m>[22m[39m[90m 101 |[39m     it([32m'should propagate errors from auth service'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 102 |[39m       [36mconst[39m loginDto[33m:[39m [33mLoginDto[39m [33m=[39m {
   [90m 103 |[39m         email[33m:[39m [32m'test@example.com'[39m[33m,[39m
   [90m 104 |[39m         password[33m:[39m [32m'wrongpassword'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m110:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 108 |[39m       mockAuthService[33m.[39mlogin[33m.[39mmockRejectedValue(error)[33m;[39m
   [90m 109 |[39m
  [31m[1m>[22m[39m[90m 110 |[39m       [36mawait[39m expect(controller[33m.[39mlogin(loginDto))[33m.[39mrejects[33m.[39mtoThrow([32m'Invalid credentials'[39m)[33m;[39m
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 111 |[39m     })[33m;[39m
   [90m 112 |[39m
   [90m 113 |[39m     it([32m'should handle empty password'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m113:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 111 |[39m     })[33m;[39m
   [90m 112 |[39m
  [31m[1m>[22m[39m[90m 113 |[39m     it([32m'should handle empty password'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 114 |[39m       [36mconst[39m loginDto[33m:[39m [33mLoginDto[39m [33m=[39m {
   [90m 115 |[39m         email[33m:[39m [32m'test@example.com'[39m[33m,[39m
   [90m 116 |[39m         password[33m:[39m [32m''[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m123:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 121 |[39m       [36mawait[39m controller[33m.[39mlogin(loginDto)[33m;[39m
   [90m 122 |[39m
  [31m[1m>[22m[39m[90m 123 |[39m       expect(authService[33m.[39mlogin)[33m.[39mtoHaveBeenCalledWith(loginDto)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 124 |[39m     })[33m;[39m
   [90m 125 |[39m   })[33m;[39m
   [90m 126 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m127:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 125 |[39m   })[33m;[39m
   [90m 126 |[39m
  [31m[1m>[22m[39m[90m 127 |[39m   describe([32m'logout'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 128 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m 129 |[39m       expect(controller[33m.[39mlogout)[33m.[39mtoBeDefined()[33m;[39m
   [90m 130 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m128:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 126 |[39m
   [90m 127 |[39m   describe([32m'logout'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 128 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 129 |[39m       expect(controller[33m.[39mlogout)[33m.[39mtoBeDefined()[33m;[39m
   [90m 130 |[39m     })[33m;[39m
   [90m 131 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m129:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 127 |[39m   describe([32m'logout'[39m[33m,[39m () [33m=>[39m {
   [90m 128 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 129 |[39m       expect(controller[33m.[39mlogout)[33m.[39mtoBeDefined()[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 130 |[39m     })[33m;[39m
   [90m 131 |[39m
   [90m 132 |[39m     it([32m'should successfully logout a user'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m132:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 130 |[39m     })[33m;[39m
   [90m 131 |[39m
  [31m[1m>[22m[39m[90m 132 |[39m     it([32m'should successfully logout a user'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 133 |[39m       [36mconst[39m req [33m=[39m { user[33m:[39m { id[33m:[39m [32m'user-123'[39m } }[33m;[39m
   [90m 134 |[39m       [36mconst[39m authHeader [33m=[39m [32m'Bearer access-token-xyz'[39m[33m;[39m
   [90m 135 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m140:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 138 |[39m       [36mawait[39m controller[33m.[39mlogout(req [36mas[39m any[33m,[39m authHeader)[33m;[39m
   [90m 139 |[39m
  [31m[1m>[22m[39m[90m 140 |[39m       expect(authService[33m.[39mlogout)[33m.[39mtoHaveBeenCalledWith([32m'user-123'[39m[33m,[39m [32m'access-token-xyz'[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 141 |[39m       expect(authService[33m.[39mlogout)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
   [90m 142 |[39m     })[33m;[39m
   [90m 143 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m141:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 139 |[39m
   [90m 140 |[39m       expect(authService[33m.[39mlogout)[33m.[39mtoHaveBeenCalledWith([32m'user-123'[39m[33m,[39m [32m'access-token-xyz'[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 141 |[39m       expect(authService[33m.[39mlogout)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 142 |[39m     })[33m;[39m
   [90m 143 |[39m
   [90m 144 |[39m     it([32m'should extract token from authorization header'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m144:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 142 |[39m     })[33m;[39m
   [90m 143 |[39m
  [31m[1m>[22m[39m[90m 144 |[39m     it([32m'should extract token from authorization header'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 145 |[39m       [36mconst[39m req [33m=[39m { user[33m:[39m { id[33m:[39m [32m'user-123'[39m } }[33m;[39m
   [90m 146 |[39m       [36mconst[39m authHeader [33m=[39m [32m'Bearer my-access-token'[39m[33m;[39m
   [90m 147 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m152:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 150 |[39m       [36mawait[39m controller[33m.[39mlogout(req [36mas[39m any[33m,[39m authHeader)[33m;[39m
   [90m 151 |[39m
  [31m[1m>[22m[39m[90m 152 |[39m       expect(authService[33m.[39mlogout)[33m.[39mtoHaveBeenCalledWith([32m'user-123'[39m[33m,[39m [32m'my-access-token'[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 153 |[39m     })[33m;[39m
   [90m 154 |[39m
   [90m 155 |[39m     it([32m'should handle authorization header without Bearer prefix'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m155:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 153 |[39m     })[33m;[39m
   [90m 154 |[39m
  [31m[1m>[22m[39m[90m 155 |[39m     it([32m'should handle authorization header without Bearer prefix'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 156 |[39m       [36mconst[39m req [33m=[39m { user[33m:[39m { id[33m:[39m [32m'user-123'[39m } }[33m;[39m
   [90m 157 |[39m       [36mconst[39m authHeader [33m=[39m [32m'access-token-xyz'[39m[33m;[39m
   [90m 158 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m163:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 161 |[39m       [36mawait[39m controller[33m.[39mlogout(req [36mas[39m any[33m,[39m authHeader)[33m;[39m
   [90m 162 |[39m
  [31m[1m>[22m[39m[90m 163 |[39m       expect(authService[33m.[39mlogout)[33m.[39mtoHaveBeenCalledWith([32m'user-123'[39m[33m,[39m [32m'access-token-xyz'[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 164 |[39m     })[33m;[39m
   [90m 165 |[39m
   [90m 166 |[39m     it([32m'should handle missing authorization header'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m166:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 164 |[39m     })[33m;[39m
   [90m 165 |[39m
  [31m[1m>[22m[39m[90m 166 |[39m     it([32m'should handle missing authorization header'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 167 |[39m       [36mconst[39m req [33m=[39m { user[33m:[39m { id[33m:[39m [32m'user-123'[39m } }[33m;[39m
   [90m 168 |[39m       [36mconst[39m authHeader [33m=[39m undefined[33m;[39m
   [90m 169 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m174:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 172 |[39m       [36mawait[39m controller[33m.[39mlogout(req [36mas[39m any[33m,[39m authHeader [36mas[39m any)[33m;[39m
   [90m 173 |[39m
  [31m[1m>[22m[39m[90m 174 |[39m       expect(authService[33m.[39mlogout)[33m.[39mtoHaveBeenCalledWith([32m'user-123'[39m[33m,[39m undefined)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 175 |[39m     })[33m;[39m
   [90m 176 |[39m
   [90m 177 |[39m     it([32m'should propagate errors from auth service'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m177:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 175 |[39m     })[33m;[39m
   [90m 176 |[39m
  [31m[1m>[22m[39m[90m 177 |[39m     it([32m'should propagate errors from auth service'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 178 |[39m       [36mconst[39m req [33m=[39m { user[33m:[39m { id[33m:[39m [32m'user-123'[39m } }[33m;[39m
   [90m 179 |[39m       [36mconst[39m authHeader [33m=[39m [32m'Bearer access-token'[39m[33m;[39m
   [90m 180 |[39m       [36mconst[39m error [33m=[39m [36mnew[39m [33mError[39m([32m'Logout failed'[39m)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m184:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 182 |[39m       mockAuthService[33m.[39mlogout[33m.[39mmockRejectedValue(error)[33m;[39m
   [90m 183 |[39m
  [31m[1m>[22m[39m[90m 184 |[39m       [36mawait[39m expect(controller[33m.[39mlogout(req [36mas[39m any[33m,[39m authHeader))[33m.[39mrejects[33m.[39mtoThrow([32m'Logout failed'[39m)[33m;[39m
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 185 |[39m     })[33m;[39m
   [90m 186 |[39m   })[33m;[39m
   [90m 187 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m188:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 186 |[39m   })[33m;[39m
   [90m 187 |[39m
  [31m[1m>[22m[39m[90m 188 |[39m   describe([32m'refresh'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 189 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m 190 |[39m       expect(controller[33m.[39mrefresh)[33m.[39mtoBeDefined()[33m;[39m
   [90m 191 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m189:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 187 |[39m
   [90m 188 |[39m   describe([32m'refresh'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 189 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 190 |[39m       expect(controller[33m.[39mrefresh)[33m.[39mtoBeDefined()[33m;[39m
   [90m 191 |[39m     })[33m;[39m
   [90m 192 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m190:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 188 |[39m   describe([32m'refresh'[39m[33m,[39m () [33m=>[39m {
   [90m 189 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 190 |[39m       expect(controller[33m.[39mrefresh)[33m.[39mtoBeDefined()[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 191 |[39m     })[33m;[39m
   [90m 192 |[39m
   [90m 193 |[39m     it([32m'should successfully refresh tokens'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m193:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 191 |[39m     })[33m;[39m
   [90m 192 |[39m
  [31m[1m>[22m[39m[90m 193 |[39m     it([32m'should successfully refresh tokens'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 194 |[39m       [36mconst[39m refreshTokenDto[33m:[39m [33mRefreshTokenDto[39m [33m=[39m {
   [90m 195 |[39m         refreshToken[33m:[39m [32m'valid-refresh-token'[39m[33m,[39m
   [90m 196 |[39m       }[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m202:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 200 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m controller[33m.[39mrefresh(refreshTokenDto)[33m;[39m
   [90m 201 |[39m
  [31m[1m>[22m[39m[90m 202 |[39m       expect(authService[33m.[39mrefreshTokens)[33m.[39mtoHaveBeenCalledWith(refreshTokenDto)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 203 |[39m       expect(authService[33m.[39mrefreshTokens)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
   [90m 204 |[39m       expect(result)[33m.[39mtoEqual(mockLoginResponse)[33m;[39m
   [90m 205 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m203:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 201 |[39m
   [90m 202 |[39m       expect(authService[33m.[39mrefreshTokens)[33m.[39mtoHaveBeenCalledWith(refreshTokenDto)[33m;[39m
  [31m[1m>[22m[39m[90m 203 |[39m       expect(authService[33m.[39mrefreshTokens)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 204 |[39m       expect(result)[33m.[39mtoEqual(mockLoginResponse)[33m;[39m
   [90m 205 |[39m     })[33m;[39m
   [90m 206 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m204:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 202 |[39m       expect(authService[33m.[39mrefreshTokens)[33m.[39mtoHaveBeenCalledWith(refreshTokenDto)[33m;[39m
   [90m 203 |[39m       expect(authService[33m.[39mrefreshTokens)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 204 |[39m       expect(result)[33m.[39mtoEqual(mockLoginResponse)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 205 |[39m     })[33m;[39m
   [90m 206 |[39m
   [90m 207 |[39m     it([32m'should handle different refresh token formats'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m207:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 205 |[39m     })[33m;[39m
   [90m 206 |[39m
  [31m[1m>[22m[39m[90m 207 |[39m     it([32m'should handle different refresh token formats'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 208 |[39m       [36mconst[39m tokens [33m=[39m [
   [90m 209 |[39m         [32m'short-token'[39m[33m,[39m
   [90m 210 |[39m         [32m'very-long-token-with-many-characters'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m221:9[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 219 |[39m         [36mawait[39m controller[33m.[39mrefresh(refreshTokenDto)[33m;[39m
   [90m 220 |[39m
  [31m[1m>[22m[39m[90m 221 |[39m         expect(authService[33m.[39mrefreshTokens)[33m.[39mtoHaveBeenCalledWith(refreshTokenDto)[33m;[39m
   [90m     |[39m         [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 222 |[39m       }
   [90m 223 |[39m     })[33m;[39m
   [90m 224 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m225:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 223 |[39m     })[33m;[39m
   [90m 224 |[39m
  [31m[1m>[22m[39m[90m 225 |[39m     it([32m'should propagate errors from auth service'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 226 |[39m       [36mconst[39m refreshTokenDto[33m:[39m [33mRefreshTokenDto[39m [33m=[39m {
   [90m 227 |[39m         refreshToken[33m:[39m [32m'invalid-token'[39m[33m,[39m
   [90m 228 |[39m       }[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m233:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 231 |[39m       mockAuthService[33m.[39mrefreshTokens[33m.[39mmockRejectedValue(error)[33m;[39m
   [90m 232 |[39m
  [31m[1m>[22m[39m[90m 233 |[39m       [36mawait[39m expect(controller[33m.[39mrefresh(refreshTokenDto))[33m.[39mrejects[33m.[39mtoThrow(
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 234 |[39m         [32m'Invalid refresh token'[39m
   [90m 235 |[39m       )[33m;[39m
   [90m 236 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m239:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 237 |[39m   })[33m;[39m
   [90m 238 |[39m
  [31m[1m>[22m[39m[90m 239 |[39m   describe([32m'getProfile'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 240 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m 241 |[39m       expect(controller[33m.[39mgetProfile)[33m.[39mtoBeDefined()[33m;[39m
   [90m 242 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m240:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 238 |[39m
   [90m 239 |[39m   describe([32m'getProfile'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 240 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 241 |[39m       expect(controller[33m.[39mgetProfile)[33m.[39mtoBeDefined()[33m;[39m
   [90m 242 |[39m     })[33m;[39m
   [90m 243 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m241:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 239 |[39m   describe([32m'getProfile'[39m[33m,[39m () [33m=>[39m {
   [90m 240 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 241 |[39m       expect(controller[33m.[39mgetProfile)[33m.[39mtoBeDefined()[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 242 |[39m     })[33m;[39m
   [90m 243 |[39m
   [90m 244 |[39m     it([32m'should return user profile'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m244:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 242 |[39m     })[33m;[39m
   [90m 243 |[39m
  [31m[1m>[22m[39m[90m 244 |[39m     it([32m'should return user profile'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 245 |[39m       [36mconst[39m req [33m=[39m { user[33m:[39m { id[33m:[39m [32m'user-123'[39m } }[33m;[39m
   [90m 246 |[39m
   [90m 247 |[39m       mockAuthService[33m.[39mvalidateUser[33m.[39mmockResolvedValue(mockUserResponse)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m251:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 249 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m controller[33m.[39mgetProfile(req [36mas[39m any)[33m;[39m
   [90m 250 |[39m
  [31m[1m>[22m[39m[90m 251 |[39m       expect(authService[33m.[39mvalidateUser)[33m.[39mtoHaveBeenCalledWith([32m'user-123'[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 252 |[39m       expect(authService[33m.[39mvalidateUser)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
   [90m 253 |[39m       expect(result)[33m.[39mtoEqual(mockUserResponse)[33m;[39m
   [90m 254 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m252:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 250 |[39m
   [90m 251 |[39m       expect(authService[33m.[39mvalidateUser)[33m.[39mtoHaveBeenCalledWith([32m'user-123'[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 252 |[39m       expect(authService[33m.[39mvalidateUser)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 253 |[39m       expect(result)[33m.[39mtoEqual(mockUserResponse)[33m;[39m
   [90m 254 |[39m     })[33m;[39m
   [90m 255 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m253:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 251 |[39m       expect(authService[33m.[39mvalidateUser)[33m.[39mtoHaveBeenCalledWith([32m'user-123'[39m)[33m;[39m
   [90m 252 |[39m       expect(authService[33m.[39mvalidateUser)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 253 |[39m       expect(result)[33m.[39mtoEqual(mockUserResponse)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 254 |[39m     })[33m;[39m
   [90m 255 |[39m
   [90m 256 |[39m     it([32m'should handle different user IDs'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m256:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 254 |[39m     })[33m;[39m
   [90m 255 |[39m
  [31m[1m>[22m[39m[90m 256 |[39m     it([32m'should handle different user IDs'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 257 |[39m       [36mconst[39m userIds [33m=[39m [
   [90m 258 |[39m         [32m'user-123'[39m[33m,[39m
   [90m 259 |[39m         [32m'550e8400-e29b-41d4-a716-446655440000'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m269:9[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 267 |[39m         [36mconst[39m result [33m=[39m [36mawait[39m controller[33m.[39mgetProfile(req [36mas[39m any)[33m;[39m
   [90m 268 |[39m
  [31m[1m>[22m[39m[90m 269 |[39m         expect(authService[33m.[39mvalidateUser)[33m.[39mtoHaveBeenCalledWith(userId)[33m;[39m
   [90m     |[39m         [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 270 |[39m         expect(result[33m.[39mid)[33m.[39mtoBe(userId)[33m;[39m
   [90m 271 |[39m       }
   [90m 272 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m270:9[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 268 |[39m
   [90m 269 |[39m         expect(authService[33m.[39mvalidateUser)[33m.[39mtoHaveBeenCalledWith(userId)[33m;[39m
  [31m[1m>[22m[39m[90m 270 |[39m         expect(result[33m.[39mid)[33m.[39mtoBe(userId)[33m;[39m
   [90m     |[39m         [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 271 |[39m       }
   [90m 272 |[39m     })[33m;[39m
   [90m 273 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m274:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 272 |[39m     })[33m;[39m
   [90m 273 |[39m
  [31m[1m>[22m[39m[90m 274 |[39m     it([32m'should propagate errors from auth service'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 275 |[39m       [36mconst[39m req [33m=[39m { user[33m:[39m { id[33m:[39m [32m'user-123'[39m } }[33m;[39m
   [90m 276 |[39m       [36mconst[39m error [33m=[39m [36mnew[39m [33mError[39m([32m'User not found'[39m)[33m;[39m
   [90m 277 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m280:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 278 |[39m       mockAuthService[33m.[39mvalidateUser[33m.[39mmockRejectedValue(error)[33m;[39m
   [90m 279 |[39m
  [31m[1m>[22m[39m[90m 280 |[39m       [36mawait[39m expect(controller[33m.[39mgetProfile(req [36mas[39m any))[33m.[39mrejects[33m.[39mtoThrow([32m'User not found'[39m)[33m;[39m
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 281 |[39m     })[33m;[39m
   [90m 282 |[39m   })[33m;[39m
   [90m 283 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m284:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 282 |[39m   })[33m;[39m
   [90m 283 |[39m
  [31m[1m>[22m[39m[90m 284 |[39m   describe([32m'getHealth'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 285 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m 286 |[39m       expect(controller[33m.[39mgetHealth)[33m.[39mtoBeDefined()[33m;[39m
   [90m 287 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m285:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 283 |[39m
   [90m 284 |[39m   describe([32m'getHealth'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 285 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 286 |[39m       expect(controller[33m.[39mgetHealth)[33m.[39mtoBeDefined()[33m;[39m
   [90m 287 |[39m     })[33m;[39m
   [90m 288 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m286:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 284 |[39m   describe([32m'getHealth'[39m[33m,[39m () [33m=>[39m {
   [90m 285 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 286 |[39m       expect(controller[33m.[39mgetHealth)[33m.[39mtoBeDefined()[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 287 |[39m     })[33m;[39m
   [90m 288 |[39m
   [90m 289 |[39m     it([32m'should return "ok" status when Redis is connected'[39m[33m,[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m289:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 287 |[39m     })[33m;[39m
   [90m 288 |[39m
  [31m[1m>[22m[39m[90m 289 |[39m     it([32m'should return "ok" status when Redis is connected'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 290 |[39m       mockSessionService[33m.[39mgetRedisStatus[33m.[39mmockReturnValue([32m'connected'[39m)[33m;[39m
   [90m 291 |[39m
   [90m 292 |[39m       [36mconst[39m result [33m=[39m controller[33m.[39mgetHealth()[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m294:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 292 |[39m       [36mconst[39m result [33m=[39m controller[33m.[39mgetHealth()[33m;[39m
   [90m 293 |[39m
  [31m[1m>[22m[39m[90m 294 |[39m       expect(sessionService[33m.[39mgetRedisStatus)[33m.[39mtoHaveBeenCalled()[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 295 |[39m       expect(result)[33m.[39mtoEqual({
   [90m 296 |[39m         status[33m:[39m [32m'ok'[39m[33m,[39m
   [90m 297 |[39m         redis[33m:[39m [32m'connected'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m295:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 293 |[39m
   [90m 294 |[39m       expect(sessionService[33m.[39mgetRedisStatus)[33m.[39mtoHaveBeenCalled()[33m;[39m
  [31m[1m>[22m[39m[90m 295 |[39m       expect(result)[33m.[39mtoEqual({
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 296 |[39m         status[33m:[39m [32m'ok'[39m[33m,[39m
   [90m 297 |[39m         redis[33m:[39m [32m'connected'[39m[33m,[39m
   [90m 298 |[39m         uptime[33m:[39m expect[33m.[39many([33mNumber[39m)[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m298:17[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 296 |[39m         status[33m:[39m [32m'ok'[39m[33m,[39m
   [90m 297 |[39m         redis[33m:[39m [32m'connected'[39m[33m,[39m
  [31m[1m>[22m[39m[90m 298 |[39m         uptime[33m:[39m expect[33m.[39many([33mNumber[39m)[33m,[39m
   [90m     |[39m                 [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 299 |[39m         timestamp[33m:[39m expect[33m.[39many([33mString[39m)[33m,[39m
   [90m 300 |[39m       })[33m;[39m
   [90m 301 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m299:20[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 297 |[39m         redis[33m:[39m [32m'connected'[39m[33m,[39m
   [90m 298 |[39m         uptime[33m:[39m expect[33m.[39many([33mNumber[39m)[33m,[39m
  [31m[1m>[22m[39m[90m 299 |[39m         timestamp[33m:[39m expect[33m.[39many([33mString[39m)[33m,[39m
   [90m     |[39m                    [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 300 |[39m       })[33m;[39m
   [90m 301 |[39m     })[33m;[39m
   [90m 302 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m303:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 301 |[39m     })[33m;[39m
   [90m 302 |[39m
  [31m[1m>[22m[39m[90m 303 |[39m     it([32m'should return "degraded" status when Redis is disconnected'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 304 |[39m       mockSessionService[33m.[39mgetRedisStatus[33m.[39mmockReturnValue([32m'disconnected'[39m)[33m;[39m
   [90m 305 |[39m
   [90m 306 |[39m       [36mconst[39m result [33m=[39m controller[33m.[39mgetHealth()[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m308:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 306 |[39m       [36mconst[39m result [33m=[39m controller[33m.[39mgetHealth()[33m;[39m
   [90m 307 |[39m
  [31m[1m>[22m[39m[90m 308 |[39m       expect(result)[33m.[39mtoEqual({
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 309 |[39m         status[33m:[39m [32m'degraded'[39m[33m,[39m
   [90m 310 |[39m         redis[33m:[39m [32m'disconnected'[39m[33m,[39m
   [90m 311 |[39m         uptime[33m:[39m expect[33m.[39many([33mNumber[39m)[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m311:17[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 309 |[39m         status[33m:[39m [32m'degraded'[39m[33m,[39m
   [90m 310 |[39m         redis[33m:[39m [32m'disconnected'[39m[33m,[39m
  [31m[1m>[22m[39m[90m 311 |[39m         uptime[33m:[39m expect[33m.[39many([33mNumber[39m)[33m,[39m
   [90m     |[39m                 [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 312 |[39m         timestamp[33m:[39m expect[33m.[39many([33mString[39m)[33m,[39m
   [90m 313 |[39m       })[33m;[39m
   [90m 314 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m312:20[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 310 |[39m         redis[33m:[39m [32m'disconnected'[39m[33m,[39m
   [90m 311 |[39m         uptime[33m:[39m expect[33m.[39many([33mNumber[39m)[33m,[39m
  [31m[1m>[22m[39m[90m 312 |[39m         timestamp[33m:[39m expect[33m.[39many([33mString[39m)[33m,[39m
   [90m     |[39m                    [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 313 |[39m       })[33m;[39m
   [90m 314 |[39m     })[33m;[39m
   [90m 315 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m316:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 314 |[39m     })[33m;[39m
   [90m 315 |[39m
  [31m[1m>[22m[39m[90m 316 |[39m     it([32m'should include uptime in health response'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 317 |[39m       mockSessionService[33m.[39mgetRedisStatus[33m.[39mmockReturnValue([32m'connected'[39m)[33m;[39m
   [90m 318 |[39m
   [90m 319 |[39m       [36mconst[39m result [33m=[39m controller[33m.[39mgetHealth()[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m321:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 319 |[39m       [36mconst[39m result [33m=[39m controller[33m.[39mgetHealth()[33m;[39m
   [90m 320 |[39m
  [31m[1m>[22m[39m[90m 321 |[39m       expect(result[33m.[39muptime)[33m.[39mtoBeGreaterThan([35m0[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 322 |[39m       expect([36mtypeof[39m result[33m.[39muptime)[33m.[39mtoBe([32m'number'[39m)[33m;[39m
   [90m 323 |[39m     })[33m;[39m
   [90m 324 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m322:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 320 |[39m
   [90m 321 |[39m       expect(result[33m.[39muptime)[33m.[39mtoBeGreaterThan([35m0[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 322 |[39m       expect([36mtypeof[39m result[33m.[39muptime)[33m.[39mtoBe([32m'number'[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 323 |[39m     })[33m;[39m
   [90m 324 |[39m
   [90m 325 |[39m     it([32m'should include valid ISO timestamp'[39m[33m,[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m325:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 323 |[39m     })[33m;[39m
   [90m 324 |[39m
  [31m[1m>[22m[39m[90m 325 |[39m     it([32m'should include valid ISO timestamp'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 326 |[39m       mockSessionService[33m.[39mgetRedisStatus[33m.[39mmockReturnValue([32m'connected'[39m)[33m;[39m
   [90m 327 |[39m
   [90m 328 |[39m       [36mconst[39m result [33m=[39m controller[33m.[39mgetHealth()[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m330:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 328 |[39m       [36mconst[39m result [33m=[39m controller[33m.[39mgetHealth()[33m;[39m
   [90m 329 |[39m
  [31m[1m>[22m[39m[90m 330 |[39m       expect(result[33m.[39mtimestamp)[33m.[39mtoMatch([35m/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}/[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 331 |[39m       expect(() [33m=>[39m [36mnew[39m [33mDate[39m(result[33m.[39mtimestamp))[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
   [90m 332 |[39m     })[33m;[39m
   [90m 333 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m331:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 329 |[39m
   [90m 330 |[39m       expect(result[33m.[39mtimestamp)[33m.[39mtoMatch([35m/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}/[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 331 |[39m       expect(() [33m=>[39m [36mnew[39m [33mDate[39m(result[33m.[39mtimestamp))[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 332 |[39m     })[33m;[39m
   [90m 333 |[39m
   [90m 334 |[39m     it([32m'should handle rapid successive health checks'[39m[33m,[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m334:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 332 |[39m     })[33m;[39m
   [90m 333 |[39m
  [31m[1m>[22m[39m[90m 334 |[39m     it([32m'should handle rapid successive health checks'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 335 |[39m       mockSessionService[33m.[39mgetRedisStatus[33m.[39mmockReturnValue([32m'connected'[39m)[33m;[39m
   [90m 336 |[39m
   [90m 337 |[39m       [36mconst[39m results [33m=[39m [33mArray[39m[33m.[39m[36mfrom[39m({ length[33m:[39m [35m100[39m }[33m,[39m () [33m=>[39m controller[33m.[39mgetHealth())[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m340:9[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 338 |[39m
   [90m 339 |[39m       results[33m.[39mforEach((result) [33m=>[39m {
  [31m[1m>[22m[39m[90m 340 |[39m         expect(result[33m.[39mstatus)[33m.[39mtoBe([32m'ok'[39m)[33m;[39m
   [90m     |[39m         [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 341 |[39m         expect(result[33m.[39mredis)[33m.[39mtoBe([32m'connected'[39m)[33m;[39m
   [90m 342 |[39m       })[33m;[39m
   [90m 343 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m341:9[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 339 |[39m       results[33m.[39mforEach((result) [33m=>[39m {
   [90m 340 |[39m         expect(result[33m.[39mstatus)[33m.[39mtoBe([32m'ok'[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 341 |[39m         expect(result[33m.[39mredis)[33m.[39mtoBe([32m'connected'[39m)[33m;[39m
   [90m     |[39m         [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 342 |[39m       })[33m;[39m
   [90m 343 |[39m
   [90m 344 |[39m       expect(sessionService[33m.[39mgetRedisStatus)[33m.[39mtoHaveBeenCalledTimes([35m100[39m)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m344:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 342 |[39m       })[33m;[39m
   [90m 343 |[39m
  [31m[1m>[22m[39m[90m 344 |[39m       expect(sessionService[33m.[39mgetRedisStatus)[33m.[39mtoHaveBeenCalledTimes([35m100[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 345 |[39m     })[33m;[39m
   [90m 346 |[39m   })[33m;[39m
   [90m 347 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m348:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 346 |[39m   })[33m;[39m
   [90m 347 |[39m
  [31m[1m>[22m[39m[90m 348 |[39m   describe([32m'integration scenarios'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 349 |[39m     it([32m'should handle complete auth flow'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m 350 |[39m       [90m// Login[39m
   [90m 351 |[39m       [36mconst[39m loginDto[33m:[39m [33mLoginDto[39m [33m=[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m349:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 347 |[39m
   [90m 348 |[39m   describe([32m'integration scenarios'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 349 |[39m     it([32m'should handle complete auth flow'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 350 |[39m       [90m// Login[39m
   [90m 351 |[39m       [36mconst[39m loginDto[33m:[39m [33mLoginDto[39m [33m=[39m {
   [90m 352 |[39m         email[33m:[39m [32m'test@example.com'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m358:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 356 |[39m
   [90m 357 |[39m       [36mconst[39m loginResult [33m=[39m [36mawait[39m controller[33m.[39mlogin(loginDto)[33m;[39m
  [31m[1m>[22m[39m[90m 358 |[39m       expect(loginResult[33m.[39maccessToken)[33m.[39mtoBeDefined()[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 359 |[39m
   [90m 360 |[39m       [90m// Get profile[39m
   [90m 361 |[39m       [36mconst[39m req [33m=[39m { user[33m:[39m { id[33m:[39m mockLoginResponse[33m.[39muser[33m.[39mid } }[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m365:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 363 |[39m
   [90m 364 |[39m       [36mconst[39m profileResult [33m=[39m [36mawait[39m controller[33m.[39mgetProfile(req [36mas[39m any)[33m;[39m
  [31m[1m>[22m[39m[90m 365 |[39m       expect(profileResult[33m.[39mid)[33m.[39mtoBe(mockLoginResponse[33m.[39muser[33m.[39mid)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 366 |[39m
   [90m 367 |[39m       [90m// Logout[39m
   [90m 368 |[39m       [36mconst[39m authHeader [33m=[39m [32m`Bearer ${loginResult.accessToken}`[39m[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m372:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 370 |[39m
   [90m 371 |[39m       [36mawait[39m controller[33m.[39mlogout(req [36mas[39m any[33m,[39m authHeader)[33m;[39m
  [31m[1m>[22m[39m[90m 372 |[39m       expect(authService[33m.[39mlogout)[33m.[39mtoHaveBeenCalledWith(
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 373 |[39m         mockLoginResponse[33m.[39muser[33m.[39mid[33m,[39m
   [90m 374 |[39m         loginResult[33m.[39maccessToken
   [90m 375 |[39m       )[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m378:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 376 |[39m     })[33m;[39m
   [90m 377 |[39m
  [31m[1m>[22m[39m[90m 378 |[39m     it([32m'should handle token refresh flow'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 379 |[39m       [90m// Initial login[39m
   [90m 380 |[39m       [36mconst[39m loginDto[33m:[39m [33mLoginDto[39m [33m=[39m {
   [90m 381 |[39m         email[33m:[39m [32m'test@example.com'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m400:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 398 |[39m
   [90m 399 |[39m       [36mconst[39m refreshResult [33m=[39m [36mawait[39m controller[33m.[39mrefresh(refreshTokenDto)[33m;[39m
  [31m[1m>[22m[39m[90m 400 |[39m       expect(refreshResult[33m.[39maccessToken)[33m.[39mtoBe([32m'new-access-token'[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 401 |[39m       expect(refreshResult[33m.[39mrefreshToken)[33m.[39mtoBe([32m'new-refresh-token'[39m)[33m;[39m
   [90m 402 |[39m     })[33m;[39m
   [90m 403 |[39m   })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m401:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 399 |[39m       [36mconst[39m refreshResult [33m=[39m [36mawait[39m controller[33m.[39mrefresh(refreshTokenDto)[33m;[39m
   [90m 400 |[39m       expect(refreshResult[33m.[39maccessToken)[33m.[39mtoBe([32m'new-access-token'[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 401 |[39m       expect(refreshResult[33m.[39mrefreshToken)[33m.[39mtoBe([32m'new-refresh-token'[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 402 |[39m     })[33m;[39m
   [90m 403 |[39m   })[33m;[39m
   [90m 404 |[39m })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m10:1[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m  8 |[39m [36mimport[39m { [33mLoginDto[39m[33m,[39m [33mRefreshTokenDto[39m } [36mfrom[39m [32m'../dto'[39m[33m;[39m
   [90m  9 |[39m
  [31m[1m>[22m[39m[90m 10 |[39m describe([32m'AuthService'[39m[33m,[39m () [33m=>[39m {
   [90m    |[39m [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 11 |[39m   [36mlet[39m service[33m:[39m [33mAuthService[39m[33m;[39m
   [90m 12 |[39m
   [90m 13 |[39m   [36mconst[39m mockPrismaService [33m=[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m15:19[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 13 |[39m   [36mconst[39m mockPrismaService [33m=[39m {
   [90m 14 |[39m     user[33m:[39m {
  [31m[1m>[22m[39m[90m 15 |[39m       findUnique[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m                   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 16 |[39m       update[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 17 |[39m     }[33m,[39m
   [90m 18 |[39m     refreshToken[33m:[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m16:15[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 14 |[39m     user[33m:[39m {
   [90m 15 |[39m       findUnique[33m:[39m jest[33m.[39mfn()[33m,[39m
  [31m[1m>[22m[39m[90m 16 |[39m       update[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m               [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 17 |[39m     }[33m,[39m
   [90m 18 |[39m     refreshToken[33m:[39m {
   [90m 19 |[39m       findUnique[33m:[39m jest[33m.[39mfn()[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m19:19[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 17 |[39m     }[33m,[39m
   [90m 18 |[39m     refreshToken[33m:[39m {
  [31m[1m>[22m[39m[90m 19 |[39m       findUnique[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m                   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 20 |[39m       create[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 21 |[39m       update[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 22 |[39m       updateMany[33m:[39m jest[33m.[39mfn()[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m20:15[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 18 |[39m     refreshToken[33m:[39m {
   [90m 19 |[39m       findUnique[33m:[39m jest[33m.[39mfn()[33m,[39m
  [31m[1m>[22m[39m[90m 20 |[39m       create[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m               [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 21 |[39m       update[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 22 |[39m       updateMany[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 23 |[39m     }[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m21:15[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 19 |[39m       findUnique[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 20 |[39m       create[33m:[39m jest[33m.[39mfn()[33m,[39m
  [31m[1m>[22m[39m[90m 21 |[39m       update[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m               [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 22 |[39m       updateMany[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 23 |[39m     }[33m,[39m
   [90m 24 |[39m   }[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m22:19[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 20 |[39m       create[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 21 |[39m       update[33m:[39m jest[33m.[39mfn()[33m,[39m
  [31m[1m>[22m[39m[90m 22 |[39m       updateMany[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m                   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 23 |[39m     }[33m,[39m
   [90m 24 |[39m   }[33m;[39m
   [90m 25 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m27:11[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 25 |[39m
   [90m 26 |[39m   [36mconst[39m mockJwtService [33m=[39m {
  [31m[1m>[22m[39m[90m 27 |[39m     sign[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m           [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 28 |[39m     decode[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 29 |[39m   }[33m;[39m
   [90m 30 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m28:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 26 |[39m   [36mconst[39m mockJwtService [33m=[39m {
   [90m 27 |[39m     sign[33m:[39m jest[33m.[39mfn()[33m,[39m
  [31m[1m>[22m[39m[90m 28 |[39m     decode[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 29 |[39m   }[33m;[39m
   [90m 30 |[39m
   [90m 31 |[39m   [36mconst[39m mockHashService [33m=[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m32:11[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 30 |[39m
   [90m 31 |[39m   [36mconst[39m mockHashService [33m=[39m {
  [31m[1m>[22m[39m[90m 32 |[39m     hash[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m           [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 33 |[39m     compare[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 34 |[39m   }[33m;[39m
   [90m 35 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m33:14[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 31 |[39m   [36mconst[39m mockHashService [33m=[39m {
   [90m 32 |[39m     hash[33m:[39m jest[33m.[39mfn()[33m,[39m
  [31m[1m>[22m[39m[90m 33 |[39m     compare[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m              [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 34 |[39m   }[33m;[39m
   [90m 35 |[39m
   [90m 36 |[39m   [36mconst[39m mockSessionService [33m=[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m37:20[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 35 |[39m
   [90m 36 |[39m   [36mconst[39m mockSessionService [33m=[39m {
  [31m[1m>[22m[39m[90m 37 |[39m     createSession[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m                    [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 38 |[39m     deleteSession[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 39 |[39m     blacklistToken[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 40 |[39m   }[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m38:20[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 36 |[39m   [36mconst[39m mockSessionService [33m=[39m {
   [90m 37 |[39m     createSession[33m:[39m jest[33m.[39mfn()[33m,[39m
  [31m[1m>[22m[39m[90m 38 |[39m     deleteSession[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m                    [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 39 |[39m     blacklistToken[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 40 |[39m   }[33m;[39m
   [90m 41 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m39:21[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 37 |[39m     createSession[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 38 |[39m     deleteSession[33m:[39m jest[33m.[39mfn()[33m,[39m
  [31m[1m>[22m[39m[90m 39 |[39m     blacklistToken[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m                     [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 40 |[39m   }[33m;[39m
   [90m 41 |[39m
   [90m 42 |[39m   [36mconst[39m mockUser [33m=[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m52:3[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'beforeEach'.
  [0m [90m 50 |[39m   }[33m;[39m
   [90m 51 |[39m
  [31m[1m>[22m[39m[90m 52 |[39m   beforeEach([36masync[39m () [33m=>[39m {
   [90m    |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 53 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
   [90m 54 |[39m       providers[33m:[39m [
   [90m 55 |[39m         [33mAuthService[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m65:5[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 63 |[39m     service [33m=[39m module[33m.[39m[36mget[39m[33m<[39m[33mAuthService[39m[33m>[39m([33mAuthService[39m)[33m;[39m
   [90m 64 |[39m
  [31m[1m>[22m[39m[90m 65 |[39m     jest[33m.[39mclearAllMocks()[33m;[39m
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 66 |[39m   })[33m;[39m
   [90m 67 |[39m
   [90m 68 |[39m   afterEach(() [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m68:3[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'afterEach'.
  [0m [90m 66 |[39m   })[33m;[39m
   [90m 67 |[39m
  [31m[1m>[22m[39m[90m 68 |[39m   afterEach(() [33m=>[39m {
   [90m    |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 69 |[39m     jest[33m.[39mresetAllMocks()[33m;[39m
   [90m 70 |[39m   })[33m;[39m
   [90m 71 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m69:5[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 67 |[39m
   [90m 68 |[39m   afterEach(() [33m=>[39m {
  [31m[1m>[22m[39m[90m 69 |[39m     jest[33m.[39mresetAllMocks()[33m;[39m
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 70 |[39m   })[33m;[39m
   [90m 71 |[39m
   [90m 72 |[39m   describe([32m'login'[39m[33m,[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m72:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 70 |[39m   })[33m;[39m
   [90m 71 |[39m
  [31m[1m>[22m[39m[90m 72 |[39m   describe([32m'login'[39m[33m,[39m () [33m=>[39m {
   [90m    |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 73 |[39m     [36mconst[39m loginDto[33m:[39m [33mLoginDto[39m [33m=[39m {
   [90m 74 |[39m       email[33m:[39m [32m'test@example.com'[39m[33m,[39m
   [90m 75 |[39m       password[33m:[39m [32m'password123'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m78:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 76 |[39m     }[33m;[39m
   [90m 77 |[39m
  [31m[1m>[22m[39m[90m 78 |[39m     it([32m'should successfully login a user with valid credentials'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 79 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockResolvedValue(mockUser)[33m;[39m
   [90m 80 |[39m       mockHashService[33m.[39mcompare[33m.[39mmockResolvedValue([36mtrue[39m)[33m;[39m
   [90m 81 |[39m       mockJwtService[33m.[39msign[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m97:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m  95 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39mlogin(loginDto)[33m;[39m
   [90m  96 |[39m
  [31m[1m>[22m[39m[90m  97 |[39m       expect(mockPrismaService[33m.[39muser[33m.[39mfindUnique)[33m.[39mtoHaveBeenCalledWith({
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m  98 |[39m         where[33m:[39m { email[33m:[39m loginDto[33m.[39memail }[33m,[39m
   [90m  99 |[39m       })[33m;[39m
   [90m 100 |[39m       expect(mockHashService[33m.[39mcompare)[33m.[39mtoHaveBeenCalledWith([0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m100:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m  98 |[39m         where[33m:[39m { email[33m:[39m loginDto[33m.[39memail }[33m,[39m
   [90m  99 |[39m       })[33m;[39m
  [31m[1m>[22m[39m[90m 100 |[39m       expect(mockHashService[33m.[39mcompare)[33m.[39mtoHaveBeenCalledWith(
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 101 |[39m         loginDto[33m.[39mpassword[33m,[39m
   [90m 102 |[39m         mockUser[33m.[39mpassword
   [90m 103 |[39m       )[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m104:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 102 |[39m         mockUser[33m.[39mpassword
   [90m 103 |[39m       )[33m;[39m
  [31m[1m>[22m[39m[90m 104 |[39m       expect(mockPrismaService[33m.[39muser[33m.[39mupdate)[33m.[39mtoHaveBeenCalledWith({
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 105 |[39m         where[33m:[39m { id[33m:[39m mockUser[33m.[39mid }[33m,[39m
   [90m 106 |[39m         data[33m:[39m { lastLoginAt[33m:[39m expect[33m.[39many([33mDate[39m) }[33m,[39m
   [90m 107 |[39m       })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m106:30[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 104 |[39m       expect(mockPrismaService[33m.[39muser[33m.[39mupdate)[33m.[39mtoHaveBeenCalledWith({
   [90m 105 |[39m         where[33m:[39m { id[33m:[39m mockUser[33m.[39mid }[33m,[39m
  [31m[1m>[22m[39m[90m 106 |[39m         data[33m:[39m { lastLoginAt[33m:[39m expect[33m.[39many([33mDate[39m) }[33m,[39m
   [90m     |[39m                              [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 107 |[39m       })[33m;[39m
   [90m 108 |[39m       expect(result)[33m.[39mtoEqual({
   [90m 109 |[39m         accessToken[33m:[39m [32m'access-token-xyz'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m108:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 106 |[39m         data[33m:[39m { lastLoginAt[33m:[39m expect[33m.[39many([33mDate[39m) }[33m,[39m
   [90m 107 |[39m       })[33m;[39m
  [31m[1m>[22m[39m[90m 108 |[39m       expect(result)[33m.[39mtoEqual({
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 109 |[39m         accessToken[33m:[39m [32m'access-token-xyz'[39m[33m,[39m
   [90m 110 |[39m         refreshToken[33m:[39m [32m'refresh-token-abc'[39m[33m,[39m
   [90m 111 |[39m         expiresIn[33m:[39m [35m15[39m [33m*[39m [35m60[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m121:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 119 |[39m     })[33m;[39m
   [90m 120 |[39m
  [31m[1m>[22m[39m[90m 121 |[39m     it([32m'should throw UnauthorizedException when user does not exist'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 122 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockResolvedValue([36mnull[39m)[33m;[39m
   [90m 123 |[39m
   [90m 124 |[39m       [36mawait[39m expect(service[33m.[39mlogin(loginDto))[33m.[39mrejects[33m.[39mtoThrow([33mUnauthorizedException[39m)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m124:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 122 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockResolvedValue([36mnull[39m)[33m;[39m
   [90m 123 |[39m
  [31m[1m>[22m[39m[90m 124 |[39m       [36mawait[39m expect(service[33m.[39mlogin(loginDto))[33m.[39mrejects[33m.[39mtoThrow([33mUnauthorizedException[39m)[33m;[39m
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 125 |[39m       [36mawait[39m expect(service[33m.[39mlogin(loginDto))[33m.[39mrejects[33m.[39mtoThrow([32m'Invalid credentials'[39m)[33m;[39m
   [90m 126 |[39m       expect(mockHashService[33m.[39mcompare)[33m.[39mnot[33m.[39mtoHaveBeenCalled()[33m;[39m
   [90m 127 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m125:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 123 |[39m
   [90m 124 |[39m       [36mawait[39m expect(service[33m.[39mlogin(loginDto))[33m.[39mrejects[33m.[39mtoThrow([33mUnauthorizedException[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 125 |[39m       [36mawait[39m expect(service[33m.[39mlogin(loginDto))[33m.[39mrejects[33m.[39mtoThrow([32m'Invalid credentials'[39m)[33m;[39m
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 126 |[39m       expect(mockHashService[33m.[39mcompare)[33m.[39mnot[33m.[39mtoHaveBeenCalled()[33m;[39m
   [90m 127 |[39m     })[33m;[39m
   [90m 128 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m126:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 124 |[39m       [36mawait[39m expect(service[33m.[39mlogin(loginDto))[33m.[39mrejects[33m.[39mtoThrow([33mUnauthorizedException[39m)[33m;[39m
   [90m 125 |[39m       [36mawait[39m expect(service[33m.[39mlogin(loginDto))[33m.[39mrejects[33m.[39mtoThrow([32m'Invalid credentials'[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 126 |[39m       expect(mockHashService[33m.[39mcompare)[33m.[39mnot[33m.[39mtoHaveBeenCalled()[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 127 |[39m     })[33m;[39m
   [90m 128 |[39m
   [90m 129 |[39m     it([32m'should throw UnauthorizedException when user is inactive'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m129:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 127 |[39m     })[33m;[39m
   [90m 128 |[39m
  [31m[1m>[22m[39m[90m 129 |[39m     it([32m'should throw UnauthorizedException when user is inactive'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 130 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockResolvedValue({
   [90m 131 |[39m         [33m...[39mmockUser[33m,[39m
   [90m 132 |[39m         isActive[33m:[39m [36mfalse[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m135:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 133 |[39m       })[33m;[39m
   [90m 134 |[39m
  [31m[1m>[22m[39m[90m 135 |[39m       [36mawait[39m expect(service[33m.[39mlogin(loginDto))[33m.[39mrejects[33m.[39mtoThrow([33mUnauthorizedException[39m)[33m;[39m
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 136 |[39m       [36mawait[39m expect(service[33m.[39mlogin(loginDto))[33m.[39mrejects[33m.[39mtoThrow([32m'User account is inactive'[39m)[33m;[39m
   [90m 137 |[39m       expect(mockHashService[33m.[39mcompare)[33m.[39mnot[33m.[39mtoHaveBeenCalled()[33m;[39m
   [90m 138 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m136:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 134 |[39m
   [90m 135 |[39m       [36mawait[39m expect(service[33m.[39mlogin(loginDto))[33m.[39mrejects[33m.[39mtoThrow([33mUnauthorizedException[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 136 |[39m       [36mawait[39m expect(service[33m.[39mlogin(loginDto))[33m.[39mrejects[33m.[39mtoThrow([32m'User account is inactive'[39m)[33m;[39m
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 137 |[39m       expect(mockHashService[33m.[39mcompare)[33m.[39mnot[33m.[39mtoHaveBeenCalled()[33m;[39m
   [90m 138 |[39m     })[33m;[39m
   [90m 139 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m137:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 135 |[39m       [36mawait[39m expect(service[33m.[39mlogin(loginDto))[33m.[39mrejects[33m.[39mtoThrow([33mUnauthorizedException[39m)[33m;[39m
   [90m 136 |[39m       [36mawait[39m expect(service[33m.[39mlogin(loginDto))[33m.[39mrejects[33m.[39mtoThrow([32m'User account is inactive'[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 137 |[39m       expect(mockHashService[33m.[39mcompare)[33m.[39mnot[33m.[39mtoHaveBeenCalled()[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 138 |[39m     })[33m;[39m
   [90m 139 |[39m
   [90m 140 |[39m     it([32m'should throw UnauthorizedException when password is invalid'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m140:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 138 |[39m     })[33m;[39m
   [90m 139 |[39m
  [31m[1m>[22m[39m[90m 140 |[39m     it([32m'should throw UnauthorizedException when password is invalid'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 141 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockResolvedValue(mockUser)[33m;[39m
   [90m 142 |[39m       mockHashService[33m.[39mcompare[33m.[39mmockResolvedValue([36mfalse[39m)[33m;[39m
   [90m 143 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m144:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 142 |[39m       mockHashService[33m.[39mcompare[33m.[39mmockResolvedValue([36mfalse[39m)[33m;[39m
   [90m 143 |[39m
  [31m[1m>[22m[39m[90m 144 |[39m       [36mawait[39m expect(service[33m.[39mlogin(loginDto))[33m.[39mrejects[33m.[39mtoThrow([33mUnauthorizedException[39m)[33m;[39m
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 145 |[39m       [36mawait[39m expect(service[33m.[39mlogin(loginDto))[33m.[39mrejects[33m.[39mtoThrow([32m'Invalid credentials'[39m)[33m;[39m
   [90m 146 |[39m     })[33m;[39m
   [90m 147 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m145:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 143 |[39m
   [90m 144 |[39m       [36mawait[39m expect(service[33m.[39mlogin(loginDto))[33m.[39mrejects[33m.[39mtoThrow([33mUnauthorizedException[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 145 |[39m       [36mawait[39m expect(service[33m.[39mlogin(loginDto))[33m.[39mrejects[33m.[39mtoThrow([32m'Invalid credentials'[39m)[33m;[39m
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 146 |[39m     })[33m;[39m
   [90m 147 |[39m
   [90m 148 |[39m     it([32m'should generate JWT tokens with correct payload'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m148:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 146 |[39m     })[33m;[39m
   [90m 147 |[39m
  [31m[1m>[22m[39m[90m 148 |[39m     it([32m'should generate JWT tokens with correct payload'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 149 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockResolvedValue(mockUser)[33m;[39m
   [90m 150 |[39m       mockHashService[33m.[39mcompare[33m.[39mmockResolvedValue([36mtrue[39m)[33m;[39m
   [90m 151 |[39m       mockJwtService[33m.[39msign[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m160:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 158 |[39m       [36mawait[39m service[33m.[39mlogin(loginDto)[33m;[39m
   [90m 159 |[39m
  [31m[1m>[22m[39m[90m 160 |[39m       expect(mockJwtService[33m.[39msign)[33m.[39mtoHaveBeenNthCalledWith(
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 161 |[39m         [35m1[39m[33m,[39m
   [90m 162 |[39m         expect[33m.[39mobjectContaining({
   [90m 163 |[39m           sub[33m:[39m mockUser[33m.[39mid[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m162:9[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 160 |[39m       expect(mockJwtService[33m.[39msign)[33m.[39mtoHaveBeenNthCalledWith(
   [90m 161 |[39m         [35m1[39m[33m,[39m
  [31m[1m>[22m[39m[90m 162 |[39m         expect[33m.[39mobjectContaining({
   [90m     |[39m         [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 163 |[39m           sub[33m:[39m mockUser[33m.[39mid[33m,[39m
   [90m 164 |[39m           email[33m:[39m mockUser[33m.[39memail[33m,[39m
   [90m 165 |[39m           jti[33m:[39m expect[33m.[39many([33mString[39m)[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m165:16[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 163 |[39m           sub[33m:[39m mockUser[33m.[39mid[33m,[39m
   [90m 164 |[39m           email[33m:[39m mockUser[33m.[39memail[33m,[39m
  [31m[1m>[22m[39m[90m 165 |[39m           jti[33m:[39m expect[33m.[39many([33mString[39m)[33m,[39m
   [90m     |[39m                [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 166 |[39m         })[33m,[39m
   [90m 167 |[39m         {
   [90m 168 |[39m           expiresIn[33m:[39m [32m'15m'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m169:19[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 167 |[39m         {
   [90m 168 |[39m           expiresIn[33m:[39m [32m'15m'[39m[33m,[39m
  [31m[1m>[22m[39m[90m 169 |[39m           secret[33m:[39m expect[33m.[39many([33mString[39m)[33m,[39m
   [90m     |[39m                   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 170 |[39m         }
   [90m 171 |[39m       )[33m;[39m
   [90m 172 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m173:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 171 |[39m       )[33m;[39m
   [90m 172 |[39m
  [31m[1m>[22m[39m[90m 173 |[39m       expect(mockJwtService[33m.[39msign)[33m.[39mtoHaveBeenNthCalledWith(
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 174 |[39m         [35m2[39m[33m,[39m
   [90m 175 |[39m         { sub[33m:[39m mockUser[33m.[39mid }[33m,[39m
   [90m 176 |[39m         {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m178:19[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 176 |[39m         {
   [90m 177 |[39m           expiresIn[33m:[39m [32m'7d'[39m[33m,[39m
  [31m[1m>[22m[39m[90m 178 |[39m           secret[33m:[39m expect[33m.[39many([33mString[39m)[33m,[39m
   [90m     |[39m                   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 179 |[39m         }
   [90m 180 |[39m       )[33m;[39m
   [90m 181 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m183:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 181 |[39m     })[33m;[39m
   [90m 182 |[39m
  [31m[1m>[22m[39m[90m 183 |[39m     it([32m'should store refresh token in database'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 184 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockResolvedValue(mockUser)[33m;[39m
   [90m 185 |[39m       mockHashService[33m.[39mcompare[33m.[39mmockResolvedValue([36mtrue[39m)[33m;[39m
   [90m 186 |[39m       mockJwtService[33m.[39msign[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m195:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 193 |[39m       [36mawait[39m service[33m.[39mlogin(loginDto)[33m;[39m
   [90m 194 |[39m
  [31m[1m>[22m[39m[90m 195 |[39m       expect(mockPrismaService[33m.[39mrefreshToken[33m.[39mcreate)[33m.[39mtoHaveBeenCalledWith({
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 196 |[39m         data[33m:[39m {
   [90m 197 |[39m           userId[33m:[39m mockUser[33m.[39mid[33m,[39m
   [90m 198 |[39m           token[33m:[39m [32m'refresh-token-abc'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m199:22[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 197 |[39m           userId[33m:[39m mockUser[33m.[39mid[33m,[39m
   [90m 198 |[39m           token[33m:[39m [32m'refresh-token-abc'[39m[33m,[39m
  [31m[1m>[22m[39m[90m 199 |[39m           expiresAt[33m:[39m expect[33m.[39many([33mDate[39m)[33m,[39m
   [90m     |[39m                      [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 200 |[39m         }[33m,[39m
   [90m 201 |[39m       })[33m;[39m
   [90m 202 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m204:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 202 |[39m     })[33m;[39m
   [90m 203 |[39m
  [31m[1m>[22m[39m[90m 204 |[39m     it([32m'should create session in Redis'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 205 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockResolvedValue(mockUser)[33m;[39m
   [90m 206 |[39m       mockHashService[33m.[39mcompare[33m.[39mmockResolvedValue([36mtrue[39m)[33m;[39m
   [90m 207 |[39m       mockJwtService[33m.[39msign[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m216:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 214 |[39m       [36mawait[39m service[33m.[39mlogin(loginDto)[33m;[39m
   [90m 215 |[39m
  [31m[1m>[22m[39m[90m 216 |[39m       expect(mockSessionService[33m.[39mcreateSession)[33m.[39mtoHaveBeenCalledWith({
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 217 |[39m         userId[33m:[39m mockUser[33m.[39mid[33m,[39m
   [90m 218 |[39m         accessToken[33m:[39m [32m'access-token'[39m[33m,[39m
   [90m 219 |[39m         refreshToken[33m:[39m [32m'refresh-token'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m220:20[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 218 |[39m         accessToken[33m:[39m [32m'access-token'[39m[33m,[39m
   [90m 219 |[39m         refreshToken[33m:[39m [32m'refresh-token'[39m[33m,[39m
  [31m[1m>[22m[39m[90m 220 |[39m         createdAt[33m:[39m expect[33m.[39many([33mNumber[39m)[33m,[39m
   [90m     |[39m                    [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 221 |[39m         expiresAt[33m:[39m expect[33m.[39many([33mNumber[39m)[33m,[39m
   [90m 222 |[39m         metadata[33m:[39m {}[33m,[39m
   [90m 223 |[39m       })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m221:20[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 219 |[39m         refreshToken[33m:[39m [32m'refresh-token'[39m[33m,[39m
   [90m 220 |[39m         createdAt[33m:[39m expect[33m.[39many([33mNumber[39m)[33m,[39m
  [31m[1m>[22m[39m[90m 221 |[39m         expiresAt[33m:[39m expect[33m.[39many([33mNumber[39m)[33m,[39m
   [90m     |[39m                    [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 222 |[39m         metadata[33m:[39m {}[33m,[39m
   [90m 223 |[39m       })[33m;[39m
   [90m 224 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m227:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 225 |[39m   })[33m;[39m
   [90m 226 |[39m
  [31m[1m>[22m[39m[90m 227 |[39m   describe([32m'logout'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 228 |[39m     [36mconst[39m userId [33m=[39m [32m'user-123'[39m[33m;[39m
   [90m 229 |[39m     [36mconst[39m accessToken [33m=[39m [32m'valid-access-token'[39m[33m;[39m
   [90m 230 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m231:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 229 |[39m     [36mconst[39m accessToken [33m=[39m [32m'valid-access-token'[39m[33m;[39m
   [90m 230 |[39m
  [31m[1m>[22m[39m[90m 231 |[39m     it([32m'should successfully logout a user'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 232 |[39m       mockJwtService[33m.[39mdecode[33m.[39mmockReturnValue({
   [90m 233 |[39m         jti[33m:[39m [32m'token-jti-123'[39m[33m,[39m
   [90m 234 |[39m         exp[33m:[39m [33mMath[39m[33m.[39mfloor([33mDate[39m[33m.[39mnow() [33m/[39m [35m1000[39m) [33m+[39m [35m900[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m242:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 240 |[39m       [36mawait[39m service[33m.[39mlogout(userId[33m,[39m accessToken)[33m;[39m
   [90m 241 |[39m
  [31m[1m>[22m[39m[90m 242 |[39m       expect(mockJwtService[33m.[39mdecode)[33m.[39mtoHaveBeenCalledWith(accessToken)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 243 |[39m       expect(mockSessionService[33m.[39mblacklistToken)[33m.[39mtoHaveBeenCalledWith(
   [90m 244 |[39m         [32m'token-jti-123'[39m[33m,[39m
   [90m 245 |[39m         expect[33m.[39many([33mNumber[39m)[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m243:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 241 |[39m
   [90m 242 |[39m       expect(mockJwtService[33m.[39mdecode)[33m.[39mtoHaveBeenCalledWith(accessToken)[33m;[39m
  [31m[1m>[22m[39m[90m 243 |[39m       expect(mockSessionService[33m.[39mblacklistToken)[33m.[39mtoHaveBeenCalledWith(
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 244 |[39m         [32m'token-jti-123'[39m[33m,[39m
   [90m 245 |[39m         expect[33m.[39many([33mNumber[39m)
   [90m 246 |[39m       )[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m245:9[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 243 |[39m       expect(mockSessionService[33m.[39mblacklistToken)[33m.[39mtoHaveBeenCalledWith(
   [90m 244 |[39m         [32m'token-jti-123'[39m[33m,[39m
  [31m[1m>[22m[39m[90m 245 |[39m         expect[33m.[39many([33mNumber[39m)
   [90m     |[39m         [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 246 |[39m       )[33m;[39m
   [90m 247 |[39m       expect(mockSessionService[33m.[39mdeleteSession)[33m.[39mtoHaveBeenCalledWith(userId)[33m;[39m
   [90m 248 |[39m       expect(mockPrismaService[33m.[39mrefreshToken[33m.[39mupdateMany)[33m.[39mtoHaveBeenCalledWith({[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m247:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 245 |[39m         expect[33m.[39many([33mNumber[39m)
   [90m 246 |[39m       )[33m;[39m
  [31m[1m>[22m[39m[90m 247 |[39m       expect(mockSessionService[33m.[39mdeleteSession)[33m.[39mtoHaveBeenCalledWith(userId)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 248 |[39m       expect(mockPrismaService[33m.[39mrefreshToken[33m.[39mupdateMany)[33m.[39mtoHaveBeenCalledWith({
   [90m 249 |[39m         where[33m:[39m {
   [90m 250 |[39m           userId[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m248:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 246 |[39m       )[33m;[39m
   [90m 247 |[39m       expect(mockSessionService[33m.[39mdeleteSession)[33m.[39mtoHaveBeenCalledWith(userId)[33m;[39m
  [31m[1m>[22m[39m[90m 248 |[39m       expect(mockPrismaService[33m.[39mrefreshToken[33m.[39mupdateMany)[33m.[39mtoHaveBeenCalledWith({
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 249 |[39m         where[33m:[39m {
   [90m 250 |[39m           userId[33m,[39m
   [90m 251 |[39m           isRevoked[33m:[39m [36mfalse[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m259:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 257 |[39m     })[33m;[39m
   [90m 258 |[39m
  [31m[1m>[22m[39m[90m 259 |[39m     it([32m'should handle logout when token has no JTI'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 260 |[39m       mockJwtService[33m.[39mdecode[33m.[39mmockReturnValue({ exp[33m:[39m [33mMath[39m[33m.[39mfloor([33mDate[39m[33m.[39mnow() [33m/[39m [35m1000[39m) [33m+[39m [35m900[39m })[33m;[39m
   [90m 261 |[39m       mockSessionService[33m.[39mdeleteSession[33m.[39mmockResolvedValue(undefined)[33m;[39m
   [90m 262 |[39m       mockPrismaService[33m.[39mrefreshToken[33m.[39mupdateMany[33m.[39mmockResolvedValue({ count[33m:[39m [35m1[39m })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m266:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 264 |[39m       [36mawait[39m service[33m.[39mlogout(userId[33m,[39m accessToken)[33m;[39m
   [90m 265 |[39m
  [31m[1m>[22m[39m[90m 266 |[39m       expect(mockSessionService[33m.[39mblacklistToken)[33m.[39mnot[33m.[39mtoHaveBeenCalled()[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 267 |[39m       expect(mockSessionService[33m.[39mdeleteSession)[33m.[39mtoHaveBeenCalled()[33m;[39m
   [90m 268 |[39m     })[33m;[39m
   [90m 269 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m267:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 265 |[39m
   [90m 266 |[39m       expect(mockSessionService[33m.[39mblacklistToken)[33m.[39mnot[33m.[39mtoHaveBeenCalled()[33m;[39m
  [31m[1m>[22m[39m[90m 267 |[39m       expect(mockSessionService[33m.[39mdeleteSession)[33m.[39mtoHaveBeenCalled()[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 268 |[39m     })[33m;[39m
   [90m 269 |[39m
   [90m 270 |[39m     it([32m'should handle logout when token decode fails'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m270:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 268 |[39m     })[33m;[39m
   [90m 269 |[39m
  [31m[1m>[22m[39m[90m 270 |[39m     it([32m'should handle logout when token decode fails'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 271 |[39m       mockJwtService[33m.[39mdecode[33m.[39mmockReturnValue([36mnull[39m)[33m;[39m
   [90m 272 |[39m       mockSessionService[33m.[39mdeleteSession[33m.[39mmockResolvedValue(undefined)[33m;[39m
   [90m 273 |[39m       mockPrismaService[33m.[39mrefreshToken[33m.[39mupdateMany[33m.[39mmockResolvedValue({ count[33m:[39m [35m1[39m })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m277:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 275 |[39m       [36mawait[39m service[33m.[39mlogout(userId[33m,[39m accessToken)[33m;[39m
   [90m 276 |[39m
  [31m[1m>[22m[39m[90m 277 |[39m       expect(mockSessionService[33m.[39mblacklistToken)[33m.[39mnot[33m.[39mtoHaveBeenCalled()[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 278 |[39m       expect(mockSessionService[33m.[39mdeleteSession)[33m.[39mtoHaveBeenCalled()[33m;[39m
   [90m 279 |[39m     })[33m;[39m
   [90m 280 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m278:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 276 |[39m
   [90m 277 |[39m       expect(mockSessionService[33m.[39mblacklistToken)[33m.[39mnot[33m.[39mtoHaveBeenCalled()[33m;[39m
  [31m[1m>[22m[39m[90m 278 |[39m       expect(mockSessionService[33m.[39mdeleteSession)[33m.[39mtoHaveBeenCalled()[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 279 |[39m     })[33m;[39m
   [90m 280 |[39m
   [90m 281 |[39m     it([32m'should propagate errors during logout'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m281:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 279 |[39m     })[33m;[39m
   [90m 280 |[39m
  [31m[1m>[22m[39m[90m 281 |[39m     it([32m'should propagate errors during logout'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 282 |[39m       [36mconst[39m error [33m=[39m [36mnew[39m [33mError[39m([32m'Database error'[39m)[33m;[39m
   [90m 283 |[39m       mockJwtService[33m.[39mdecode[33m.[39mmockReturnValue({ jti[33m:[39m [32m'jti-123'[39m[33m,[39m exp[33m:[39m [35m123456[39m })[33m;[39m
   [90m 284 |[39m       mockSessionService[33m.[39mblacklistToken[33m.[39mmockResolvedValue(undefined)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m287:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 285 |[39m       mockSessionService[33m.[39mdeleteSession[33m.[39mmockRejectedValue(error)[33m;[39m
   [90m 286 |[39m
  [31m[1m>[22m[39m[90m 287 |[39m       [36mawait[39m expect(service[33m.[39mlogout(userId[33m,[39m accessToken))[33m.[39mrejects[33m.[39mtoThrow([32m'Database error'[39m)[33m;[39m
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 288 |[39m     })[33m;[39m
   [90m 289 |[39m   })[33m;[39m
   [90m 290 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m291:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 289 |[39m   })[33m;[39m
   [90m 290 |[39m
  [31m[1m>[22m[39m[90m 291 |[39m   describe([32m'refreshTokens'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 292 |[39m     [36mconst[39m refreshTokenDto[33m:[39m [33mRefreshTokenDto[39m [33m=[39m {
   [90m 293 |[39m       refreshToken[33m:[39m [32m'valid-refresh-token'[39m[33m,[39m
   [90m 294 |[39m     }[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m306:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 304 |[39m     }[33m;[39m
   [90m 305 |[39m
  [31m[1m>[22m[39m[90m 306 |[39m     it([32m'should successfully refresh tokens'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 307 |[39m       mockPrismaService[33m.[39mrefreshToken[33m.[39mfindUnique[33m.[39mmockResolvedValue(storedToken)[33m;[39m
   [90m 308 |[39m       mockJwtService[33m.[39msign
   [90m 309 |[39m         [33m.[39mmockReturnValueOnce([32m'new-access-token'[39m)[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m317:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 315 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39mrefreshTokens(refreshTokenDto)[33m;[39m
   [90m 316 |[39m
  [31m[1m>[22m[39m[90m 317 |[39m       expect(mockPrismaService[33m.[39mrefreshToken[33m.[39mfindUnique)[33m.[39mtoHaveBeenCalledWith({
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 318 |[39m         where[33m:[39m { token[33m:[39m refreshTokenDto[33m.[39mrefreshToken }[33m,[39m
   [90m 319 |[39m         include[33m:[39m { user[33m:[39m [36mtrue[39m }[33m,[39m
   [90m 320 |[39m       })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m321:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 319 |[39m         include[33m:[39m { user[33m:[39m [36mtrue[39m }[33m,[39m
   [90m 320 |[39m       })[33m;[39m
  [31m[1m>[22m[39m[90m 321 |[39m       expect(result)[33m.[39mtoEqual({
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 322 |[39m         accessToken[33m:[39m [32m'new-access-token'[39m[33m,[39m
   [90m 323 |[39m         refreshToken[33m:[39m [32m'new-refresh-token'[39m[33m,[39m
   [90m 324 |[39m         expiresIn[33m:[39m [35m15[39m [33m*[39m [35m60[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m334:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 332 |[39m     })[33m;[39m
   [90m 333 |[39m
  [31m[1m>[22m[39m[90m 334 |[39m     it([32m'should throw UnauthorizedException when refresh token does not exist'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 335 |[39m       mockPrismaService[33m.[39mrefreshToken[33m.[39mfindUnique[33m.[39mmockResolvedValue([36mnull[39m)[33m;[39m
   [90m 336 |[39m
   [90m 337 |[39m       [36mawait[39m expect(service[33m.[39mrefreshTokens(refreshTokenDto))[33m.[39mrejects[33m.[39mtoThrow([0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m337:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 335 |[39m       mockPrismaService[33m.[39mrefreshToken[33m.[39mfindUnique[33m.[39mmockResolvedValue([36mnull[39m)[33m;[39m
   [90m 336 |[39m
  [31m[1m>[22m[39m[90m 337 |[39m       [36mawait[39m expect(service[33m.[39mrefreshTokens(refreshTokenDto))[33m.[39mrejects[33m.[39mtoThrow(
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 338 |[39m         [33mUnauthorizedException[39m
   [90m 339 |[39m       )[33m;[39m
   [90m 340 |[39m       [36mawait[39m expect(service[33m.[39mrefreshTokens(refreshTokenDto))[33m.[39mrejects[33m.[39mtoThrow([0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m340:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 338 |[39m         [33mUnauthorizedException[39m
   [90m 339 |[39m       )[33m;[39m
  [31m[1m>[22m[39m[90m 340 |[39m       [36mawait[39m expect(service[33m.[39mrefreshTokens(refreshTokenDto))[33m.[39mrejects[33m.[39mtoThrow(
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 341 |[39m         [32m'Invalid refresh token'[39m
   [90m 342 |[39m       )[33m;[39m
   [90m 343 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m345:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 343 |[39m     })[33m;[39m
   [90m 344 |[39m
  [31m[1m>[22m[39m[90m 345 |[39m     it([32m'should throw UnauthorizedException when refresh token is revoked'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 346 |[39m       mockPrismaService[33m.[39mrefreshToken[33m.[39mfindUnique[33m.[39mmockResolvedValue({
   [90m 347 |[39m         [33m...[39mstoredToken[33m,[39m
   [90m 348 |[39m         isRevoked[33m:[39m [36mtrue[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m351:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 349 |[39m       })[33m;[39m
   [90m 350 |[39m
  [31m[1m>[22m[39m[90m 351 |[39m       [36mawait[39m expect(service[33m.[39mrefreshTokens(refreshTokenDto))[33m.[39mrejects[33m.[39mtoThrow(
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 352 |[39m         [33mUnauthorizedException[39m
   [90m 353 |[39m       )[33m;[39m
   [90m 354 |[39m       [36mawait[39m expect(service[33m.[39mrefreshTokens(refreshTokenDto))[33m.[39mrejects[33m.[39mtoThrow([0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m354:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 352 |[39m         [33mUnauthorizedException[39m
   [90m 353 |[39m       )[33m;[39m
  [31m[1m>[22m[39m[90m 354 |[39m       [36mawait[39m expect(service[33m.[39mrefreshTokens(refreshTokenDto))[33m.[39mrejects[33m.[39mtoThrow(
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 355 |[39m         [32m'Refresh token has been revoked'[39m
   [90m 356 |[39m       )[33m;[39m
   [90m 357 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m359:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 357 |[39m     })[33m;[39m
   [90m 358 |[39m
  [31m[1m>[22m[39m[90m 359 |[39m     it([32m'should throw UnauthorizedException when refresh token is expired'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 360 |[39m       mockPrismaService[33m.[39mrefreshToken[33m.[39mfindUnique[33m.[39mmockResolvedValue({
   [90m 361 |[39m         [33m...[39mstoredToken[33m,[39m
   [90m 362 |[39m         expiresAt[33m:[39m [36mnew[39m [33mDate[39m([33mDate[39m[33m.[39mnow() [33m-[39m [35m1000[39m)[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m365:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 363 |[39m       })[33m;[39m
   [90m 364 |[39m
  [31m[1m>[22m[39m[90m 365 |[39m       [36mawait[39m expect(service[33m.[39mrefreshTokens(refreshTokenDto))[33m.[39mrejects[33m.[39mtoThrow(
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 366 |[39m         [33mUnauthorizedException[39m
   [90m 367 |[39m       )[33m;[39m
   [90m 368 |[39m       [36mawait[39m expect(service[33m.[39mrefreshTokens(refreshTokenDto))[33m.[39mrejects[33m.[39mtoThrow([0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m368:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 366 |[39m         [33mUnauthorizedException[39m
   [90m 367 |[39m       )[33m;[39m
  [31m[1m>[22m[39m[90m 368 |[39m       [36mawait[39m expect(service[33m.[39mrefreshTokens(refreshTokenDto))[33m.[39mrejects[33m.[39mtoThrow(
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 369 |[39m         [32m'Refresh token has expired'[39m
   [90m 370 |[39m       )[33m;[39m
   [90m 371 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m373:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 371 |[39m     })[33m;[39m
   [90m 372 |[39m
  [31m[1m>[22m[39m[90m 373 |[39m     it([32m'should throw UnauthorizedException when user is inactive'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 374 |[39m       mockPrismaService[33m.[39mrefreshToken[33m.[39mfindUnique[33m.[39mmockResolvedValue({
   [90m 375 |[39m         [33m...[39mstoredToken[33m,[39m
   [90m 376 |[39m         user[33m:[39m { [33m...[39mmockUser[33m,[39m isActive[33m:[39m [36mfalse[39m }[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m379:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 377 |[39m       })[33m;[39m
   [90m 378 |[39m
  [31m[1m>[22m[39m[90m 379 |[39m       [36mawait[39m expect(service[33m.[39mrefreshTokens(refreshTokenDto))[33m.[39mrejects[33m.[39mtoThrow(
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 380 |[39m         [33mUnauthorizedException[39m
   [90m 381 |[39m       )[33m;[39m
   [90m 382 |[39m       [36mawait[39m expect(service[33m.[39mrefreshTokens(refreshTokenDto))[33m.[39mrejects[33m.[39mtoThrow([0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m382:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 380 |[39m         [33mUnauthorizedException[39m
   [90m 381 |[39m       )[33m;[39m
  [31m[1m>[22m[39m[90m 382 |[39m       [36mawait[39m expect(service[33m.[39mrefreshTokens(refreshTokenDto))[33m.[39mrejects[33m.[39mtoThrow(
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 383 |[39m         [32m'User account is inactive'[39m
   [90m 384 |[39m       )[33m;[39m
   [90m 385 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m387:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 385 |[39m     })[33m;[39m
   [90m 386 |[39m
  [31m[1m>[22m[39m[90m 387 |[39m     it([32m'should revoke old refresh token (token rotation)'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 388 |[39m       mockPrismaService[33m.[39mrefreshToken[33m.[39mfindUnique[33m.[39mmockResolvedValue(storedToken)[33m;[39m
   [90m 389 |[39m       mockJwtService[33m.[39msign
   [90m 390 |[39m         [33m.[39mmockReturnValueOnce([32m'new-access-token'[39m)[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m398:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 396 |[39m       [36mawait[39m service[33m.[39mrefreshTokens(refreshTokenDto)[33m;[39m
   [90m 397 |[39m
  [31m[1m>[22m[39m[90m 398 |[39m       expect(mockPrismaService[33m.[39mrefreshToken[33m.[39mupdate)[33m.[39mtoHaveBeenCalledWith({
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 399 |[39m         where[33m:[39m { id[33m:[39m storedToken[33m.[39mid }[33m,[39m
   [90m 400 |[39m         data[33m:[39m { isRevoked[33m:[39m [36mtrue[39m }[33m,[39m
   [90m 401 |[39m       })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m404:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 402 |[39m     })[33m;[39m
   [90m 403 |[39m
  [31m[1m>[22m[39m[90m 404 |[39m     it([32m'should store new refresh token'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 405 |[39m       mockPrismaService[33m.[39mrefreshToken[33m.[39mfindUnique[33m.[39mmockResolvedValue(storedToken)[33m;[39m
   [90m 406 |[39m       mockJwtService[33m.[39msign
   [90m 407 |[39m         [33m.[39mmockReturnValueOnce([32m'new-access-token'[39m)[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m415:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 413 |[39m       [36mawait[39m service[33m.[39mrefreshTokens(refreshTokenDto)[33m;[39m
   [90m 414 |[39m
  [31m[1m>[22m[39m[90m 415 |[39m       expect(mockPrismaService[33m.[39mrefreshToken[33m.[39mcreate)[33m.[39mtoHaveBeenCalledWith({
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 416 |[39m         data[33m:[39m {
   [90m 417 |[39m           userId[33m:[39m mockUser[33m.[39mid[33m,[39m
   [90m 418 |[39m           token[33m:[39m [32m'new-refresh-token'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m419:22[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 417 |[39m           userId[33m:[39m mockUser[33m.[39mid[33m,[39m
   [90m 418 |[39m           token[33m:[39m [32m'new-refresh-token'[39m[33m,[39m
  [31m[1m>[22m[39m[90m 419 |[39m           expiresAt[33m:[39m expect[33m.[39many([33mDate[39m)[33m,[39m
   [90m     |[39m                      [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 420 |[39m         }[33m,[39m
   [90m 421 |[39m       })[33m;[39m
   [90m 422 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m424:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 422 |[39m     })[33m;[39m
   [90m 423 |[39m
  [31m[1m>[22m[39m[90m 424 |[39m     it([32m'should update session in Redis'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 425 |[39m       mockPrismaService[33m.[39mrefreshToken[33m.[39mfindUnique[33m.[39mmockResolvedValue(storedToken)[33m;[39m
   [90m 426 |[39m       mockJwtService[33m.[39msign
   [90m 427 |[39m         [33m.[39mmockReturnValueOnce([32m'new-access-token'[39m)[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m435:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 433 |[39m       [36mawait[39m service[33m.[39mrefreshTokens(refreshTokenDto)[33m;[39m
   [90m 434 |[39m
  [31m[1m>[22m[39m[90m 435 |[39m       expect(mockSessionService[33m.[39mcreateSession)[33m.[39mtoHaveBeenCalledWith({
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 436 |[39m         userId[33m:[39m mockUser[33m.[39mid[33m,[39m
   [90m 437 |[39m         accessToken[33m:[39m [32m'new-access-token'[39m[33m,[39m
   [90m 438 |[39m         refreshToken[33m:[39m [32m'new-refresh-token'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m439:20[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 437 |[39m         accessToken[33m:[39m [32m'new-access-token'[39m[33m,[39m
   [90m 438 |[39m         refreshToken[33m:[39m [32m'new-refresh-token'[39m[33m,[39m
  [31m[1m>[22m[39m[90m 439 |[39m         createdAt[33m:[39m expect[33m.[39many([33mNumber[39m)[33m,[39m
   [90m     |[39m                    [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 440 |[39m         expiresAt[33m:[39m expect[33m.[39many([33mNumber[39m)[33m,[39m
   [90m 441 |[39m         metadata[33m:[39m {}[33m,[39m
   [90m 442 |[39m       })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m440:20[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 438 |[39m         refreshToken[33m:[39m [32m'new-refresh-token'[39m[33m,[39m
   [90m 439 |[39m         createdAt[33m:[39m expect[33m.[39many([33mNumber[39m)[33m,[39m
  [31m[1m>[22m[39m[90m 440 |[39m         expiresAt[33m:[39m expect[33m.[39many([33mNumber[39m)[33m,[39m
   [90m     |[39m                    [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 441 |[39m         metadata[33m:[39m {}[33m,[39m
   [90m 442 |[39m       })[33m;[39m
   [90m 443 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m446:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 444 |[39m   })[33m;[39m
   [90m 445 |[39m
  [31m[1m>[22m[39m[90m 446 |[39m   describe([32m'validateUser'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 447 |[39m     it([32m'should return user data when user exists and is active'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m 448 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockResolvedValue(mockUser)[33m;[39m
   [90m 449 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m447:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 445 |[39m
   [90m 446 |[39m   describe([32m'validateUser'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 447 |[39m     it([32m'should return user data when user exists and is active'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 448 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockResolvedValue(mockUser)[33m;[39m
   [90m 449 |[39m
   [90m 450 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39mvalidateUser(mockUser[33m.[39mid)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m452:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 450 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39mvalidateUser(mockUser[33m.[39mid)[33m;[39m
   [90m 451 |[39m
  [31m[1m>[22m[39m[90m 452 |[39m       expect(mockPrismaService[33m.[39muser[33m.[39mfindUnique)[33m.[39mtoHaveBeenCalledWith({
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 453 |[39m         where[33m:[39m { id[33m:[39m mockUser[33m.[39mid }[33m,[39m
   [90m 454 |[39m         select[33m:[39m {
   [90m 455 |[39m           id[33m:[39m [36mtrue[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m462:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 460 |[39m         }[33m,[39m
   [90m 461 |[39m       })[33m;[39m
  [31m[1m>[22m[39m[90m 462 |[39m       expect(result)[33m.[39mtoEqual({
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 463 |[39m         id[33m:[39m mockUser[33m.[39mid[33m,[39m
   [90m 464 |[39m         email[33m:[39m mockUser[33m.[39memail[33m,[39m
   [90m 465 |[39m         name[33m:[39m mockUser[33m.[39mname[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m470:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 468 |[39m     })[33m;[39m
   [90m 469 |[39m
  [31m[1m>[22m[39m[90m 470 |[39m     it([32m'should throw UnauthorizedException when user does not exist'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 471 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockResolvedValue([36mnull[39m)[33m;[39m
   [90m 472 |[39m
   [90m 473 |[39m       [36mawait[39m expect(service[33m.[39mvalidateUser([32m'non-existent-id'[39m))[33m.[39mrejects[33m.[39mtoThrow([0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m473:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 471 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockResolvedValue([36mnull[39m)[33m;[39m
   [90m 472 |[39m
  [31m[1m>[22m[39m[90m 473 |[39m       [36mawait[39m expect(service[33m.[39mvalidateUser([32m'non-existent-id'[39m))[33m.[39mrejects[33m.[39mtoThrow(
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 474 |[39m         [33mUnauthorizedException[39m
   [90m 475 |[39m       )[33m;[39m
   [90m 476 |[39m       [36mawait[39m expect(service[33m.[39mvalidateUser([32m'non-existent-id'[39m))[33m.[39mrejects[33m.[39mtoThrow([0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m476:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 474 |[39m         [33mUnauthorizedException[39m
   [90m 475 |[39m       )[33m;[39m
  [31m[1m>[22m[39m[90m 476 |[39m       [36mawait[39m expect(service[33m.[39mvalidateUser([32m'non-existent-id'[39m))[33m.[39mrejects[33m.[39mtoThrow(
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 477 |[39m         [32m'User not found or inactive'[39m
   [90m 478 |[39m       )[33m;[39m
   [90m 479 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m481:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 479 |[39m     })[33m;[39m
   [90m 480 |[39m
  [31m[1m>[22m[39m[90m 481 |[39m     it([32m'should throw UnauthorizedException when user is inactive'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 482 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockResolvedValue({
   [90m 483 |[39m         [33m...[39mmockUser[33m,[39m
   [90m 484 |[39m         isActive[33m:[39m [36mfalse[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m487:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 485 |[39m       })[33m;[39m
   [90m 486 |[39m
  [31m[1m>[22m[39m[90m 487 |[39m       [36mawait[39m expect(service[33m.[39mvalidateUser(mockUser[33m.[39mid))[33m.[39mrejects[33m.[39mtoThrow([33mUnauthorizedException[39m)[33m;[39m
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 488 |[39m       [36mawait[39m expect(service[33m.[39mvalidateUser(mockUser[33m.[39mid))[33m.[39mrejects[33m.[39mtoThrow(
   [90m 489 |[39m         [32m'User not found or inactive'[39m
   [90m 490 |[39m       )[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m488:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 486 |[39m
   [90m 487 |[39m       [36mawait[39m expect(service[33m.[39mvalidateUser(mockUser[33m.[39mid))[33m.[39mrejects[33m.[39mtoThrow([33mUnauthorizedException[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 488 |[39m       [36mawait[39m expect(service[33m.[39mvalidateUser(mockUser[33m.[39mid))[33m.[39mrejects[33m.[39mtoThrow(
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 489 |[39m         [32m'User not found or inactive'[39m
   [90m 490 |[39m       )[33m;[39m
   [90m 491 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m494:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 492 |[39m   })[33m;[39m
   [90m 493 |[39m
  [31m[1m>[22m[39m[90m 494 |[39m   describe([32m'edge cases and error handling'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 495 |[39m     it([32m'should handle concurrent login attempts'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m 496 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockResolvedValue(mockUser)[33m;[39m
   [90m 497 |[39m       mockHashService[33m.[39mcompare[33m.[39mmockResolvedValue([36mtrue[39m)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m495:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 493 |[39m
   [90m 494 |[39m   describe([32m'edge cases and error handling'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 495 |[39m     it([32m'should handle concurrent login attempts'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 496 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockResolvedValue(mockUser)[33m;[39m
   [90m 497 |[39m       mockHashService[33m.[39mcompare[33m.[39mmockResolvedValue([36mtrue[39m)[33m;[39m
   [90m 498 |[39m       mockJwtService[33m.[39msign[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m510:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 508 |[39m       [36mconst[39m results [33m=[39m [36mawait[39m [33mPromise[39m[33m.[39mall(logins)[33m;[39m
   [90m 509 |[39m
  [31m[1m>[22m[39m[90m 510 |[39m       expect(results)[33m.[39mtoHaveLength([35m5[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 511 |[39m       results[33m.[39mforEach((result) [33m=>[39m {
   [90m 512 |[39m         expect(result[33m.[39maccessToken)[33m.[39mtoBeDefined()[33m;[39m
   [90m 513 |[39m         expect(result[33m.[39mrefreshToken)[33m.[39mtoBeDefined()[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m512:9[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 510 |[39m       expect(results)[33m.[39mtoHaveLength([35m5[39m)[33m;[39m
   [90m 511 |[39m       results[33m.[39mforEach((result) [33m=>[39m {
  [31m[1m>[22m[39m[90m 512 |[39m         expect(result[33m.[39maccessToken)[33m.[39mtoBeDefined()[33m;[39m
   [90m     |[39m         [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 513 |[39m         expect(result[33m.[39mrefreshToken)[33m.[39mtoBeDefined()[33m;[39m
   [90m 514 |[39m       })[33m;[39m
   [90m 515 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m513:9[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 511 |[39m       results[33m.[39mforEach((result) [33m=>[39m {
   [90m 512 |[39m         expect(result[33m.[39maccessToken)[33m.[39mtoBeDefined()[33m;[39m
  [31m[1m>[22m[39m[90m 513 |[39m         expect(result[33m.[39mrefreshToken)[33m.[39mtoBeDefined()[33m;[39m
   [90m     |[39m         [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 514 |[39m       })[33m;[39m
   [90m 515 |[39m     })[33m;[39m
   [90m 516 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m517:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 515 |[39m     })[33m;[39m
   [90m 516 |[39m
  [31m[1m>[22m[39m[90m 517 |[39m     it([32m'should handle database errors during login'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 518 |[39m       [36mconst[39m loginDto[33m:[39m [33mLoginDto[39m [33m=[39m { email[33m:[39m [32m'test@example.com'[39m[33m,[39m password[33m:[39m [32m'password123'[39m }[33m;[39m
   [90m 519 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockRejectedValue([36mnew[39m [33mError[39m([32m'DB connection lost'[39m))[33m;[39m
   [90m 520 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m521:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 519 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockRejectedValue([36mnew[39m [33mError[39m([32m'DB connection lost'[39m))[33m;[39m
   [90m 520 |[39m
  [31m[1m>[22m[39m[90m 521 |[39m       [36mawait[39m expect(service[33m.[39mlogin(loginDto))[33m.[39mrejects[33m.[39mtoThrow([32m'DB connection lost'[39m)[33m;[39m
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 522 |[39m     })[33m;[39m
   [90m 523 |[39m   })[33m;[39m
   [90m 524 |[39m })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m6:1[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 4 |[39m
   [90m 5 |[39m [90m// Mock bcrypt to avoid slow actual hashing in tests[39m
  [31m[1m>[22m[39m[90m 6 |[39m jest[33m.[39mmock([32m'bcrypt'[39m)[33m;[39m
   [90m   |[39m [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 7 |[39m
   [90m 8 |[39m describe([32m'HashService'[39m[33m,[39m () [33m=>[39m {
   [90m 9 |[39m   [36mlet[39m service[33m:[39m [33mHashService[39m[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m8:1[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m  6 |[39m jest[33m.[39mmock([32m'bcrypt'[39m)[33m;[39m
   [90m  7 |[39m
  [31m[1m>[22m[39m[90m  8 |[39m describe([32m'HashService'[39m[33m,[39m () [33m=>[39m {
   [90m    |[39m [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m  9 |[39m   [36mlet[39m service[33m:[39m [33mHashService[39m[33m;[39m
   [90m 10 |[39m   [36mconst[39m mockedBcrypt [33m=[39m bcrypt [36mas[39m jest[33m.[39m[33mMocked[39m[33m<[39m[36mtypeof[39m bcrypt[33m>[39m[33m;[39m
   [90m 11 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m10:34[22m[39m[1m[39m[22m
[90mTS2503: [39mCannot find namespace 'jest'.
  [0m [90m  8 |[39m describe([32m'HashService'[39m[33m,[39m () [33m=>[39m {
   [90m  9 |[39m   [36mlet[39m service[33m:[39m [33mHashService[39m[33m;[39m
  [31m[1m>[22m[39m[90m 10 |[39m   [36mconst[39m mockedBcrypt [33m=[39m bcrypt [36mas[39m jest[33m.[39m[33mMocked[39m[33m<[39m[36mtypeof[39m bcrypt[33m>[39m[33m;[39m
   [90m    |[39m                                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 11 |[39m
   [90m 12 |[39m   beforeEach([36masync[39m () [33m=>[39m {
   [90m 13 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m12:3[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'beforeEach'.
  [0m [90m 10 |[39m   [36mconst[39m mockedBcrypt [33m=[39m bcrypt [36mas[39m jest[33m.[39m[33mMocked[39m[33m<[39m[36mtypeof[39m bcrypt[33m>[39m[33m;[39m
   [90m 11 |[39m
  [31m[1m>[22m[39m[90m 12 |[39m   beforeEach([36masync[39m () [33m=>[39m {
   [90m    |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 13 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
   [90m 14 |[39m       providers[33m:[39m [[33mHashService[39m][33m,[39m
   [90m 15 |[39m     })[33m.[39mcompile()[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m18:5[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 16 |[39m
   [90m 17 |[39m     service [33m=[39m module[33m.[39m[36mget[39m[33m<[39m[33mHashService[39m[33m>[39m([33mHashService[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 18 |[39m     jest[33m.[39mclearAllMocks()[33m;[39m
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 19 |[39m   })[33m;[39m
   [90m 20 |[39m
   [90m 21 |[39m   afterEach(() [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m21:3[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'afterEach'.
  [0m [90m 19 |[39m   })[33m;[39m
   [90m 20 |[39m
  [31m[1m>[22m[39m[90m 21 |[39m   afterEach(() [33m=>[39m {
   [90m    |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 22 |[39m     jest[33m.[39mresetAllMocks()[33m;[39m
   [90m 23 |[39m   })[33m;[39m
   [90m 24 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m22:5[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 20 |[39m
   [90m 21 |[39m   afterEach(() [33m=>[39m {
  [31m[1m>[22m[39m[90m 22 |[39m     jest[33m.[39mresetAllMocks()[33m;[39m
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 23 |[39m   })[33m;[39m
   [90m 24 |[39m
   [90m 25 |[39m   describe([32m'hash'[39m[33m,[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m25:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 23 |[39m   })[33m;[39m
   [90m 24 |[39m
  [31m[1m>[22m[39m[90m 25 |[39m   describe([32m'hash'[39m[33m,[39m () [33m=>[39m {
   [90m    |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 26 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m 27 |[39m       expect(service)[33m.[39mtoBeDefined()[33m;[39m
   [90m 28 |[39m       expect(service[33m.[39mhash)[33m.[39mtoBeDefined()[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m26:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 24 |[39m
   [90m 25 |[39m   describe([32m'hash'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 26 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 27 |[39m       expect(service)[33m.[39mtoBeDefined()[33m;[39m
   [90m 28 |[39m       expect(service[33m.[39mhash)[33m.[39mtoBeDefined()[33m;[39m
   [90m 29 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m27:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 25 |[39m   describe([32m'hash'[39m[33m,[39m () [33m=>[39m {
   [90m 26 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 27 |[39m       expect(service)[33m.[39mtoBeDefined()[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 28 |[39m       expect(service[33m.[39mhash)[33m.[39mtoBeDefined()[33m;[39m
   [90m 29 |[39m     })[33m;[39m
   [90m 30 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m28:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 26 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m 27 |[39m       expect(service)[33m.[39mtoBeDefined()[33m;[39m
  [31m[1m>[22m[39m[90m 28 |[39m       expect(service[33m.[39mhash)[33m.[39mtoBeDefined()[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 29 |[39m     })[33m;[39m
   [90m 30 |[39m
   [90m 31 |[39m     it([32m'should hash a password using bcrypt with 12 salt rounds'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m31:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 29 |[39m     })[33m;[39m
   [90m 30 |[39m
  [31m[1m>[22m[39m[90m 31 |[39m     it([32m'should hash a password using bcrypt with 12 salt rounds'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 32 |[39m       [36mconst[39m password [33m=[39m [32m'testPassword123'[39m[33m;[39m
   [90m 33 |[39m       [36mconst[39m hashedPassword [33m=[39m [32m'$2b$12$hashedPasswordExample'[39m[33m;[39m
   [90m 34 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m39:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 37 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39mhash(password)[33m;[39m
   [90m 38 |[39m
  [31m[1m>[22m[39m[90m 39 |[39m       expect(mockedBcrypt[33m.[39mhash)[33m.[39mtoHaveBeenCalledWith(password[33m,[39m [35m12[39m)[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 40 |[39m       expect(mockedBcrypt[33m.[39mhash)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
   [90m 41 |[39m       expect(result)[33m.[39mtoBe(hashedPassword)[33m;[39m
   [90m 42 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m40:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 38 |[39m
   [90m 39 |[39m       expect(mockedBcrypt[33m.[39mhash)[33m.[39mtoHaveBeenCalledWith(password[33m,[39m [35m12[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 40 |[39m       expect(mockedBcrypt[33m.[39mhash)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 41 |[39m       expect(result)[33m.[39mtoBe(hashedPassword)[33m;[39m
   [90m 42 |[39m     })[33m;[39m
   [90m 43 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m41:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 39 |[39m       expect(mockedBcrypt[33m.[39mhash)[33m.[39mtoHaveBeenCalledWith(password[33m,[39m [35m12[39m)[33m;[39m
   [90m 40 |[39m       expect(mockedBcrypt[33m.[39mhash)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 41 |[39m       expect(result)[33m.[39mtoBe(hashedPassword)[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 42 |[39m     })[33m;[39m
   [90m 43 |[39m
   [90m 44 |[39m     it([32m'should handle different password inputs'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m44:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 42 |[39m     })[33m;[39m
   [90m 43 |[39m
  [31m[1m>[22m[39m[90m 44 |[39m     it([32m'should handle different password inputs'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 45 |[39m       [36mconst[39m passwords [33m=[39m [
   [90m 46 |[39m         [32m'short'[39m[33m,[39m
   [90m 47 |[39m         [32m'a very long password with many characters and symbols !@#$%^&*()'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m59:9[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 57 |[39m         [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39mhash(password)[33m;[39m
   [90m 58 |[39m
  [31m[1m>[22m[39m[90m 59 |[39m         expect(result)[33m.[39mtoBe(hash)[33m;[39m
   [90m    |[39m         [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 60 |[39m       }
   [90m 61 |[39m     })[33m;[39m
   [90m 62 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m63:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 61 |[39m     })[33m;[39m
   [90m 62 |[39m
  [31m[1m>[22m[39m[90m 63 |[39m     it([32m'should propagate bcrypt errors'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 64 |[39m       [36mconst[39m password [33m=[39m [32m'testPassword'[39m[33m;[39m
   [90m 65 |[39m       [36mconst[39m error [33m=[39m [36mnew[39m [33mError[39m([32m'Bcrypt hashing failed'[39m)[33m;[39m
   [90m 66 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m69:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 67 |[39m       mockedBcrypt[33m.[39mhash[33m.[39mmockRejectedValue(error [36mas[39m never)[33m;[39m
   [90m 68 |[39m
  [31m[1m>[22m[39m[90m 69 |[39m       [36mawait[39m expect(service[33m.[39mhash(password))[33m.[39mrejects[33m.[39mtoThrow([32m'Bcrypt hashing failed'[39m)[33m;[39m
   [90m    |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 70 |[39m     })[33m;[39m
   [90m 71 |[39m   })[33m;[39m
   [90m 72 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m73:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 71 |[39m   })[33m;[39m
   [90m 72 |[39m
  [31m[1m>[22m[39m[90m 73 |[39m   describe([32m'compare'[39m[33m,[39m () [33m=>[39m {
   [90m    |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 74 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m 75 |[39m       expect(service[33m.[39mcompare)[33m.[39mtoBeDefined()[33m;[39m
   [90m 76 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m74:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 72 |[39m
   [90m 73 |[39m   describe([32m'compare'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 74 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 75 |[39m       expect(service[33m.[39mcompare)[33m.[39mtoBeDefined()[33m;[39m
   [90m 76 |[39m     })[33m;[39m
   [90m 77 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m75:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 73 |[39m   describe([32m'compare'[39m[33m,[39m () [33m=>[39m {
   [90m 74 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 75 |[39m       expect(service[33m.[39mcompare)[33m.[39mtoBeDefined()[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 76 |[39m     })[33m;[39m
   [90m 77 |[39m
   [90m 78 |[39m     it([32m'should return true when password matches hash'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m78:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 76 |[39m     })[33m;[39m
   [90m 77 |[39m
  [31m[1m>[22m[39m[90m 78 |[39m     it([32m'should return true when password matches hash'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 79 |[39m       [36mconst[39m password [33m=[39m [32m'testPassword123'[39m[33m;[39m
   [90m 80 |[39m       [36mconst[39m hash [33m=[39m [32m'$2b$12$hashedPasswordExample'[39m[33m;[39m
   [90m 81 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m86:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 84 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39mcompare(password[33m,[39m hash)[33m;[39m
   [90m 85 |[39m
  [31m[1m>[22m[39m[90m 86 |[39m       expect(mockedBcrypt[33m.[39mcompare)[33m.[39mtoHaveBeenCalledWith(password[33m,[39m hash)[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 87 |[39m       expect(mockedBcrypt[33m.[39mcompare)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
   [90m 88 |[39m       expect(result)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
   [90m 89 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m87:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 85 |[39m
   [90m 86 |[39m       expect(mockedBcrypt[33m.[39mcompare)[33m.[39mtoHaveBeenCalledWith(password[33m,[39m hash)[33m;[39m
  [31m[1m>[22m[39m[90m 87 |[39m       expect(mockedBcrypt[33m.[39mcompare)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 88 |[39m       expect(result)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
   [90m 89 |[39m     })[33m;[39m
   [90m 90 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m88:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 86 |[39m       expect(mockedBcrypt[33m.[39mcompare)[33m.[39mtoHaveBeenCalledWith(password[33m,[39m hash)[33m;[39m
   [90m 87 |[39m       expect(mockedBcrypt[33m.[39mcompare)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 88 |[39m       expect(result)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 89 |[39m     })[33m;[39m
   [90m 90 |[39m
   [90m 91 |[39m     it([32m'should return false when password does not match hash'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m91:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 89 |[39m     })[33m;[39m
   [90m 90 |[39m
  [31m[1m>[22m[39m[90m 91 |[39m     it([32m'should return false when password does not match hash'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 92 |[39m       [36mconst[39m password [33m=[39m [32m'wrongPassword'[39m[33m;[39m
   [90m 93 |[39m       [36mconst[39m hash [33m=[39m [32m'$2b$12$hashedPasswordExample'[39m[33m;[39m
   [90m 94 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m99:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m  97 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39mcompare(password[33m,[39m hash)[33m;[39m
   [90m  98 |[39m
  [31m[1m>[22m[39m[90m  99 |[39m       expect(mockedBcrypt[33m.[39mcompare)[33m.[39mtoHaveBeenCalledWith(password[33m,[39m hash)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 100 |[39m       expect(result)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
   [90m 101 |[39m     })[33m;[39m
   [90m 102 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m100:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m  98 |[39m
   [90m  99 |[39m       expect(mockedBcrypt[33m.[39mcompare)[33m.[39mtoHaveBeenCalledWith(password[33m,[39m hash)[33m;[39m
  [31m[1m>[22m[39m[90m 100 |[39m       expect(result)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 101 |[39m     })[33m;[39m
   [90m 102 |[39m
   [90m 103 |[39m     it([32m'should handle empty password'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m103:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 101 |[39m     })[33m;[39m
   [90m 102 |[39m
  [31m[1m>[22m[39m[90m 103 |[39m     it([32m'should handle empty password'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 104 |[39m       [36mconst[39m password [33m=[39m [32m''[39m[33m;[39m
   [90m 105 |[39m       [36mconst[39m hash [33m=[39m [32m'$2b$12$hashedPasswordExample'[39m[33m;[39m
   [90m 106 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m111:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 109 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39mcompare(password[33m,[39m hash)[33m;[39m
   [90m 110 |[39m
  [31m[1m>[22m[39m[90m 111 |[39m       expect(result)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 112 |[39m     })[33m;[39m
   [90m 113 |[39m
   [90m 114 |[39m     it([32m'should handle case sensitivity correctly'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m114:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 112 |[39m     })[33m;[39m
   [90m 113 |[39m
  [31m[1m>[22m[39m[90m 114 |[39m     it([32m'should handle case sensitivity correctly'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 115 |[39m       [36mconst[39m password [33m=[39m [32m'TestPassword'[39m[33m;[39m
   [90m 116 |[39m       [36mconst[39m hash [33m=[39m [32m'$2b$12$hashedPasswordExample'[39m[33m;[39m
   [90m 117 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m121:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 119 |[39m       mockedBcrypt[33m.[39mcompare[33m.[39mmockResolvedValue([36mtrue[39m [36mas[39m never)[33m;[39m
   [90m 120 |[39m       [36mconst[39m resultCorrect [33m=[39m [36mawait[39m service[33m.[39mcompare(password[33m,[39m hash)[33m;[39m
  [31m[1m>[22m[39m[90m 121 |[39m       expect(resultCorrect)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 122 |[39m
   [90m 123 |[39m       [90m// Second call - wrong case[39m
   [90m 124 |[39m       mockedBcrypt[33m.[39mcompare[33m.[39mmockResolvedValue([36mfalse[39m [36mas[39m never)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m126:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 124 |[39m       mockedBcrypt[33m.[39mcompare[33m.[39mmockResolvedValue([36mfalse[39m [36mas[39m never)[33m;[39m
   [90m 125 |[39m       [36mconst[39m resultWrong [33m=[39m [36mawait[39m service[33m.[39mcompare([32m'testpassword'[39m[33m,[39m hash)[33m;[39m
  [31m[1m>[22m[39m[90m 126 |[39m       expect(resultWrong)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 127 |[39m     })[33m;[39m
   [90m 128 |[39m
   [90m 129 |[39m     it([32m'should propagate bcrypt errors'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m129:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 127 |[39m     })[33m;[39m
   [90m 128 |[39m
  [31m[1m>[22m[39m[90m 129 |[39m     it([32m'should propagate bcrypt errors'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 130 |[39m       [36mconst[39m password [33m=[39m [32m'testPassword'[39m[33m;[39m
   [90m 131 |[39m       [36mconst[39m hash [33m=[39m [32m'$2b$12$hashedPasswordExample'[39m[33m;[39m
   [90m 132 |[39m       [36mconst[39m error [33m=[39m [36mnew[39m [33mError[39m([32m'Bcrypt compare failed'[39m)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m136:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 134 |[39m       mockedBcrypt[33m.[39mcompare[33m.[39mmockRejectedValue(error [36mas[39m never)[33m;[39m
   [90m 135 |[39m
  [31m[1m>[22m[39m[90m 136 |[39m       [36mawait[39m expect(service[33m.[39mcompare(password[33m,[39m hash))[33m.[39mrejects[33m.[39mtoThrow(
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 137 |[39m         [32m'Bcrypt compare failed'[39m
   [90m 138 |[39m       )[33m;[39m
   [90m 139 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m141:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 139 |[39m     })[33m;[39m
   [90m 140 |[39m
  [31m[1m>[22m[39m[90m 141 |[39m     it([32m'should handle invalid hash format gracefully'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 142 |[39m       [36mconst[39m password [33m=[39m [32m'testPassword'[39m[33m;[39m
   [90m 143 |[39m       [36mconst[39m invalidHash [33m=[39m [32m'not-a-valid-hash'[39m[33m;[39m
   [90m 144 |[39m       [36mconst[39m error [33m=[39m [36mnew[39m [33mError[39m([32m'Invalid hash format'[39m)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m148:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 146 |[39m       mockedBcrypt[33m.[39mcompare[33m.[39mmockRejectedValue(error [36mas[39m never)[33m;[39m
   [90m 147 |[39m
  [31m[1m>[22m[39m[90m 148 |[39m       [36mawait[39m expect(service[33m.[39mcompare(password[33m,[39m invalidHash))[33m.[39mrejects[33m.[39mtoThrow(
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 149 |[39m         [32m'Invalid hash format'[39m
   [90m 150 |[39m       )[33m;[39m
   [90m 151 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m154:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 152 |[39m   })[33m;[39m
   [90m 153 |[39m
  [31m[1m>[22m[39m[90m 154 |[39m   describe([32m'integration scenarios'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 155 |[39m     it([32m'should handle rapid successive hashing requests'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m 156 |[39m       [36mconst[39m passwords [33m=[39m [33mArray[39m[33m.[39m[36mfrom[39m({ length[33m:[39m [35m10[39m }[33m,[39m (_[33m,[39m i) [33m=>[39m [32m`password${i}`[39m)[33m;[39m
   [90m 157 |[39m       [36mconst[39m hashes [33m=[39m passwords[33m.[39mmap((_[33m,[39m i) [33m=>[39m [32m`$2b$12$hash${i}`[39m)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m155:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 153 |[39m
   [90m 154 |[39m   describe([32m'integration scenarios'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 155 |[39m     it([32m'should handle rapid successive hashing requests'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 156 |[39m       [36mconst[39m passwords [33m=[39m [33mArray[39m[33m.[39m[36mfrom[39m({ length[33m:[39m [35m10[39m }[33m,[39m (_[33m,[39m i) [33m=>[39m [32m`password${i}`[39m)[33m;[39m
   [90m 157 |[39m       [36mconst[39m hashes [33m=[39m passwords[33m.[39mmap((_[33m,[39m i) [33m=>[39m [32m`$2b$12$hash${i}`[39m)[33m;[39m
   [90m 158 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m165:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 163 |[39m       [36mconst[39m results [33m=[39m [36mawait[39m [33mPromise[39m[33m.[39mall(passwords[33m.[39mmap((pwd) [33m=>[39m service[33m.[39mhash(pwd)))[33m;[39m
   [90m 164 |[39m
  [31m[1m>[22m[39m[90m 165 |[39m       expect(results)[33m.[39mtoEqual(hashes)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 166 |[39m       expect(mockedBcrypt[33m.[39mhash)[33m.[39mtoHaveBeenCalledTimes([35m10[39m)[33m;[39m
   [90m 167 |[39m     })[33m;[39m
   [90m 168 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m166:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 164 |[39m
   [90m 165 |[39m       expect(results)[33m.[39mtoEqual(hashes)[33m;[39m
  [31m[1m>[22m[39m[90m 166 |[39m       expect(mockedBcrypt[33m.[39mhash)[33m.[39mtoHaveBeenCalledTimes([35m10[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 167 |[39m     })[33m;[39m
   [90m 168 |[39m
   [90m 169 |[39m     it([32m'should handle rapid successive comparison requests'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m169:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 167 |[39m     })[33m;[39m
   [90m 168 |[39m
  [31m[1m>[22m[39m[90m 169 |[39m     it([32m'should handle rapid successive comparison requests'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 170 |[39m       [36mconst[39m comparisons [33m=[39m [33mArray[39m[33m.[39m[36mfrom[39m({ length[33m:[39m [35m10[39m }[33m,[39m (_[33m,[39m i) [33m=>[39m ({
   [90m 171 |[39m         password[33m:[39m [32m`password${i}`[39m[33m,[39m
   [90m 172 |[39m         hash[33m:[39m [32m`$2b$12$hash${i}`[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m184:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 182 |[39m       )[33m;[39m
   [90m 183 |[39m
  [31m[1m>[22m[39m[90m 184 |[39m       expect(results)[33m.[39mtoEqual(comparisons[33m.[39mmap((c) [33m=>[39m c[33m.[39mexpected))[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 185 |[39m       expect(mockedBcrypt[33m.[39mcompare)[33m.[39mtoHaveBeenCalledTimes([35m10[39m)[33m;[39m
   [90m 186 |[39m     })[33m;[39m
   [90m 187 |[39m   })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m185:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 183 |[39m
   [90m 184 |[39m       expect(results)[33m.[39mtoEqual(comparisons[33m.[39mmap((c) [33m=>[39m c[33m.[39mexpected))[33m;[39m
  [31m[1m>[22m[39m[90m 185 |[39m       expect(mockedBcrypt[33m.[39mcompare)[33m.[39mtoHaveBeenCalledTimes([35m10[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 186 |[39m     })[33m;[39m
   [90m 187 |[39m   })[33m;[39m
   [90m 188 |[39m })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m7:10[22m[39m[1m[39m[22m
[90mTS2503: [39mCannot find namespace 'jest'.
  [0m [90m  5 |[39m [90m// Mock Redis[39m
   [90m  6 |[39m [36mconst[39m mockRedis[33m:[39m {
  [31m[1m>[22m[39m[90m  7 |[39m   setex[33m:[39m jest[33m.[39m[33mMock[39m[33m;[39m
   [90m    |[39m          [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m  8 |[39m   [36mget[39m[33m:[39m jest[33m.[39m[33mMock[39m[33m;[39m
   [90m  9 |[39m   del[33m:[39m jest[33m.[39m[33mMock[39m[33m;[39m
   [90m 10 |[39m   on[33m:[39m jest[33m.[39m[33mMock[39m[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m8:8[22m[39m[1m[39m[22m
[90mTS2503: [39mCannot find namespace 'jest'.
  [0m [90m  6 |[39m [36mconst[39m mockRedis[33m:[39m {
   [90m  7 |[39m   setex[33m:[39m jest[33m.[39m[33mMock[39m[33m;[39m
  [31m[1m>[22m[39m[90m  8 |[39m   [36mget[39m[33m:[39m jest[33m.[39m[33mMock[39m[33m;[39m
   [90m    |[39m        [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m  9 |[39m   del[33m:[39m jest[33m.[39m[33mMock[39m[33m;[39m
   [90m 10 |[39m   on[33m:[39m jest[33m.[39m[33mMock[39m[33m;[39m
   [90m 11 |[39m   _handlers[33m:[39m [33mRecord[39m[33m<[39m[33mstring[39m[33m,[39m ([33m...[39margs[33m:[39m unknown[]) [33m=>[39m [36mvoid[39m[33m>[39m[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m9:8[22m[39m[1m[39m[22m
[90mTS2503: [39mCannot find namespace 'jest'.
  [0m [90m  7 |[39m   setex[33m:[39m jest[33m.[39m[33mMock[39m[33m;[39m
   [90m  8 |[39m   [36mget[39m[33m:[39m jest[33m.[39m[33mMock[39m[33m;[39m
  [31m[1m>[22m[39m[90m  9 |[39m   del[33m:[39m jest[33m.[39m[33mMock[39m[33m;[39m
   [90m    |[39m        [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 10 |[39m   on[33m:[39m jest[33m.[39m[33mMock[39m[33m;[39m
   [90m 11 |[39m   _handlers[33m:[39m [33mRecord[39m[33m<[39m[33mstring[39m[33m,[39m ([33m...[39margs[33m:[39m unknown[]) [33m=>[39m [36mvoid[39m[33m>[39m[33m;[39m
   [90m 12 |[39m } [33m=[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m10:7[22m[39m[1m[39m[22m
[90mTS2503: [39mCannot find namespace 'jest'.
  [0m [90m  8 |[39m   [36mget[39m[33m:[39m jest[33m.[39m[33mMock[39m[33m;[39m
   [90m  9 |[39m   del[33m:[39m jest[33m.[39m[33mMock[39m[33m;[39m
  [31m[1m>[22m[39m[90m 10 |[39m   on[33m:[39m jest[33m.[39m[33mMock[39m[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 11 |[39m   _handlers[33m:[39m [33mRecord[39m[33m<[39m[33mstring[39m[33m,[39m ([33m...[39margs[33m:[39m unknown[]) [33m=>[39m [36mvoid[39m[33m>[39m[33m;[39m
   [90m 12 |[39m } [33m=[39m {
   [90m 13 |[39m   setex[33m:[39m jest[33m.[39mfn()[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m13:10[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 11 |[39m   _handlers[33m:[39m [33mRecord[39m[33m<[39m[33mstring[39m[33m,[39m ([33m...[39margs[33m:[39m unknown[]) [33m=>[39m [36mvoid[39m[33m>[39m[33m;[39m
   [90m 12 |[39m } [33m=[39m {
  [31m[1m>[22m[39m[90m 13 |[39m   setex[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m          [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 14 |[39m   [36mget[39m[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 15 |[39m   del[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 16 |[39m   on[33m:[39m jest[33m.[39mfn((event[33m:[39m string[33m,[39m handler[33m:[39m ([33m...[39margs[33m:[39m unknown[]) [33m=>[39m [36mvoid[39m) [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m14:8[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 12 |[39m } [33m=[39m {
   [90m 13 |[39m   setex[33m:[39m jest[33m.[39mfn()[33m,[39m
  [31m[1m>[22m[39m[90m 14 |[39m   [36mget[39m[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m        [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 15 |[39m   del[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 16 |[39m   on[33m:[39m jest[33m.[39mfn((event[33m:[39m string[33m,[39m handler[33m:[39m ([33m...[39margs[33m:[39m unknown[]) [33m=>[39m [36mvoid[39m) [33m=>[39m {
   [90m 17 |[39m     [90m// Store handlers for later triggering[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m15:8[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 13 |[39m   setex[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 14 |[39m   [36mget[39m[33m:[39m jest[33m.[39mfn()[33m,[39m
  [31m[1m>[22m[39m[90m 15 |[39m   del[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m        [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 16 |[39m   on[33m:[39m jest[33m.[39mfn((event[33m:[39m string[33m,[39m handler[33m:[39m ([33m...[39margs[33m:[39m unknown[]) [33m=>[39m [36mvoid[39m) [33m=>[39m {
   [90m 17 |[39m     [90m// Store handlers for later triggering[39m
   [90m 18 |[39m     [36mif[39m ([33m![39mmockRedis[33m.[39m_handlers) {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m16:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 14 |[39m   [36mget[39m[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 15 |[39m   del[33m:[39m jest[33m.[39mfn()[33m,[39m
  [31m[1m>[22m[39m[90m 16 |[39m   on[33m:[39m jest[33m.[39mfn((event[33m:[39m string[33m,[39m handler[33m:[39m ([33m...[39margs[33m:[39m unknown[]) [33m=>[39m [36mvoid[39m) [33m=>[39m {
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 17 |[39m     [90m// Store handlers for later triggering[39m
   [90m 18 |[39m     [36mif[39m ([33m![39mmockRedis[33m.[39m_handlers) {
   [90m 19 |[39m       mockRedis[33m.[39m_handlers [33m=[39m {}[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m27:1[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 25 |[39m }[33m;[39m
   [90m 26 |[39m
  [31m[1m>[22m[39m[90m 27 |[39m jest[33m.[39mmock([32m'ioredis'[39m[33m,[39m () [33m=>[39m {
   [90m    |[39m [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 28 |[39m   [36mreturn[39m {
   [90m 29 |[39m     __esModule[33m:[39m [36mtrue[39m[33m,[39m
   [90m 30 |[39m     [36mdefault[39m[33m:[39m jest[33m.[39mfn()[33m.[39mmockImplementation(() [33m=>[39m mockRedis)[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m30:14[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 28 |[39m   [36mreturn[39m {
   [90m 29 |[39m     __esModule[33m:[39m [36mtrue[39m[33m,[39m
  [31m[1m>[22m[39m[90m 30 |[39m     [36mdefault[39m[33m:[39m jest[33m.[39mfn()[33m.[39mmockImplementation(() [33m=>[39m mockRedis)[33m,[39m
   [90m    |[39m              [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 31 |[39m     [33mRedis[39m[33m:[39m jest[33m.[39mfn()[33m.[39mmockImplementation(() [33m=>[39m mockRedis)[33m,[39m
   [90m 32 |[39m   }[33m;[39m
   [90m 33 |[39m })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m31:12[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 29 |[39m     __esModule[33m:[39m [36mtrue[39m[33m,[39m
   [90m 30 |[39m     [36mdefault[39m[33m:[39m jest[33m.[39mfn()[33m.[39mmockImplementation(() [33m=>[39m mockRedis)[33m,[39m
  [31m[1m>[22m[39m[90m 31 |[39m     [33mRedis[39m[33m:[39m jest[33m.[39mfn()[33m.[39mmockImplementation(() [33m=>[39m mockRedis)[33m,[39m
   [90m    |[39m            [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 32 |[39m   }[33m;[39m
   [90m 33 |[39m })[33m;[39m
   [90m 34 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m35:1[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 33 |[39m })[33m;[39m
   [90m 34 |[39m
  [31m[1m>[22m[39m[90m 35 |[39m describe([32m'SessionService'[39m[33m,[39m () [33m=>[39m {
   [90m    |[39m [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 36 |[39m   [36mlet[39m service[33m:[39m [33mSessionService[39m[33m;[39m
   [90m 37 |[39m   [36mlet[39m mockLogger[33m:[39m jest[33m.[39m[33mSpyInstance[39m[33m;[39m
   [90m 38 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m37:19[22m[39m[1m[39m[22m
[90mTS2503: [39mCannot find namespace 'jest'.
  [0m [90m 35 |[39m describe([32m'SessionService'[39m[33m,[39m () [33m=>[39m {
   [90m 36 |[39m   [36mlet[39m service[33m:[39m [33mSessionService[39m[33m;[39m
  [31m[1m>[22m[39m[90m 37 |[39m   [36mlet[39m mockLogger[33m:[39m jest[33m.[39m[33mSpyInstance[39m[33m;[39m
   [90m    |[39m                   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 38 |[39m
   [90m 39 |[39m   [36mconst[39m createMockSessionData [33m=[39m (overrides[33m?[39m[33m:[39m [33mPartial[39m[33m<[39m[33mSessionData[39m[33m>[39m)[33m:[39m [33mSessionData[39m [33m=>[39m ({
   [90m 40 |[39m     userId[33m:[39m [32m'user-123'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m52:3[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'beforeEach'.
  [0m [90m 50 |[39m   })[33m;[39m
   [90m 51 |[39m
  [31m[1m>[22m[39m[90m 52 |[39m   beforeEach([36masync[39m () [33m=>[39m {
   [90m    |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 53 |[39m     [90m// Clear all mocks[39m
   [90m 54 |[39m     jest[33m.[39mclearAllMocks()[33m;[39m
   [90m 55 |[39m     mockRedis[33m.[39msetex[33m.[39mmockClear()[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m54:5[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 52 |[39m   beforeEach([36masync[39m () [33m=>[39m {
   [90m 53 |[39m     [90m// Clear all mocks[39m
  [31m[1m>[22m[39m[90m 54 |[39m     jest[33m.[39mclearAllMocks()[33m;[39m
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 55 |[39m     mockRedis[33m.[39msetex[33m.[39mmockClear()[33m;[39m
   [90m 56 |[39m     mockRedis[33m.[39m[36mget[39m[33m.[39mmockClear()[33m;[39m
   [90m 57 |[39m     mockRedis[33m.[39mdel[33m.[39mmockClear()[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m61:18[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 59 |[39m
   [90m 60 |[39m     [90m// Mock Logger methods[39m
  [31m[1m>[22m[39m[90m 61 |[39m     mockLogger [33m=[39m jest[33m.[39mspyOn([33mLogger[39m[33m.[39mprototype[33m,[39m [32m'log'[39m)[33m.[39mmockImplementation()[33m;[39m
   [90m    |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 62 |[39m     jest[33m.[39mspyOn([33mLogger[39m[33m.[39mprototype[33m,[39m [32m'warn'[39m)[33m.[39mmockImplementation()[33m;[39m
   [90m 63 |[39m     jest[33m.[39mspyOn([33mLogger[39m[33m.[39mprototype[33m,[39m [32m'error'[39m)[33m.[39mmockImplementation()[33m;[39m
   [90m 64 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m62:5[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 60 |[39m     [90m// Mock Logger methods[39m
   [90m 61 |[39m     mockLogger [33m=[39m jest[33m.[39mspyOn([33mLogger[39m[33m.[39mprototype[33m,[39m [32m'log'[39m)[33m.[39mmockImplementation()[33m;[39m
  [31m[1m>[22m[39m[90m 62 |[39m     jest[33m.[39mspyOn([33mLogger[39m[33m.[39mprototype[33m,[39m [32m'warn'[39m)[33m.[39mmockImplementation()[33m;[39m
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 63 |[39m     jest[33m.[39mspyOn([33mLogger[39m[33m.[39mprototype[33m,[39m [32m'error'[39m)[33m.[39mmockImplementation()[33m;[39m
   [90m 64 |[39m
   [90m 65 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m63:5[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 61 |[39m     mockLogger [33m=[39m jest[33m.[39mspyOn([33mLogger[39m[33m.[39mprototype[33m,[39m [32m'log'[39m)[33m.[39mmockImplementation()[33m;[39m
   [90m 62 |[39m     jest[33m.[39mspyOn([33mLogger[39m[33m.[39mprototype[33m,[39m [32m'warn'[39m)[33m.[39mmockImplementation()[33m;[39m
  [31m[1m>[22m[39m[90m 63 |[39m     jest[33m.[39mspyOn([33mLogger[39m[33m.[39mprototype[33m,[39m [32m'error'[39m)[33m.[39mmockImplementation()[33m;[39m
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 64 |[39m
   [90m 65 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
   [90m 66 |[39m       providers[33m:[39m [[33mSessionService[39m][33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m77:3[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'afterEach'.
  [0m [90m 75 |[39m   })[33m;[39m
   [90m 76 |[39m
  [31m[1m>[22m[39m[90m 77 |[39m   afterEach(() [33m=>[39m {
   [90m    |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 78 |[39m     jest[33m.[39mrestoreAllMocks()[33m;[39m
   [90m 79 |[39m   })[33m;[39m
   [90m 80 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m78:5[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 76 |[39m
   [90m 77 |[39m   afterEach(() [33m=>[39m {
  [31m[1m>[22m[39m[90m 78 |[39m     jest[33m.[39mrestoreAllMocks()[33m;[39m
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 79 |[39m   })[33m;[39m
   [90m 80 |[39m
   [90m 81 |[39m   describe([32m'initialization'[39m[33m,[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m81:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 79 |[39m   })[33m;[39m
   [90m 80 |[39m
  [31m[1m>[22m[39m[90m 81 |[39m   describe([32m'initialization'[39m[33m,[39m () [33m=>[39m {
   [90m    |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 82 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m 83 |[39m       expect(service)[33m.[39mtoBeDefined()[33m;[39m
   [90m 84 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m82:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 80 |[39m
   [90m 81 |[39m   describe([32m'initialization'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 82 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 83 |[39m       expect(service)[33m.[39mtoBeDefined()[33m;[39m
   [90m 84 |[39m     })[33m;[39m
   [90m 85 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m83:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 81 |[39m   describe([32m'initialization'[39m[33m,[39m () [33m=>[39m {
   [90m 82 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 83 |[39m       expect(service)[33m.[39mtoBeDefined()[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 84 |[39m     })[33m;[39m
   [90m 85 |[39m
   [90m 86 |[39m     it([32m'should initialize Redis with correct configuration'[39m[33m,[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m86:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 84 |[39m     })[33m;[39m
   [90m 85 |[39m
  [31m[1m>[22m[39m[90m 86 |[39m     it([32m'should initialize Redis with correct configuration'[39m[33m,[39m () [33m=>[39m {
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 87 |[39m       expect(mockRedis[33m.[39m_handlers[[32m'connect'[39m])[33m.[39mtoBeDefined()[33m;[39m
   [90m 88 |[39m       expect(mockRedis[33m.[39m_handlers[[32m'error'[39m])[33m.[39mtoBeDefined()[33m;[39m
   [90m 89 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m87:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 85 |[39m
   [90m 86 |[39m     it([32m'should initialize Redis with correct configuration'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 87 |[39m       expect(mockRedis[33m.[39m_handlers[[32m'connect'[39m])[33m.[39mtoBeDefined()[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 88 |[39m       expect(mockRedis[33m.[39m_handlers[[32m'error'[39m])[33m.[39mtoBeDefined()[33m;[39m
   [90m 89 |[39m     })[33m;[39m
   [90m 90 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m88:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 86 |[39m     it([32m'should initialize Redis with correct configuration'[39m[33m,[39m () [33m=>[39m {
   [90m 87 |[39m       expect(mockRedis[33m.[39m_handlers[[32m'connect'[39m])[33m.[39mtoBeDefined()[33m;[39m
  [31m[1m>[22m[39m[90m 88 |[39m       expect(mockRedis[33m.[39m_handlers[[32m'error'[39m])[33m.[39mtoBeDefined()[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 89 |[39m     })[33m;[39m
   [90m 90 |[39m
   [90m 91 |[39m     it([32m'should log success message on Redis connection'[39m[33m,[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m91:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 89 |[39m     })[33m;[39m
   [90m 90 |[39m
  [31m[1m>[22m[39m[90m 91 |[39m     it([32m'should log success message on Redis connection'[39m[33m,[39m () [33m=>[39m {
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 92 |[39m       expect(mockLogger)[33m.[39mtoHaveBeenCalledWith([32m'Redis connected successfully'[39m)[33m;[39m
   [90m 93 |[39m     })[33m;[39m
   [90m 94 |[39m   })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m92:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 90 |[39m
   [90m 91 |[39m     it([32m'should log success message on Redis connection'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 92 |[39m       expect(mockLogger)[33m.[39mtoHaveBeenCalledWith([32m'Redis connected successfully'[39m)[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 93 |[39m     })[33m;[39m
   [90m 94 |[39m   })[33m;[39m
   [90m 95 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m96:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 94 |[39m   })[33m;[39m
   [90m 95 |[39m
  [31m[1m>[22m[39m[90m 96 |[39m   describe([32m'createSession'[39m[33m,[39m () [33m=>[39m {
   [90m    |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 97 |[39m     it([32m'should create a session in Redis with correct TTL'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m 98 |[39m       [36mconst[39m sessionData [33m=[39m createMockSessionData()[33m;[39m
   [90m 99 |[39m       mockRedis[33m.[39msetex[33m.[39mmockResolvedValue([32m'OK'[39m)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m97:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m  95 |[39m
   [90m  96 |[39m   describe([32m'createSession'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m  97 |[39m     it([32m'should create a session in Redis with correct TTL'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m  98 |[39m       [36mconst[39m sessionData [33m=[39m createMockSessionData()[33m;[39m
   [90m  99 |[39m       mockRedis[33m.[39msetex[33m.[39mmockResolvedValue([32m'OK'[39m)[33m;[39m
   [90m 100 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m103:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 101 |[39m       [36mawait[39m service[33m.[39mcreateSession(sessionData)[33m;[39m
   [90m 102 |[39m
  [31m[1m>[22m[39m[90m 103 |[39m       expect(mockRedis[33m.[39msetex)[33m.[39mtoHaveBeenCalledWith(
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 104 |[39m         [32m`session:${sessionData.userId}`[39m[33m,[39m
   [90m 105 |[39m         [35m7[39m [33m*[39m [35m24[39m [33m*[39m [35m60[39m [33m*[39m [35m60[39m[33m,[39m [90m// 7 days in seconds[39m
   [90m 106 |[39m         [33mJSON[39m[33m.[39mstringify(sessionData)[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m108:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 106 |[39m         [33mJSON[39m[33m.[39mstringify(sessionData)
   [90m 107 |[39m       )[33m;[39m
  [31m[1m>[22m[39m[90m 108 |[39m       expect(mockLogger)[33m.[39mtoHaveBeenCalledWith([32m`Session created for user ${sessionData.userId}`[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 109 |[39m     })[33m;[39m
   [90m 110 |[39m
   [90m 111 |[39m     it([32m'should handle session creation with minimal metadata'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m111:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 109 |[39m     })[33m;[39m
   [90m 110 |[39m
  [31m[1m>[22m[39m[90m 111 |[39m     it([32m'should handle session creation with minimal metadata'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 112 |[39m       [36mconst[39m sessionData [33m=[39m createMockSessionData({ metadata[33m:[39m {} })[33m;[39m
   [90m 113 |[39m       mockRedis[33m.[39msetex[33m.[39mmockResolvedValue([32m'OK'[39m)[33m;[39m
   [90m 114 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m117:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 115 |[39m       [36mawait[39m service[33m.[39mcreateSession(sessionData)[33m;[39m
   [90m 116 |[39m
  [31m[1m>[22m[39m[90m 117 |[39m       expect(mockRedis[33m.[39msetex)[33m.[39mtoHaveBeenCalledWith(
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 118 |[39m         [32m`session:${sessionData.userId}`[39m[33m,[39m
   [90m 119 |[39m         expect[33m.[39many([33mNumber[39m)[33m,[39m
   [90m 120 |[39m         [33mJSON[39m[33m.[39mstringify(sessionData)[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m119:9[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 117 |[39m       expect(mockRedis[33m.[39msetex)[33m.[39mtoHaveBeenCalledWith(
   [90m 118 |[39m         [32m`session:${sessionData.userId}`[39m[33m,[39m
  [31m[1m>[22m[39m[90m 119 |[39m         expect[33m.[39many([33mNumber[39m)[33m,[39m
   [90m     |[39m         [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 120 |[39m         [33mJSON[39m[33m.[39mstringify(sessionData)
   [90m 121 |[39m       )[33m;[39m
   [90m 122 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m124:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 122 |[39m     })[33m;[39m
   [90m 123 |[39m
  [31m[1m>[22m[39m[90m 124 |[39m     it([32m'should handle Redis errors gracefully'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 125 |[39m       [36mconst[39m sessionData [33m=[39m createMockSessionData()[33m;[39m
   [90m 126 |[39m       [36mconst[39m error [33m=[39m [36mnew[39m [33mError[39m([32m'Redis connection failed'[39m)[33m;[39m
   [90m 127 |[39m       mockRedis[33m.[39msetex[33m.[39mmockRejectedValue(error)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m131:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 129 |[39m       [36mawait[39m service[33m.[39mcreateSession(sessionData)[33m;[39m
   [90m 130 |[39m
  [31m[1m>[22m[39m[90m 131 |[39m       expect([33mLogger[39m[33m.[39mprototype[33m.[39merror)[33m.[39mtoHaveBeenCalledWith(
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 132 |[39m         [32m`Failed to create session: ${error.message}`[39m
   [90m 133 |[39m       )[33m;[39m
   [90m 134 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m136:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 134 |[39m     })[33m;[39m
   [90m 135 |[39m
  [31m[1m>[22m[39m[90m 136 |[39m     it([32m'should warn when Redis is unavailable'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 137 |[39m       [90m// Simulate Redis error[39m
   [90m 138 |[39m       [36mif[39m (mockRedis[33m.[39m_handlers[[32m'error'[39m]) {
   [90m 139 |[39m         mockRedis[33m.[39m_handlers[[32m'error'[39m]([36mnew[39m [33mError[39m([32m'Connection refused'[39m))[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m145:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 143 |[39m       [36mawait[39m service[33m.[39mcreateSession(sessionData)[33m;[39m
   [90m 144 |[39m
  [31m[1m>[22m[39m[90m 145 |[39m       expect([33mLogger[39m[33m.[39mprototype[33m.[39mwarn)[33m.[39mtoHaveBeenCalledWith(
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 146 |[39m         [32m'Redis unavailable, session not persisted'[39m
   [90m 147 |[39m       )[33m;[39m
   [90m 148 |[39m       expect(mockRedis[33m.[39msetex)[33m.[39mnot[33m.[39mtoHaveBeenCalled()[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m148:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 146 |[39m         [32m'Redis unavailable, session not persisted'[39m
   [90m 147 |[39m       )[33m;[39m
  [31m[1m>[22m[39m[90m 148 |[39m       expect(mockRedis[33m.[39msetex)[33m.[39mnot[33m.[39mtoHaveBeenCalled()[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 149 |[39m     })[33m;[39m
   [90m 150 |[39m   })[33m;[39m
   [90m 151 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m152:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 150 |[39m   })[33m;[39m
   [90m 151 |[39m
  [31m[1m>[22m[39m[90m 152 |[39m   describe([32m'getSession'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 153 |[39m     it([32m'should retrieve a session from Redis'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m 154 |[39m       [36mconst[39m sessionData [33m=[39m createMockSessionData()[33m;[39m
   [90m 155 |[39m       mockRedis[33m.[39m[36mget[39m[33m.[39mmockResolvedValue([33mJSON[39m[33m.[39mstringify(sessionData))[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m153:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 151 |[39m
   [90m 152 |[39m   describe([32m'getSession'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 153 |[39m     it([32m'should retrieve a session from Redis'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 154 |[39m       [36mconst[39m sessionData [33m=[39m createMockSessionData()[33m;[39m
   [90m 155 |[39m       mockRedis[33m.[39m[36mget[39m[33m.[39mmockResolvedValue([33mJSON[39m[33m.[39mstringify(sessionData))[33m;[39m
   [90m 156 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m159:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 157 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39mgetSession(sessionData[33m.[39muserId)[33m;[39m
   [90m 158 |[39m
  [31m[1m>[22m[39m[90m 159 |[39m       expect(mockRedis[33m.[39m[36mget[39m)[33m.[39mtoHaveBeenCalledWith([32m`session:${sessionData.userId}`[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 160 |[39m       expect(result)[33m.[39mtoEqual(sessionData)[33m;[39m
   [90m 161 |[39m     })[33m;[39m
   [90m 162 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m160:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 158 |[39m
   [90m 159 |[39m       expect(mockRedis[33m.[39m[36mget[39m)[33m.[39mtoHaveBeenCalledWith([32m`session:${sessionData.userId}`[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 160 |[39m       expect(result)[33m.[39mtoEqual(sessionData)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 161 |[39m     })[33m;[39m
   [90m 162 |[39m
   [90m 163 |[39m     it([32m'should return null when session does not exist'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m163:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 161 |[39m     })[33m;[39m
   [90m 162 |[39m
  [31m[1m>[22m[39m[90m 163 |[39m     it([32m'should return null when session does not exist'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 164 |[39m       mockRedis[33m.[39m[36mget[39m[33m.[39mmockResolvedValue([36mnull[39m)[33m;[39m
   [90m 165 |[39m
   [90m 166 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39mgetSession([32m'non-existent-user'[39m)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m168:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 166 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39mgetSession([32m'non-existent-user'[39m)[33m;[39m
   [90m 167 |[39m
  [31m[1m>[22m[39m[90m 168 |[39m       expect(result)[33m.[39mtoBeNull()[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 169 |[39m     })[33m;[39m
   [90m 170 |[39m
   [90m 171 |[39m     it([32m'should handle JSON parsing errors'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m171:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 169 |[39m     })[33m;[39m
   [90m 170 |[39m
  [31m[1m>[22m[39m[90m 171 |[39m     it([32m'should handle JSON parsing errors'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 172 |[39m       mockRedis[33m.[39m[36mget[39m[33m.[39mmockResolvedValue([32m'invalid-json'[39m)[33m;[39m
   [90m 173 |[39m
   [90m 174 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39mgetSession([32m'user-123'[39m)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m176:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 174 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39mgetSession([32m'user-123'[39m)[33m;[39m
   [90m 175 |[39m
  [31m[1m>[22m[39m[90m 176 |[39m       expect([33mLogger[39m[33m.[39mprototype[33m.[39merror)[33m.[39mtoHaveBeenCalledWith(
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 177 |[39m         expect[33m.[39mstringContaining([32m'Failed to get session:'[39m)
   [90m 178 |[39m       )[33m;[39m
   [90m 179 |[39m       expect(result)[33m.[39mtoBeNull()[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m177:9[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 175 |[39m
   [90m 176 |[39m       expect([33mLogger[39m[33m.[39mprototype[33m.[39merror)[33m.[39mtoHaveBeenCalledWith(
  [31m[1m>[22m[39m[90m 177 |[39m         expect[33m.[39mstringContaining([32m'Failed to get session:'[39m)
   [90m     |[39m         [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 178 |[39m       )[33m;[39m
   [90m 179 |[39m       expect(result)[33m.[39mtoBeNull()[33m;[39m
   [90m 180 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m179:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 177 |[39m         expect[33m.[39mstringContaining([32m'Failed to get session:'[39m)
   [90m 178 |[39m       )[33m;[39m
  [31m[1m>[22m[39m[90m 179 |[39m       expect(result)[33m.[39mtoBeNull()[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 180 |[39m     })[33m;[39m
   [90m 181 |[39m
   [90m 182 |[39m     it([32m'should handle Redis errors'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m182:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 180 |[39m     })[33m;[39m
   [90m 181 |[39m
  [31m[1m>[22m[39m[90m 182 |[39m     it([32m'should handle Redis errors'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 183 |[39m       [36mconst[39m error [33m=[39m [36mnew[39m [33mError[39m([32m'Redis read failed'[39m)[33m;[39m
   [90m 184 |[39m       mockRedis[33m.[39m[36mget[39m[33m.[39mmockRejectedValue(error)[33m;[39m
   [90m 185 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m188:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 186 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39mgetSession([32m'user-123'[39m)[33m;[39m
   [90m 187 |[39m
  [31m[1m>[22m[39m[90m 188 |[39m       expect([33mLogger[39m[33m.[39mprototype[33m.[39merror)[33m.[39mtoHaveBeenCalledWith(
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 189 |[39m         [32m`Failed to get session: ${error.message}`[39m
   [90m 190 |[39m       )[33m;[39m
   [90m 191 |[39m       expect(result)[33m.[39mtoBeNull()[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m191:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 189 |[39m         [32m`Failed to get session: ${error.message}`[39m
   [90m 190 |[39m       )[33m;[39m
  [31m[1m>[22m[39m[90m 191 |[39m       expect(result)[33m.[39mtoBeNull()[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 192 |[39m     })[33m;[39m
   [90m 193 |[39m
   [90m 194 |[39m     it([32m'should return null when Redis is unavailable'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m194:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 192 |[39m     })[33m;[39m
   [90m 193 |[39m
  [31m[1m>[22m[39m[90m 194 |[39m     it([32m'should return null when Redis is unavailable'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 195 |[39m       [36mif[39m (mockRedis[33m.[39m_handlers[[32m'error'[39m]) {
   [90m 196 |[39m         mockRedis[33m.[39m_handlers[[32m'error'[39m]([36mnew[39m [33mError[39m([32m'Connection refused'[39m))[33m;[39m
   [90m 197 |[39m       }[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m201:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 199 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39mgetSession([32m'user-123'[39m)[33m;[39m
   [90m 200 |[39m
  [31m[1m>[22m[39m[90m 201 |[39m       expect([33mLogger[39m[33m.[39mprototype[33m.[39mwarn)[33m.[39mtoHaveBeenCalledWith(
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 202 |[39m         [32m'Redis unavailable, cannot retrieve session'[39m
   [90m 203 |[39m       )[33m;[39m
   [90m 204 |[39m       expect(result)[33m.[39mtoBeNull()[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m204:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 202 |[39m         [32m'Redis unavailable, cannot retrieve session'[39m
   [90m 203 |[39m       )[33m;[39m
  [31m[1m>[22m[39m[90m 204 |[39m       expect(result)[33m.[39mtoBeNull()[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 205 |[39m     })[33m;[39m
   [90m 206 |[39m   })[33m;[39m
   [90m 207 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m208:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 206 |[39m   })[33m;[39m
   [90m 207 |[39m
  [31m[1m>[22m[39m[90m 208 |[39m   describe([32m'deleteSession'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 209 |[39m     it([32m'should delete a session from Redis'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m 210 |[39m       [36mconst[39m userId [33m=[39m [32m'user-123'[39m[33m;[39m
   [90m 211 |[39m       mockRedis[33m.[39mdel[33m.[39mmockResolvedValue([35m1[39m)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m209:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 207 |[39m
   [90m 208 |[39m   describe([32m'deleteSession'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 209 |[39m     it([32m'should delete a session from Redis'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 210 |[39m       [36mconst[39m userId [33m=[39m [32m'user-123'[39m[33m;[39m
   [90m 211 |[39m       mockRedis[33m.[39mdel[33m.[39mmockResolvedValue([35m1[39m)[33m;[39m
   [90m 212 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m215:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 213 |[39m       [36mawait[39m service[33m.[39mdeleteSession(userId)[33m;[39m
   [90m 214 |[39m
  [31m[1m>[22m[39m[90m 215 |[39m       expect(mockRedis[33m.[39mdel)[33m.[39mtoHaveBeenCalledWith([32m`session:${userId}`[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 216 |[39m       expect(mockLogger)[33m.[39mtoHaveBeenCalledWith([32m`Session deleted for user ${userId}`[39m)[33m;[39m
   [90m 217 |[39m     })[33m;[39m
   [90m 218 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m216:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 214 |[39m
   [90m 215 |[39m       expect(mockRedis[33m.[39mdel)[33m.[39mtoHaveBeenCalledWith([32m`session:${userId}`[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 216 |[39m       expect(mockLogger)[33m.[39mtoHaveBeenCalledWith([32m`Session deleted for user ${userId}`[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 217 |[39m     })[33m;[39m
   [90m 218 |[39m
   [90m 219 |[39m     it([32m'should handle deletion of non-existent session'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m219:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 217 |[39m     })[33m;[39m
   [90m 218 |[39m
  [31m[1m>[22m[39m[90m 219 |[39m     it([32m'should handle deletion of non-existent session'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 220 |[39m       [36mconst[39m userId [33m=[39m [32m'non-existent-user'[39m[33m;[39m
   [90m 221 |[39m       mockRedis[33m.[39mdel[33m.[39mmockResolvedValue([35m0[39m)[33m;[39m [90m// Redis returns 0 when key doesn't exist[39m
   [90m 222 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m225:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 223 |[39m       [36mawait[39m service[33m.[39mdeleteSession(userId)[33m;[39m
   [90m 224 |[39m
  [31m[1m>[22m[39m[90m 225 |[39m       expect(mockRedis[33m.[39mdel)[33m.[39mtoHaveBeenCalledWith([32m`session:${userId}`[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 226 |[39m     })[33m;[39m
   [90m 227 |[39m
   [90m 228 |[39m     it([32m'should handle Redis errors during deletion'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m228:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 226 |[39m     })[33m;[39m
   [90m 227 |[39m
  [31m[1m>[22m[39m[90m 228 |[39m     it([32m'should handle Redis errors during deletion'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 229 |[39m       [36mconst[39m error [33m=[39m [36mnew[39m [33mError[39m([32m'Redis delete failed'[39m)[33m;[39m
   [90m 230 |[39m       mockRedis[33m.[39mdel[33m.[39mmockRejectedValue(error)[33m;[39m
   [90m 231 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m234:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 232 |[39m       [36mawait[39m service[33m.[39mdeleteSession([32m'user-123'[39m)[33m;[39m
   [90m 233 |[39m
  [31m[1m>[22m[39m[90m 234 |[39m       expect([33mLogger[39m[33m.[39mprototype[33m.[39merror)[33m.[39mtoHaveBeenCalledWith(
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 235 |[39m         [32m`Failed to delete session: ${error.message}`[39m
   [90m 236 |[39m       )[33m;[39m
   [90m 237 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m239:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 237 |[39m     })[33m;[39m
   [90m 238 |[39m
  [31m[1m>[22m[39m[90m 239 |[39m     it([32m'should warn when Redis is unavailable'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 240 |[39m       [36mif[39m (mockRedis[33m.[39m_handlers[[32m'error'[39m]) {
   [90m 241 |[39m         mockRedis[33m.[39m_handlers[[32m'error'[39m]([36mnew[39m [33mError[39m([32m'Connection refused'[39m))[33m;[39m
   [90m 242 |[39m       }[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m246:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 244 |[39m       [36mawait[39m service[33m.[39mdeleteSession([32m'user-123'[39m)[33m;[39m
   [90m 245 |[39m
  [31m[1m>[22m[39m[90m 246 |[39m       expect([33mLogger[39m[33m.[39mprototype[33m.[39mwarn)[33m.[39mtoHaveBeenCalledWith(
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 247 |[39m         [32m'Redis unavailable, session not deleted'[39m
   [90m 248 |[39m       )[33m;[39m
   [90m 249 |[39m       expect(mockRedis[33m.[39mdel)[33m.[39mnot[33m.[39mtoHaveBeenCalled()[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m249:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 247 |[39m         [32m'Redis unavailable, session not deleted'[39m
   [90m 248 |[39m       )[33m;[39m
  [31m[1m>[22m[39m[90m 249 |[39m       expect(mockRedis[33m.[39mdel)[33m.[39mnot[33m.[39mtoHaveBeenCalled()[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 250 |[39m     })[33m;[39m
   [90m 251 |[39m   })[33m;[39m
   [90m 252 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m253:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 251 |[39m   })[33m;[39m
   [90m 252 |[39m
  [31m[1m>[22m[39m[90m 253 |[39m   describe([32m'blacklistToken'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 254 |[39m     it([32m'should blacklist a token with correct expiration'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m 255 |[39m       [36mconst[39m tokenId [33m=[39m [32m'token-xyz-123'[39m[33m;[39m
   [90m 256 |[39m       [36mconst[39m expiresIn [33m=[39m [35m900[39m[33m;[39m [90m// 15 minutes in seconds[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m254:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 252 |[39m
   [90m 253 |[39m   describe([32m'blacklistToken'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 254 |[39m     it([32m'should blacklist a token with correct expiration'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 255 |[39m       [36mconst[39m tokenId [33m=[39m [32m'token-xyz-123'[39m[33m;[39m
   [90m 256 |[39m       [36mconst[39m expiresIn [33m=[39m [35m900[39m[33m;[39m [90m// 15 minutes in seconds[39m
   [90m 257 |[39m       mockRedis[33m.[39msetex[33m.[39mmockResolvedValue([32m'OK'[39m)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m261:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 259 |[39m       [36mawait[39m service[33m.[39mblacklistToken(tokenId[33m,[39m expiresIn)[33m;[39m
   [90m 260 |[39m
  [31m[1m>[22m[39m[90m 261 |[39m       expect(mockRedis[33m.[39msetex)[33m.[39mtoHaveBeenCalledWith(
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 262 |[39m         [32m`blacklist:${tokenId}`[39m[33m,[39m
   [90m 263 |[39m         expiresIn[33m,[39m
   [90m 264 |[39m         [32m'revoked'[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m266:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 264 |[39m         [32m'revoked'[39m
   [90m 265 |[39m       )[33m;[39m
  [31m[1m>[22m[39m[90m 266 |[39m       expect(mockLogger)[33m.[39mtoHaveBeenCalledWith([32m`Token ${tokenId} blacklisted`[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 267 |[39m     })[33m;[39m
   [90m 268 |[39m
   [90m 269 |[39m     it([32m'should handle blacklisting with different expiration times'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m269:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 267 |[39m     })[33m;[39m
   [90m 268 |[39m
  [31m[1m>[22m[39m[90m 269 |[39m     it([32m'should handle blacklisting with different expiration times'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 270 |[39m       [36mconst[39m expirations [33m=[39m [[35m60[39m[33m,[39m [35m300[39m[33m,[39m [35m900[39m[33m,[39m [35m3600[39m][33m;[39m [90m// 1min, 5min, 15min, 1hour[39m
   [90m 271 |[39m
   [90m 272 |[39m       [36mfor[39m ([36mconst[39m expiresIn [36mof[39m expirations) {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m276:9[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 274 |[39m         [36mawait[39m service[33m.[39mblacklistToken([32m'token-123'[39m[33m,[39m expiresIn)[33m;[39m
   [90m 275 |[39m
  [31m[1m>[22m[39m[90m 276 |[39m         expect(mockRedis[33m.[39msetex)[33m.[39mtoHaveBeenCalledWith(
   [90m     |[39m         [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 277 |[39m           [32m'blacklist:token-123'[39m[33m,[39m
   [90m 278 |[39m           expiresIn[33m,[39m
   [90m 279 |[39m           [32m'revoked'[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m284:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 282 |[39m     })[33m;[39m
   [90m 283 |[39m
  [31m[1m>[22m[39m[90m 284 |[39m     it([32m'should handle Redis errors during blacklisting'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 285 |[39m       [36mconst[39m error [33m=[39m [36mnew[39m [33mError[39m([32m'Redis blacklist failed'[39m)[33m;[39m
   [90m 286 |[39m       mockRedis[33m.[39msetex[33m.[39mmockRejectedValue(error)[33m;[39m
   [90m 287 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m290:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 288 |[39m       [36mawait[39m service[33m.[39mblacklistToken([32m'token-123'[39m[33m,[39m [35m900[39m)[33m;[39m
   [90m 289 |[39m
  [31m[1m>[22m[39m[90m 290 |[39m       expect([33mLogger[39m[33m.[39mprototype[33m.[39merror)[33m.[39mtoHaveBeenCalledWith(
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 291 |[39m         [32m`Failed to blacklist token: ${error.message}`[39m
   [90m 292 |[39m       )[33m;[39m
   [90m 293 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m295:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 293 |[39m     })[33m;[39m
   [90m 294 |[39m
  [31m[1m>[22m[39m[90m 295 |[39m     it([32m'should warn when Redis is unavailable'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 296 |[39m       [36mif[39m (mockRedis[33m.[39m_handlers[[32m'error'[39m]) {
   [90m 297 |[39m         mockRedis[33m.[39m_handlers[[32m'error'[39m]([36mnew[39m [33mError[39m([32m'Connection refused'[39m))[33m;[39m
   [90m 298 |[39m       }[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m302:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 300 |[39m       [36mawait[39m service[33m.[39mblacklistToken([32m'token-123'[39m[33m,[39m [35m900[39m)[33m;[39m
   [90m 301 |[39m
  [31m[1m>[22m[39m[90m 302 |[39m       expect([33mLogger[39m[33m.[39mprototype[33m.[39mwarn)[33m.[39mtoHaveBeenCalledWith(
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 303 |[39m         [32m'Redis unavailable, token not blacklisted'[39m
   [90m 304 |[39m       )[33m;[39m
   [90m 305 |[39m       expect(mockRedis[33m.[39msetex)[33m.[39mnot[33m.[39mtoHaveBeenCalled()[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m305:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 303 |[39m         [32m'Redis unavailable, token not blacklisted'[39m
   [90m 304 |[39m       )[33m;[39m
  [31m[1m>[22m[39m[90m 305 |[39m       expect(mockRedis[33m.[39msetex)[33m.[39mnot[33m.[39mtoHaveBeenCalled()[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 306 |[39m     })[33m;[39m
   [90m 307 |[39m   })[33m;[39m
   [90m 308 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m309:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 307 |[39m   })[33m;[39m
   [90m 308 |[39m
  [31m[1m>[22m[39m[90m 309 |[39m   describe([32m'isTokenBlacklisted'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 310 |[39m     it([32m'should return true when token is blacklisted'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m 311 |[39m       mockRedis[33m.[39m[36mget[39m[33m.[39mmockResolvedValue([32m'revoked'[39m)[33m;[39m
   [90m 312 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m310:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 308 |[39m
   [90m 309 |[39m   describe([32m'isTokenBlacklisted'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 310 |[39m     it([32m'should return true when token is blacklisted'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 311 |[39m       mockRedis[33m.[39m[36mget[39m[33m.[39mmockResolvedValue([32m'revoked'[39m)[33m;[39m
   [90m 312 |[39m
   [90m 313 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39misTokenBlacklisted([32m'token-123'[39m)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m315:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 313 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39misTokenBlacklisted([32m'token-123'[39m)[33m;[39m
   [90m 314 |[39m
  [31m[1m>[22m[39m[90m 315 |[39m       expect(mockRedis[33m.[39m[36mget[39m)[33m.[39mtoHaveBeenCalledWith([32m'blacklist:token-123'[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 316 |[39m       expect(result)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
   [90m 317 |[39m     })[33m;[39m
   [90m 318 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m316:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 314 |[39m
   [90m 315 |[39m       expect(mockRedis[33m.[39m[36mget[39m)[33m.[39mtoHaveBeenCalledWith([32m'blacklist:token-123'[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 316 |[39m       expect(result)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 317 |[39m     })[33m;[39m
   [90m 318 |[39m
   [90m 319 |[39m     it([32m'should return false when token is not blacklisted'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m319:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 317 |[39m     })[33m;[39m
   [90m 318 |[39m
  [31m[1m>[22m[39m[90m 319 |[39m     it([32m'should return false when token is not blacklisted'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 320 |[39m       mockRedis[33m.[39m[36mget[39m[33m.[39mmockResolvedValue([36mnull[39m)[33m;[39m
   [90m 321 |[39m
   [90m 322 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39misTokenBlacklisted([32m'token-123'[39m)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m324:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 322 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39misTokenBlacklisted([32m'token-123'[39m)[33m;[39m
   [90m 323 |[39m
  [31m[1m>[22m[39m[90m 324 |[39m       expect(result)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 325 |[39m     })[33m;[39m
   [90m 326 |[39m
   [90m 327 |[39m     it([32m'should handle Redis errors'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m327:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 325 |[39m     })[33m;[39m
   [90m 326 |[39m
  [31m[1m>[22m[39m[90m 327 |[39m     it([32m'should handle Redis errors'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 328 |[39m       [36mconst[39m error [33m=[39m [36mnew[39m [33mError[39m([32m'Redis check failed'[39m)[33m;[39m
   [90m 329 |[39m       mockRedis[33m.[39m[36mget[39m[33m.[39mmockRejectedValue(error)[33m;[39m
   [90m 330 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m333:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 331 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39misTokenBlacklisted([32m'token-123'[39m)[33m;[39m
   [90m 332 |[39m
  [31m[1m>[22m[39m[90m 333 |[39m       expect([33mLogger[39m[33m.[39mprototype[33m.[39merror)[33m.[39mtoHaveBeenCalledWith(
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 334 |[39m         [32m`Failed to check blacklist: ${error.message}`[39m
   [90m 335 |[39m       )[33m;[39m
   [90m 336 |[39m       expect(result)[33m.[39mtoBe([36mfalse[39m)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m336:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 334 |[39m         [32m`Failed to check blacklist: ${error.message}`[39m
   [90m 335 |[39m       )[33m;[39m
  [31m[1m>[22m[39m[90m 336 |[39m       expect(result)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 337 |[39m     })[33m;[39m
   [90m 338 |[39m
   [90m 339 |[39m     it([32m'should return false when Redis is unavailable'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m339:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 337 |[39m     })[33m;[39m
   [90m 338 |[39m
  [31m[1m>[22m[39m[90m 339 |[39m     it([32m'should return false when Redis is unavailable'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 340 |[39m       [36mif[39m (mockRedis[33m.[39m_handlers[[32m'error'[39m]) {
   [90m 341 |[39m         mockRedis[33m.[39m_handlers[[32m'error'[39m]([36mnew[39m [33mError[39m([32m'Connection refused'[39m))[33m;[39m
   [90m 342 |[39m       }[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m346:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 344 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39misTokenBlacklisted([32m'token-123'[39m)[33m;[39m
   [90m 345 |[39m
  [31m[1m>[22m[39m[90m 346 |[39m       expect([33mLogger[39m[33m.[39mprototype[33m.[39mwarn)[33m.[39mtoHaveBeenCalledWith(
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 347 |[39m         [32m'Redis unavailable, cannot check blacklist'[39m
   [90m 348 |[39m       )[33m;[39m
   [90m 349 |[39m       expect(result)[33m.[39mtoBe([36mfalse[39m)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m349:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 347 |[39m         [32m'Redis unavailable, cannot check blacklist'[39m
   [90m 348 |[39m       )[33m;[39m
  [31m[1m>[22m[39m[90m 349 |[39m       expect(result)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 350 |[39m     })[33m;[39m
   [90m 351 |[39m   })[33m;[39m
   [90m 352 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m353:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 351 |[39m   })[33m;[39m
   [90m 352 |[39m
  [31m[1m>[22m[39m[90m 353 |[39m   describe([32m'getRedisStatus'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 354 |[39m     it([32m'should return "connected" when Redis is available'[39m[33m,[39m () [33m=>[39m {
   [90m 355 |[39m       [36mconst[39m status [33m=[39m service[33m.[39mgetRedisStatus()[33m;[39m
   [90m 356 |[39m       expect(status)[33m.[39mtoBe([32m'connected'[39m)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m354:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 352 |[39m
   [90m 353 |[39m   describe([32m'getRedisStatus'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 354 |[39m     it([32m'should return "connected" when Redis is available'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 355 |[39m       [36mconst[39m status [33m=[39m service[33m.[39mgetRedisStatus()[33m;[39m
   [90m 356 |[39m       expect(status)[33m.[39mtoBe([32m'connected'[39m)[33m;[39m
   [90m 357 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m356:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 354 |[39m     it([32m'should return "connected" when Redis is available'[39m[33m,[39m () [33m=>[39m {
   [90m 355 |[39m       [36mconst[39m status [33m=[39m service[33m.[39mgetRedisStatus()[33m;[39m
  [31m[1m>[22m[39m[90m 356 |[39m       expect(status)[33m.[39mtoBe([32m'connected'[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 357 |[39m     })[33m;[39m
   [90m 358 |[39m
   [90m 359 |[39m     it([32m'should return "disconnected" when Redis is unavailable'[39m[33m,[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m359:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 357 |[39m     })[33m;[39m
   [90m 358 |[39m
  [31m[1m>[22m[39m[90m 359 |[39m     it([32m'should return "disconnected" when Redis is unavailable'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 360 |[39m       [36mif[39m (mockRedis[33m.[39m_handlers[[32m'error'[39m]) {
   [90m 361 |[39m         mockRedis[33m.[39m_handlers[[32m'error'[39m]([36mnew[39m [33mError[39m([32m'Connection refused'[39m))[33m;[39m
   [90m 362 |[39m       }[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m365:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 363 |[39m
   [90m 364 |[39m       [36mconst[39m status [33m=[39m service[33m.[39mgetRedisStatus()[33m;[39m
  [31m[1m>[22m[39m[90m 365 |[39m       expect(status)[33m.[39mtoBe([32m'disconnected'[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 366 |[39m     })[33m;[39m
   [90m 367 |[39m   })[33m;[39m
   [90m 368 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m369:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 367 |[39m   })[33m;[39m
   [90m 368 |[39m
  [31m[1m>[22m[39m[90m 369 |[39m   describe([32m'graceful degradation'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 370 |[39m     it([32m'should not throw errors when Redis operations fail'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m 371 |[39m       mockRedis[33m.[39msetex[33m.[39mmockRejectedValue([36mnew[39m [33mError[39m([32m'Redis down'[39m))[33m;[39m
   [90m 372 |[39m       mockRedis[33m.[39m[36mget[39m[33m.[39mmockRejectedValue([36mnew[39m [33mError[39m([32m'Redis down'[39m))[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m370:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 368 |[39m
   [90m 369 |[39m   describe([32m'graceful degradation'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 370 |[39m     it([32m'should not throw errors when Redis operations fail'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 371 |[39m       mockRedis[33m.[39msetex[33m.[39mmockRejectedValue([36mnew[39m [33mError[39m([32m'Redis down'[39m))[33m;[39m
   [90m 372 |[39m       mockRedis[33m.[39m[36mget[39m[33m.[39mmockRejectedValue([36mnew[39m [33mError[39m([32m'Redis down'[39m))[33m;[39m
   [90m 373 |[39m       mockRedis[33m.[39mdel[33m.[39mmockRejectedValue([36mnew[39m [33mError[39m([32m'Redis down'[39m))[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m377:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 375 |[39m       [36mconst[39m sessionData [33m=[39m createMockSessionData()[33m;[39m
   [90m 376 |[39m
  [31m[1m>[22m[39m[90m 377 |[39m       [36mawait[39m expect(service[33m.[39mcreateSession(sessionData))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 378 |[39m       [36mawait[39m expect(service[33m.[39mgetSession([32m'user-123'[39m))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
   [90m 379 |[39m       [36mawait[39m expect(service[33m.[39mdeleteSession([32m'user-123'[39m))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
   [90m 380 |[39m       [36mawait[39m expect(service[33m.[39mblacklistToken([32m'token-123'[39m[33m,[39m [35m900[39m))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m378:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 376 |[39m
   [90m 377 |[39m       [36mawait[39m expect(service[33m.[39mcreateSession(sessionData))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
  [31m[1m>[22m[39m[90m 378 |[39m       [36mawait[39m expect(service[33m.[39mgetSession([32m'user-123'[39m))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 379 |[39m       [36mawait[39m expect(service[33m.[39mdeleteSession([32m'user-123'[39m))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
   [90m 380 |[39m       [36mawait[39m expect(service[33m.[39mblacklistToken([32m'token-123'[39m[33m,[39m [35m900[39m))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
   [90m 381 |[39m       [36mawait[39m expect(service[33m.[39misTokenBlacklisted([32m'token-123'[39m))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m379:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 377 |[39m       [36mawait[39m expect(service[33m.[39mcreateSession(sessionData))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
   [90m 378 |[39m       [36mawait[39m expect(service[33m.[39mgetSession([32m'user-123'[39m))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
  [31m[1m>[22m[39m[90m 379 |[39m       [36mawait[39m expect(service[33m.[39mdeleteSession([32m'user-123'[39m))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 380 |[39m       [36mawait[39m expect(service[33m.[39mblacklistToken([32m'token-123'[39m[33m,[39m [35m900[39m))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
   [90m 381 |[39m       [36mawait[39m expect(service[33m.[39misTokenBlacklisted([32m'token-123'[39m))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
   [90m 382 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m380:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 378 |[39m       [36mawait[39m expect(service[33m.[39mgetSession([32m'user-123'[39m))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
   [90m 379 |[39m       [36mawait[39m expect(service[33m.[39mdeleteSession([32m'user-123'[39m))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
  [31m[1m>[22m[39m[90m 380 |[39m       [36mawait[39m expect(service[33m.[39mblacklistToken([32m'token-123'[39m[33m,[39m [35m900[39m))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 381 |[39m       [36mawait[39m expect(service[33m.[39misTokenBlacklisted([32m'token-123'[39m))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
   [90m 382 |[39m     })[33m;[39m
   [90m 383 |[39m   })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m381:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 379 |[39m       [36mawait[39m expect(service[33m.[39mdeleteSession([32m'user-123'[39m))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
   [90m 380 |[39m       [36mawait[39m expect(service[33m.[39mblacklistToken([32m'token-123'[39m[33m,[39m [35m900[39m))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
  [31m[1m>[22m[39m[90m 381 |[39m       [36mawait[39m expect(service[33m.[39misTokenBlacklisted([32m'token-123'[39m))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 382 |[39m     })[33m;[39m
   [90m 383 |[39m   })[33m;[39m
   [90m 384 |[39m })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m6:1[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 4 |[39m [36mimport[39m { [33mPrismaService[39m } [36mfrom[39m [32m'@orion/shared'[39m[33m;[39m
   [90m 5 |[39m
  [31m[1m>[22m[39m[90m 6 |[39m describe([32m'JwtStrategy'[39m[33m,[39m () [33m=>[39m {
   [90m   |[39m [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 7 |[39m   [36mlet[39m strategy[33m:[39m [33mJwtStrategy[39m[33m;[39m
   [90m 8 |[39m
   [90m 9 |[39m   [36mconst[39m mockPrismaService [33m=[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m11:19[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m  9 |[39m   [36mconst[39m mockPrismaService [33m=[39m {
   [90m 10 |[39m     user[33m:[39m {
  [31m[1m>[22m[39m[90m 11 |[39m       findUnique[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m                   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 12 |[39m     }[33m,[39m
   [90m 13 |[39m   }[33m;[39m
   [90m 14 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m15:3[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'beforeEach'.
  [0m [90m 13 |[39m   }[33m;[39m
   [90m 14 |[39m
  [31m[1m>[22m[39m[90m 15 |[39m   beforeEach([36masync[39m () [33m=>[39m {
   [90m    |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 16 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
   [90m 17 |[39m       providers[33m:[39m [
   [90m 18 |[39m         [33mJwtStrategy[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m27:5[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 25 |[39m
   [90m 26 |[39m     strategy [33m=[39m module[33m.[39m[36mget[39m[33m<[39m[33mJwtStrategy[39m[33m>[39m([33mJwtStrategy[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 27 |[39m     jest[33m.[39mclearAllMocks()[33m;[39m
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 28 |[39m   })[33m;[39m
   [90m 29 |[39m
   [90m 30 |[39m   afterEach(() [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m30:3[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'afterEach'.
  [0m [90m 28 |[39m   })[33m;[39m
   [90m 29 |[39m
  [31m[1m>[22m[39m[90m 30 |[39m   afterEach(() [33m=>[39m {
   [90m    |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 31 |[39m     jest[33m.[39mresetAllMocks()[33m;[39m
   [90m 32 |[39m   })[33m;[39m
   [90m 33 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m31:5[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 29 |[39m
   [90m 30 |[39m   afterEach(() [33m=>[39m {
  [31m[1m>[22m[39m[90m 31 |[39m     jest[33m.[39mresetAllMocks()[33m;[39m
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 32 |[39m   })[33m;[39m
   [90m 33 |[39m
   [90m 34 |[39m   describe([32m'validate'[39m[33m,[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m34:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 32 |[39m   })[33m;[39m
   [90m 33 |[39m
  [31m[1m>[22m[39m[90m 34 |[39m   describe([32m'validate'[39m[33m,[39m () [33m=>[39m {
   [90m    |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 35 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m 36 |[39m       expect(strategy)[33m.[39mtoBeDefined()[33m;[39m
   [90m 37 |[39m       expect(strategy[33m.[39mvalidate)[33m.[39mtoBeDefined()[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m35:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 33 |[39m
   [90m 34 |[39m   describe([32m'validate'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 35 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 36 |[39m       expect(strategy)[33m.[39mtoBeDefined()[33m;[39m
   [90m 37 |[39m       expect(strategy[33m.[39mvalidate)[33m.[39mtoBeDefined()[33m;[39m
   [90m 38 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m36:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 34 |[39m   describe([32m'validate'[39m[33m,[39m () [33m=>[39m {
   [90m 35 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 36 |[39m       expect(strategy)[33m.[39mtoBeDefined()[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 37 |[39m       expect(strategy[33m.[39mvalidate)[33m.[39mtoBeDefined()[33m;[39m
   [90m 38 |[39m     })[33m;[39m
   [90m 39 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m37:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 35 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m 36 |[39m       expect(strategy)[33m.[39mtoBeDefined()[33m;[39m
  [31m[1m>[22m[39m[90m 37 |[39m       expect(strategy[33m.[39mvalidate)[33m.[39mtoBeDefined()[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 38 |[39m     })[33m;[39m
   [90m 39 |[39m
   [90m 40 |[39m     it([32m'should validate and return user when payload is valid and user is active'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m40:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 38 |[39m     })[33m;[39m
   [90m 39 |[39m
  [31m[1m>[22m[39m[90m 40 |[39m     it([32m'should validate and return user when payload is valid and user is active'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 41 |[39m       [36mconst[39m payload[33m:[39m [33mJwtPayload[39m [33m=[39m {
   [90m 42 |[39m         sub[33m:[39m [32m'user-123'[39m[33m,[39m
   [90m 43 |[39m         email[33m:[39m [32m'test@example.com'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m57:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 55 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m strategy[33m.[39mvalidate(payload)[33m;[39m
   [90m 56 |[39m
  [31m[1m>[22m[39m[90m 57 |[39m       expect(mockPrismaService[33m.[39muser[33m.[39mfindUnique)[33m.[39mtoHaveBeenCalledWith({
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 58 |[39m         where[33m:[39m { id[33m:[39m payload[33m.[39msub }[33m,[39m
   [90m 59 |[39m         select[33m:[39m {
   [90m 60 |[39m           id[33m:[39m [36mtrue[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m66:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 64 |[39m         }[33m,[39m
   [90m 65 |[39m       })[33m;[39m
  [31m[1m>[22m[39m[90m 66 |[39m       expect(result)[33m.[39mtoEqual(mockUser)[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 67 |[39m     })[33m;[39m
   [90m 68 |[39m
   [90m 69 |[39m     it([32m'should throw UnauthorizedException when user does not exist'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m69:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 67 |[39m     })[33m;[39m
   [90m 68 |[39m
  [31m[1m>[22m[39m[90m 69 |[39m     it([32m'should throw UnauthorizedException when user does not exist'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 70 |[39m       [36mconst[39m payload[33m:[39m [33mJwtPayload[39m [33m=[39m {
   [90m 71 |[39m         sub[33m:[39m [32m'non-existent-user'[39m[33m,[39m
   [90m 72 |[39m         email[33m:[39m [32m'nonexistent@example.com'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m77:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 75 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockResolvedValue([36mnull[39m)[33m;[39m
   [90m 76 |[39m
  [31m[1m>[22m[39m[90m 77 |[39m       [36mawait[39m expect(strategy[33m.[39mvalidate(payload))[33m.[39mrejects[33m.[39mtoThrow([33mUnauthorizedException[39m)[33m;[39m
   [90m    |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 78 |[39m       [36mawait[39m expect(strategy[33m.[39mvalidate(payload))[33m.[39mrejects[33m.[39mtoThrow(
   [90m 79 |[39m         [32m'User not found or inactive'[39m
   [90m 80 |[39m       )[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m78:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 76 |[39m
   [90m 77 |[39m       [36mawait[39m expect(strategy[33m.[39mvalidate(payload))[33m.[39mrejects[33m.[39mtoThrow([33mUnauthorizedException[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 78 |[39m       [36mawait[39m expect(strategy[33m.[39mvalidate(payload))[33m.[39mrejects[33m.[39mtoThrow(
   [90m    |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 79 |[39m         [32m'User not found or inactive'[39m
   [90m 80 |[39m       )[33m;[39m
   [90m 81 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m83:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 81 |[39m     })[33m;[39m
   [90m 82 |[39m
  [31m[1m>[22m[39m[90m 83 |[39m     it([32m'should throw UnauthorizedException when user is inactive'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 84 |[39m       [36mconst[39m payload[33m:[39m [33mJwtPayload[39m [33m=[39m {
   [90m 85 |[39m         sub[33m:[39m [32m'user-123'[39m[33m,[39m
   [90m 86 |[39m         email[33m:[39m [32m'inactive@example.com'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m98:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m  96 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockResolvedValue(mockInactiveUser)[33m;[39m
   [90m  97 |[39m
  [31m[1m>[22m[39m[90m  98 |[39m       [36mawait[39m expect(strategy[33m.[39mvalidate(payload))[33m.[39mrejects[33m.[39mtoThrow([33mUnauthorizedException[39m)[33m;[39m
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m  99 |[39m       [36mawait[39m expect(strategy[33m.[39mvalidate(payload))[33m.[39mrejects[33m.[39mtoThrow(
   [90m 100 |[39m         [32m'User not found or inactive'[39m
   [90m 101 |[39m       )[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m99:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m  97 |[39m
   [90m  98 |[39m       [36mawait[39m expect(strategy[33m.[39mvalidate(payload))[33m.[39mrejects[33m.[39mtoThrow([33mUnauthorizedException[39m)[33m;[39m
  [31m[1m>[22m[39m[90m  99 |[39m       [36mawait[39m expect(strategy[33m.[39mvalidate(payload))[33m.[39mrejects[33m.[39mtoThrow(
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 100 |[39m         [32m'User not found or inactive'[39m
   [90m 101 |[39m       )[33m;[39m
   [90m 102 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m104:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 102 |[39m     })[33m;[39m
   [90m 103 |[39m
  [31m[1m>[22m[39m[90m 104 |[39m     it([32m'should handle user with missing optional fields'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 105 |[39m       [36mconst[39m payload[33m:[39m [33mJwtPayload[39m [33m=[39m {
   [90m 106 |[39m         sub[33m:[39m [32m'user-123'[39m[33m,[39m
   [90m 107 |[39m         email[33m:[39m [32m'test@example.com'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m121:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 119 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m strategy[33m.[39mvalidate(payload)[33m;[39m
   [90m 120 |[39m
  [31m[1m>[22m[39m[90m 121 |[39m       expect(result)[33m.[39mtoEqual(mockUser)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 122 |[39m     })[33m;[39m
   [90m 123 |[39m
   [90m 124 |[39m     it([32m'should validate multiple users sequentially'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m124:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 122 |[39m     })[33m;[39m
   [90m 123 |[39m
  [31m[1m>[22m[39m[90m 124 |[39m     it([32m'should validate multiple users sequentially'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 125 |[39m       [36mconst[39m users [33m=[39m [
   [90m 126 |[39m         {
   [90m 127 |[39m           payload[33m:[39m { sub[33m:[39m [32m'user-1'[39m[33m,[39m email[33m:[39m [32m'user1@example.com'[39m }[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m143:9[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 141 |[39m         mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockResolvedValue(user)[33m;[39m
   [90m 142 |[39m         [36mconst[39m result [33m=[39m [36mawait[39m strategy[33m.[39mvalidate(payload)[33m;[39m
  [31m[1m>[22m[39m[90m 143 |[39m         expect(result)[33m.[39mtoEqual(user)[33m;[39m
   [90m     |[39m         [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 144 |[39m       }
   [90m 145 |[39m
   [90m 146 |[39m       expect(mockPrismaService[33m.[39muser[33m.[39mfindUnique)[33m.[39mtoHaveBeenCalledTimes([35m3[39m)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m146:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 144 |[39m       }
   [90m 145 |[39m
  [31m[1m>[22m[39m[90m 146 |[39m       expect(mockPrismaService[33m.[39muser[33m.[39mfindUnique)[33m.[39mtoHaveBeenCalledTimes([35m3[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 147 |[39m     })[33m;[39m
   [90m 148 |[39m
   [90m 149 |[39m     it([32m'should handle database errors gracefully'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m149:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 147 |[39m     })[33m;[39m
   [90m 148 |[39m
  [31m[1m>[22m[39m[90m 149 |[39m     it([32m'should handle database errors gracefully'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 150 |[39m       [36mconst[39m payload[33m:[39m [33mJwtPayload[39m [33m=[39m {
   [90m 151 |[39m         sub[33m:[39m [32m'user-123'[39m[33m,[39m
   [90m 152 |[39m         email[33m:[39m [32m'test@example.com'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m158:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 156 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockRejectedValue(dbError)[33m;[39m
   [90m 157 |[39m
  [31m[1m>[22m[39m[90m 158 |[39m       [36mawait[39m expect(strategy[33m.[39mvalidate(payload))[33m.[39mrejects[33m.[39mtoThrow([32m'Database connection failed'[39m)[33m;[39m
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 159 |[39m     })[33m;[39m
   [90m 160 |[39m
   [90m 161 |[39m     it([32m'should only select specified fields from database'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m161:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 159 |[39m     })[33m;[39m
   [90m 160 |[39m
  [31m[1m>[22m[39m[90m 161 |[39m     it([32m'should only select specified fields from database'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 162 |[39m       [36mconst[39m payload[33m:[39m [33mJwtPayload[39m [33m=[39m {
   [90m 163 |[39m         sub[33m:[39m [32m'user-123'[39m[33m,[39m
   [90m 164 |[39m         email[33m:[39m [32m'test@example.com'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m178:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 176 |[39m       [36mawait[39m strategy[33m.[39mvalidate(payload)[33m;[39m
   [90m 177 |[39m
  [31m[1m>[22m[39m[90m 178 |[39m       expect(mockPrismaService[33m.[39muser[33m.[39mfindUnique)[33m.[39mtoHaveBeenCalledWith({
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 179 |[39m         where[33m:[39m { id[33m:[39m payload[33m.[39msub }[33m,[39m
   [90m 180 |[39m         select[33m:[39m {
   [90m 181 |[39m           id[33m:[39m [36mtrue[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m189:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 187 |[39m     })[33m;[39m
   [90m 188 |[39m
  [31m[1m>[22m[39m[90m 189 |[39m     it([32m'should handle special characters in email'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 190 |[39m       [36mconst[39m payload[33m:[39m [33mJwtPayload[39m [33m=[39m {
   [90m 191 |[39m         sub[33m:[39m [32m'user-123'[39m[33m,[39m
   [90m 192 |[39m         email[33m:[39m [32m'test+tag@example.com'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m206:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 204 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m strategy[33m.[39mvalidate(payload)[33m;[39m
   [90m 205 |[39m
  [31m[1m>[22m[39m[90m 206 |[39m       expect(result)[33m.[39mtoEqual(mockUser)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 207 |[39m     })[33m;[39m
   [90m 208 |[39m
   [90m 209 |[39m     it([32m'should validate user with UUID format user ID'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m209:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 207 |[39m     })[33m;[39m
   [90m 208 |[39m
  [31m[1m>[22m[39m[90m 209 |[39m     it([32m'should validate user with UUID format user ID'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 210 |[39m       [36mconst[39m payload[33m:[39m [33mJwtPayload[39m [33m=[39m {
   [90m 211 |[39m         sub[33m:[39m [32m'550e8400-e29b-41d4-a716-446655440000'[39m[33m,[39m
   [90m 212 |[39m         email[33m:[39m [32m'test@example.com'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m226:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 224 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m strategy[33m.[39mvalidate(payload)[33m;[39m
   [90m 225 |[39m
  [31m[1m>[22m[39m[90m 226 |[39m       expect(result[33m.[39mid)[33m.[39mtoBe(payload[33m.[39msub)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 227 |[39m     })[33m;[39m
   [90m 228 |[39m   })[33m;[39m
   [90m 229 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m230:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 228 |[39m   })[33m;[39m
   [90m 229 |[39m
  [31m[1m>[22m[39m[90m 230 |[39m   describe([32m'edge cases'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 231 |[39m     it([32m'should handle rapid successive validations'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m 232 |[39m       [36mconst[39m payload[33m:[39m [33mJwtPayload[39m [33m=[39m {
   [90m 233 |[39m         sub[33m:[39m [32m'user-123'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m231:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 229 |[39m
   [90m 230 |[39m   describe([32m'edge cases'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 231 |[39m     it([32m'should handle rapid successive validations'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 232 |[39m       [36mconst[39m payload[33m:[39m [33mJwtPayload[39m [33m=[39m {
   [90m 233 |[39m         sub[33m:[39m [32m'user-123'[39m[33m,[39m
   [90m 234 |[39m         email[33m:[39m [32m'test@example.com'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m250:9[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 248 |[39m
   [90m 249 |[39m       results[33m.[39mforEach((result[33m:[39m unknown) [33m=>[39m {
  [31m[1m>[22m[39m[90m 250 |[39m         expect(result)[33m.[39mtoEqual(mockUser)[33m;[39m
   [90m     |[39m         [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 251 |[39m       })[33m;[39m
   [90m 252 |[39m
   [90m 253 |[39m       expect(mockPrismaService[33m.[39muser[33m.[39mfindUnique)[33m.[39mtoHaveBeenCalledTimes([35m100[39m)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m253:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 251 |[39m       })[33m;[39m
   [90m 252 |[39m
  [31m[1m>[22m[39m[90m 253 |[39m       expect(mockPrismaService[33m.[39muser[33m.[39mfindUnique)[33m.[39mtoHaveBeenCalledTimes([35m100[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 254 |[39m     })[33m;[39m
   [90m 255 |[39m
   [90m 256 |[39m     it([32m'should handle user status changing between validations'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m256:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 254 |[39m     })[33m;[39m
   [90m 255 |[39m
  [31m[1m>[22m[39m[90m 256 |[39m     it([32m'should handle user status changing between validations'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 257 |[39m       [36mconst[39m payload[33m:[39m [33mJwtPayload[39m [33m=[39m {
   [90m 258 |[39m         sub[33m:[39m [32m'user-123'[39m[33m,[39m
   [90m 259 |[39m         email[33m:[39m [32m'test@example.com'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m271:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 269 |[39m
   [90m 270 |[39m       [36mconst[39m result1 [33m=[39m [36mawait[39m strategy[33m.[39mvalidate(payload)[33m;[39m
  [31m[1m>[22m[39m[90m 271 |[39m       expect(result1[33m.[39misActive)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 272 |[39m
   [90m 273 |[39m       [90m// Second validation - user is now inactive[39m
   [90m 274 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockResolvedValueOnce({[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m281:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 279 |[39m       })[33m;[39m
   [90m 280 |[39m
  [31m[1m>[22m[39m[90m 281 |[39m       [36mawait[39m expect(strategy[33m.[39mvalidate(payload))[33m.[39mrejects[33m.[39mtoThrow([33mUnauthorizedException[39m)[33m;[39m
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 282 |[39m     })[33m;[39m
   [90m 283 |[39m   })[33m;[39m
   [90m 284 |[39m })[33m;[39m[0m

webpack compiled with [1m[31m386 errors[39m[22m (1061e094d85ab276)
> webpack-cli build --node-env=production

chunk (runtime: main) [1m[32mmain.js[39m[22m (main) 26.1 KiB [1m[33m[entry][39m[22m [1m[32m[rendered][39m[22m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m7:1[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m  5 |[39m [36mimport[39m { [33mLoginDto[39m[33m,[39m [33mRefreshTokenDto[39m[33m,[39m [33mLoginResponseDto[39m[33m,[39m [33mUserResponseDto[39m } [36mfrom[39m [32m'./dto'[39m[33m;[39m
   [90m  6 |[39m
  [31m[1m>[22m[39m[90m  7 |[39m describe([32m'AuthController'[39m[33m,[39m () [33m=>[39m {
   [90m    |[39m [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m  8 |[39m   [36mlet[39m controller[33m:[39m [33mAuthController[39m[33m;[39m
   [90m  9 |[39m   [36mlet[39m authService[33m:[39m jest[33m.[39m[33mMocked[39m[33m<[39m[33mAuthService[39m[33m>[39m[33m;[39m
   [90m 10 |[39m   [36mlet[39m sessionService[33m:[39m jest[33m.[39m[33mMocked[39m[33m<[39m[33mSessionService[39m[33m>[39m[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m9:20[22m[39m[1m[39m[22m
[90mTS2503: [39mCannot find namespace 'jest'.
  [0m [90m  7 |[39m describe([32m'AuthController'[39m[33m,[39m () [33m=>[39m {
   [90m  8 |[39m   [36mlet[39m controller[33m:[39m [33mAuthController[39m[33m;[39m
  [31m[1m>[22m[39m[90m  9 |[39m   [36mlet[39m authService[33m:[39m jest[33m.[39m[33mMocked[39m[33m<[39m[33mAuthService[39m[33m>[39m[33m;[39m
   [90m    |[39m                    [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 10 |[39m   [36mlet[39m sessionService[33m:[39m jest[33m.[39m[33mMocked[39m[33m<[39m[33mSessionService[39m[33m>[39m[33m;[39m
   [90m 11 |[39m
   [90m 12 |[39m   [36mconst[39m mockAuthService [33m=[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m10:23[22m[39m[1m[39m[22m
[90mTS2503: [39mCannot find namespace 'jest'.
  [0m [90m  8 |[39m   [36mlet[39m controller[33m:[39m [33mAuthController[39m[33m;[39m
   [90m  9 |[39m   [36mlet[39m authService[33m:[39m jest[33m.[39m[33mMocked[39m[33m<[39m[33mAuthService[39m[33m>[39m[33m;[39m
  [31m[1m>[22m[39m[90m 10 |[39m   [36mlet[39m sessionService[33m:[39m jest[33m.[39m[33mMocked[39m[33m<[39m[33mSessionService[39m[33m>[39m[33m;[39m
   [90m    |[39m                       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 11 |[39m
   [90m 12 |[39m   [36mconst[39m mockAuthService [33m=[39m {
   [90m 13 |[39m     login[33m:[39m jest[33m.[39mfn()[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m13:12[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 11 |[39m
   [90m 12 |[39m   [36mconst[39m mockAuthService [33m=[39m {
  [31m[1m>[22m[39m[90m 13 |[39m     login[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m            [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 14 |[39m     logout[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 15 |[39m     refreshTokens[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 16 |[39m     validateUser[33m:[39m jest[33m.[39mfn()[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m14:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 12 |[39m   [36mconst[39m mockAuthService [33m=[39m {
   [90m 13 |[39m     login[33m:[39m jest[33m.[39mfn()[33m,[39m
  [31m[1m>[22m[39m[90m 14 |[39m     logout[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 15 |[39m     refreshTokens[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 16 |[39m     validateUser[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 17 |[39m   }[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m15:20[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 13 |[39m     login[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 14 |[39m     logout[33m:[39m jest[33m.[39mfn()[33m,[39m
  [31m[1m>[22m[39m[90m 15 |[39m     refreshTokens[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m                    [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 16 |[39m     validateUser[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 17 |[39m   }[33m;[39m
   [90m 18 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m16:19[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 14 |[39m     logout[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 15 |[39m     refreshTokens[33m:[39m jest[33m.[39mfn()[33m,[39m
  [31m[1m>[22m[39m[90m 16 |[39m     validateUser[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m                   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 17 |[39m   }[33m;[39m
   [90m 18 |[39m
   [90m 19 |[39m   [36mconst[39m mockSessionService [33m=[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m20:21[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 18 |[39m
   [90m 19 |[39m   [36mconst[39m mockSessionService [33m=[39m {
  [31m[1m>[22m[39m[90m 20 |[39m     getRedisStatus[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m                     [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 21 |[39m   }[33m;[39m
   [90m 22 |[39m
   [90m 23 |[39m   [36mconst[39m mockLoginResponse[33m:[39m [33mLoginResponseDto[39m [33m=[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m42:3[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'beforeEach'.
  [0m [90m 40 |[39m   }[33m;[39m
   [90m 41 |[39m
  [31m[1m>[22m[39m[90m 42 |[39m   beforeEach([36masync[39m () [33m=>[39m {
   [90m    |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 43 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
   [90m 44 |[39m       controllers[33m:[39m [[33mAuthController[39m][33m,[39m
   [90m 45 |[39m       providers[33m:[39m [[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m55:5[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 53 |[39m     sessionService [33m=[39m module[33m.[39m[36mget[39m([33mSessionService[39m)[33m;[39m
   [90m 54 |[39m
  [31m[1m>[22m[39m[90m 55 |[39m     jest[33m.[39mclearAllMocks()[33m;[39m
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 56 |[39m   })[33m;[39m
   [90m 57 |[39m
   [90m 58 |[39m   afterEach(() [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m58:3[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'afterEach'.
  [0m [90m 56 |[39m   })[33m;[39m
   [90m 57 |[39m
  [31m[1m>[22m[39m[90m 58 |[39m   afterEach(() [33m=>[39m {
   [90m    |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 59 |[39m     jest[33m.[39mresetAllMocks()[33m;[39m
   [90m 60 |[39m   })[33m;[39m
   [90m 61 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m59:5[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 57 |[39m
   [90m 58 |[39m   afterEach(() [33m=>[39m {
  [31m[1m>[22m[39m[90m 59 |[39m     jest[33m.[39mresetAllMocks()[33m;[39m
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 60 |[39m   })[33m;[39m
   [90m 61 |[39m
   [90m 62 |[39m   describe([32m'login'[39m[33m,[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m62:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 60 |[39m   })[33m;[39m
   [90m 61 |[39m
  [31m[1m>[22m[39m[90m 62 |[39m   describe([32m'login'[39m[33m,[39m () [33m=>[39m {
   [90m    |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 63 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m 64 |[39m       expect(controller)[33m.[39mtoBeDefined()[33m;[39m
   [90m 65 |[39m       expect(controller[33m.[39mlogin)[33m.[39mtoBeDefined()[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m63:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 61 |[39m
   [90m 62 |[39m   describe([32m'login'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 63 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 64 |[39m       expect(controller)[33m.[39mtoBeDefined()[33m;[39m
   [90m 65 |[39m       expect(controller[33m.[39mlogin)[33m.[39mtoBeDefined()[33m;[39m
   [90m 66 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m64:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 62 |[39m   describe([32m'login'[39m[33m,[39m () [33m=>[39m {
   [90m 63 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 64 |[39m       expect(controller)[33m.[39mtoBeDefined()[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 65 |[39m       expect(controller[33m.[39mlogin)[33m.[39mtoBeDefined()[33m;[39m
   [90m 66 |[39m     })[33m;[39m
   [90m 67 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m65:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 63 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m 64 |[39m       expect(controller)[33m.[39mtoBeDefined()[33m;[39m
  [31m[1m>[22m[39m[90m 65 |[39m       expect(controller[33m.[39mlogin)[33m.[39mtoBeDefined()[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 66 |[39m     })[33m;[39m
   [90m 67 |[39m
   [90m 68 |[39m     it([32m'should successfully login a user'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m68:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 66 |[39m     })[33m;[39m
   [90m 67 |[39m
  [31m[1m>[22m[39m[90m 68 |[39m     it([32m'should successfully login a user'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 69 |[39m       [36mconst[39m loginDto[33m:[39m [33mLoginDto[39m [33m=[39m {
   [90m 70 |[39m         email[33m:[39m [32m'test@example.com'[39m[33m,[39m
   [90m 71 |[39m         password[33m:[39m [32m'password123'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m78:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 76 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m controller[33m.[39mlogin(loginDto)[33m;[39m
   [90m 77 |[39m
  [31m[1m>[22m[39m[90m 78 |[39m       expect(authService[33m.[39mlogin)[33m.[39mtoHaveBeenCalledWith(loginDto)[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 79 |[39m       expect(authService[33m.[39mlogin)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
   [90m 80 |[39m       expect(result)[33m.[39mtoEqual(mockLoginResponse)[33m;[39m
   [90m 81 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m79:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 77 |[39m
   [90m 78 |[39m       expect(authService[33m.[39mlogin)[33m.[39mtoHaveBeenCalledWith(loginDto)[33m;[39m
  [31m[1m>[22m[39m[90m 79 |[39m       expect(authService[33m.[39mlogin)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 80 |[39m       expect(result)[33m.[39mtoEqual(mockLoginResponse)[33m;[39m
   [90m 81 |[39m     })[33m;[39m
   [90m 82 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m80:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 78 |[39m       expect(authService[33m.[39mlogin)[33m.[39mtoHaveBeenCalledWith(loginDto)[33m;[39m
   [90m 79 |[39m       expect(authService[33m.[39mlogin)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 80 |[39m       expect(result)[33m.[39mtoEqual(mockLoginResponse)[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 81 |[39m     })[33m;[39m
   [90m 82 |[39m
   [90m 83 |[39m     it([32m'should handle different email formats'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m83:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 81 |[39m     })[33m;[39m
   [90m 82 |[39m
  [31m[1m>[22m[39m[90m 83 |[39m     it([32m'should handle different email formats'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 84 |[39m       [36mconst[39m emails [33m=[39m [
   [90m 85 |[39m         [32m'user@example.com'[39m[33m,[39m
   [90m 86 |[39m         [32m'user+tag@example.com'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m97:9[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m  95 |[39m         [36mawait[39m controller[33m.[39mlogin(loginDto)[33m;[39m
   [90m  96 |[39m
  [31m[1m>[22m[39m[90m  97 |[39m         expect(authService[33m.[39mlogin)[33m.[39mtoHaveBeenCalledWith(loginDto)[33m;[39m
   [90m     |[39m         [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m  98 |[39m       }
   [90m  99 |[39m     })[33m;[39m
   [90m 100 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m101:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m  99 |[39m     })[33m;[39m
   [90m 100 |[39m
  [31m[1m>[22m[39m[90m 101 |[39m     it([32m'should propagate errors from auth service'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 102 |[39m       [36mconst[39m loginDto[33m:[39m [33mLoginDto[39m [33m=[39m {
   [90m 103 |[39m         email[33m:[39m [32m'test@example.com'[39m[33m,[39m
   [90m 104 |[39m         password[33m:[39m [32m'wrongpassword'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m110:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 108 |[39m       mockAuthService[33m.[39mlogin[33m.[39mmockRejectedValue(error)[33m;[39m
   [90m 109 |[39m
  [31m[1m>[22m[39m[90m 110 |[39m       [36mawait[39m expect(controller[33m.[39mlogin(loginDto))[33m.[39mrejects[33m.[39mtoThrow([32m'Invalid credentials'[39m)[33m;[39m
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 111 |[39m     })[33m;[39m
   [90m 112 |[39m
   [90m 113 |[39m     it([32m'should handle empty password'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m113:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 111 |[39m     })[33m;[39m
   [90m 112 |[39m
  [31m[1m>[22m[39m[90m 113 |[39m     it([32m'should handle empty password'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 114 |[39m       [36mconst[39m loginDto[33m:[39m [33mLoginDto[39m [33m=[39m {
   [90m 115 |[39m         email[33m:[39m [32m'test@example.com'[39m[33m,[39m
   [90m 116 |[39m         password[33m:[39m [32m''[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m123:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 121 |[39m       [36mawait[39m controller[33m.[39mlogin(loginDto)[33m;[39m
   [90m 122 |[39m
  [31m[1m>[22m[39m[90m 123 |[39m       expect(authService[33m.[39mlogin)[33m.[39mtoHaveBeenCalledWith(loginDto)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 124 |[39m     })[33m;[39m
   [90m 125 |[39m   })[33m;[39m
   [90m 126 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m127:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 125 |[39m   })[33m;[39m
   [90m 126 |[39m
  [31m[1m>[22m[39m[90m 127 |[39m   describe([32m'logout'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 128 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m 129 |[39m       expect(controller[33m.[39mlogout)[33m.[39mtoBeDefined()[33m;[39m
   [90m 130 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m128:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 126 |[39m
   [90m 127 |[39m   describe([32m'logout'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 128 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 129 |[39m       expect(controller[33m.[39mlogout)[33m.[39mtoBeDefined()[33m;[39m
   [90m 130 |[39m     })[33m;[39m
   [90m 131 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m129:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 127 |[39m   describe([32m'logout'[39m[33m,[39m () [33m=>[39m {
   [90m 128 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 129 |[39m       expect(controller[33m.[39mlogout)[33m.[39mtoBeDefined()[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 130 |[39m     })[33m;[39m
   [90m 131 |[39m
   [90m 132 |[39m     it([32m'should successfully logout a user'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m132:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 130 |[39m     })[33m;[39m
   [90m 131 |[39m
  [31m[1m>[22m[39m[90m 132 |[39m     it([32m'should successfully logout a user'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 133 |[39m       [36mconst[39m req [33m=[39m { user[33m:[39m { id[33m:[39m [32m'user-123'[39m } }[33m;[39m
   [90m 134 |[39m       [36mconst[39m authHeader [33m=[39m [32m'Bearer access-token-xyz'[39m[33m;[39m
   [90m 135 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m140:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 138 |[39m       [36mawait[39m controller[33m.[39mlogout(req [36mas[39m any[33m,[39m authHeader)[33m;[39m
   [90m 139 |[39m
  [31m[1m>[22m[39m[90m 140 |[39m       expect(authService[33m.[39mlogout)[33m.[39mtoHaveBeenCalledWith([32m'user-123'[39m[33m,[39m [32m'access-token-xyz'[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 141 |[39m       expect(authService[33m.[39mlogout)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
   [90m 142 |[39m     })[33m;[39m
   [90m 143 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m141:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 139 |[39m
   [90m 140 |[39m       expect(authService[33m.[39mlogout)[33m.[39mtoHaveBeenCalledWith([32m'user-123'[39m[33m,[39m [32m'access-token-xyz'[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 141 |[39m       expect(authService[33m.[39mlogout)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 142 |[39m     })[33m;[39m
   [90m 143 |[39m
   [90m 144 |[39m     it([32m'should extract token from authorization header'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m144:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 142 |[39m     })[33m;[39m
   [90m 143 |[39m
  [31m[1m>[22m[39m[90m 144 |[39m     it([32m'should extract token from authorization header'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 145 |[39m       [36mconst[39m req [33m=[39m { user[33m:[39m { id[33m:[39m [32m'user-123'[39m } }[33m;[39m
   [90m 146 |[39m       [36mconst[39m authHeader [33m=[39m [32m'Bearer my-access-token'[39m[33m;[39m
   [90m 147 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m152:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 150 |[39m       [36mawait[39m controller[33m.[39mlogout(req [36mas[39m any[33m,[39m authHeader)[33m;[39m
   [90m 151 |[39m
  [31m[1m>[22m[39m[90m 152 |[39m       expect(authService[33m.[39mlogout)[33m.[39mtoHaveBeenCalledWith([32m'user-123'[39m[33m,[39m [32m'my-access-token'[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 153 |[39m     })[33m;[39m
   [90m 154 |[39m
   [90m 155 |[39m     it([32m'should handle authorization header without Bearer prefix'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m155:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 153 |[39m     })[33m;[39m
   [90m 154 |[39m
  [31m[1m>[22m[39m[90m 155 |[39m     it([32m'should handle authorization header without Bearer prefix'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 156 |[39m       [36mconst[39m req [33m=[39m { user[33m:[39m { id[33m:[39m [32m'user-123'[39m } }[33m;[39m
   [90m 157 |[39m       [36mconst[39m authHeader [33m=[39m [32m'access-token-xyz'[39m[33m;[39m
   [90m 158 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m163:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 161 |[39m       [36mawait[39m controller[33m.[39mlogout(req [36mas[39m any[33m,[39m authHeader)[33m;[39m
   [90m 162 |[39m
  [31m[1m>[22m[39m[90m 163 |[39m       expect(authService[33m.[39mlogout)[33m.[39mtoHaveBeenCalledWith([32m'user-123'[39m[33m,[39m [32m'access-token-xyz'[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 164 |[39m     })[33m;[39m
   [90m 165 |[39m
   [90m 166 |[39m     it([32m'should handle missing authorization header'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m166:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 164 |[39m     })[33m;[39m
   [90m 165 |[39m
  [31m[1m>[22m[39m[90m 166 |[39m     it([32m'should handle missing authorization header'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 167 |[39m       [36mconst[39m req [33m=[39m { user[33m:[39m { id[33m:[39m [32m'user-123'[39m } }[33m;[39m
   [90m 168 |[39m       [36mconst[39m authHeader [33m=[39m undefined[33m;[39m
   [90m 169 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m174:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 172 |[39m       [36mawait[39m controller[33m.[39mlogout(req [36mas[39m any[33m,[39m authHeader [36mas[39m any)[33m;[39m
   [90m 173 |[39m
  [31m[1m>[22m[39m[90m 174 |[39m       expect(authService[33m.[39mlogout)[33m.[39mtoHaveBeenCalledWith([32m'user-123'[39m[33m,[39m undefined)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 175 |[39m     })[33m;[39m
   [90m 176 |[39m
   [90m 177 |[39m     it([32m'should propagate errors from auth service'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m177:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 175 |[39m     })[33m;[39m
   [90m 176 |[39m
  [31m[1m>[22m[39m[90m 177 |[39m     it([32m'should propagate errors from auth service'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 178 |[39m       [36mconst[39m req [33m=[39m { user[33m:[39m { id[33m:[39m [32m'user-123'[39m } }[33m;[39m
   [90m 179 |[39m       [36mconst[39m authHeader [33m=[39m [32m'Bearer access-token'[39m[33m;[39m
   [90m 180 |[39m       [36mconst[39m error [33m=[39m [36mnew[39m [33mError[39m([32m'Logout failed'[39m)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m184:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 182 |[39m       mockAuthService[33m.[39mlogout[33m.[39mmockRejectedValue(error)[33m;[39m
   [90m 183 |[39m
  [31m[1m>[22m[39m[90m 184 |[39m       [36mawait[39m expect(controller[33m.[39mlogout(req [36mas[39m any[33m,[39m authHeader))[33m.[39mrejects[33m.[39mtoThrow([32m'Logout failed'[39m)[33m;[39m
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 185 |[39m     })[33m;[39m
   [90m 186 |[39m   })[33m;[39m
   [90m 187 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m188:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 186 |[39m   })[33m;[39m
   [90m 187 |[39m
  [31m[1m>[22m[39m[90m 188 |[39m   describe([32m'refresh'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 189 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m 190 |[39m       expect(controller[33m.[39mrefresh)[33m.[39mtoBeDefined()[33m;[39m
   [90m 191 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m189:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 187 |[39m
   [90m 188 |[39m   describe([32m'refresh'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 189 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 190 |[39m       expect(controller[33m.[39mrefresh)[33m.[39mtoBeDefined()[33m;[39m
   [90m 191 |[39m     })[33m;[39m
   [90m 192 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m190:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 188 |[39m   describe([32m'refresh'[39m[33m,[39m () [33m=>[39m {
   [90m 189 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 190 |[39m       expect(controller[33m.[39mrefresh)[33m.[39mtoBeDefined()[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 191 |[39m     })[33m;[39m
   [90m 192 |[39m
   [90m 193 |[39m     it([32m'should successfully refresh tokens'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m193:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 191 |[39m     })[33m;[39m
   [90m 192 |[39m
  [31m[1m>[22m[39m[90m 193 |[39m     it([32m'should successfully refresh tokens'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 194 |[39m       [36mconst[39m refreshTokenDto[33m:[39m [33mRefreshTokenDto[39m [33m=[39m {
   [90m 195 |[39m         refreshToken[33m:[39m [32m'valid-refresh-token'[39m[33m,[39m
   [90m 196 |[39m       }[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m202:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 200 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m controller[33m.[39mrefresh(refreshTokenDto)[33m;[39m
   [90m 201 |[39m
  [31m[1m>[22m[39m[90m 202 |[39m       expect(authService[33m.[39mrefreshTokens)[33m.[39mtoHaveBeenCalledWith(refreshTokenDto)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 203 |[39m       expect(authService[33m.[39mrefreshTokens)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
   [90m 204 |[39m       expect(result)[33m.[39mtoEqual(mockLoginResponse)[33m;[39m
   [90m 205 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m203:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 201 |[39m
   [90m 202 |[39m       expect(authService[33m.[39mrefreshTokens)[33m.[39mtoHaveBeenCalledWith(refreshTokenDto)[33m;[39m
  [31m[1m>[22m[39m[90m 203 |[39m       expect(authService[33m.[39mrefreshTokens)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 204 |[39m       expect(result)[33m.[39mtoEqual(mockLoginResponse)[33m;[39m
   [90m 205 |[39m     })[33m;[39m
   [90m 206 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m204:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 202 |[39m       expect(authService[33m.[39mrefreshTokens)[33m.[39mtoHaveBeenCalledWith(refreshTokenDto)[33m;[39m
   [90m 203 |[39m       expect(authService[33m.[39mrefreshTokens)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 204 |[39m       expect(result)[33m.[39mtoEqual(mockLoginResponse)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 205 |[39m     })[33m;[39m
   [90m 206 |[39m
   [90m 207 |[39m     it([32m'should handle different refresh token formats'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m207:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 205 |[39m     })[33m;[39m
   [90m 206 |[39m
  [31m[1m>[22m[39m[90m 207 |[39m     it([32m'should handle different refresh token formats'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 208 |[39m       [36mconst[39m tokens [33m=[39m [
   [90m 209 |[39m         [32m'short-token'[39m[33m,[39m
   [90m 210 |[39m         [32m'very-long-token-with-many-characters'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m221:9[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 219 |[39m         [36mawait[39m controller[33m.[39mrefresh(refreshTokenDto)[33m;[39m
   [90m 220 |[39m
  [31m[1m>[22m[39m[90m 221 |[39m         expect(authService[33m.[39mrefreshTokens)[33m.[39mtoHaveBeenCalledWith(refreshTokenDto)[33m;[39m
   [90m     |[39m         [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 222 |[39m       }
   [90m 223 |[39m     })[33m;[39m
   [90m 224 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m225:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 223 |[39m     })[33m;[39m
   [90m 224 |[39m
  [31m[1m>[22m[39m[90m 225 |[39m     it([32m'should propagate errors from auth service'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 226 |[39m       [36mconst[39m refreshTokenDto[33m:[39m [33mRefreshTokenDto[39m [33m=[39m {
   [90m 227 |[39m         refreshToken[33m:[39m [32m'invalid-token'[39m[33m,[39m
   [90m 228 |[39m       }[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m233:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 231 |[39m       mockAuthService[33m.[39mrefreshTokens[33m.[39mmockRejectedValue(error)[33m;[39m
   [90m 232 |[39m
  [31m[1m>[22m[39m[90m 233 |[39m       [36mawait[39m expect(controller[33m.[39mrefresh(refreshTokenDto))[33m.[39mrejects[33m.[39mtoThrow(
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 234 |[39m         [32m'Invalid refresh token'[39m
   [90m 235 |[39m       )[33m;[39m
   [90m 236 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m239:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 237 |[39m   })[33m;[39m
   [90m 238 |[39m
  [31m[1m>[22m[39m[90m 239 |[39m   describe([32m'getProfile'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 240 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m 241 |[39m       expect(controller[33m.[39mgetProfile)[33m.[39mtoBeDefined()[33m;[39m
   [90m 242 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m240:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 238 |[39m
   [90m 239 |[39m   describe([32m'getProfile'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 240 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 241 |[39m       expect(controller[33m.[39mgetProfile)[33m.[39mtoBeDefined()[33m;[39m
   [90m 242 |[39m     })[33m;[39m
   [90m 243 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m241:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 239 |[39m   describe([32m'getProfile'[39m[33m,[39m () [33m=>[39m {
   [90m 240 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 241 |[39m       expect(controller[33m.[39mgetProfile)[33m.[39mtoBeDefined()[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 242 |[39m     })[33m;[39m
   [90m 243 |[39m
   [90m 244 |[39m     it([32m'should return user profile'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m244:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 242 |[39m     })[33m;[39m
   [90m 243 |[39m
  [31m[1m>[22m[39m[90m 244 |[39m     it([32m'should return user profile'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 245 |[39m       [36mconst[39m req [33m=[39m { user[33m:[39m { id[33m:[39m [32m'user-123'[39m } }[33m;[39m
   [90m 246 |[39m
   [90m 247 |[39m       mockAuthService[33m.[39mvalidateUser[33m.[39mmockResolvedValue(mockUserResponse)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m251:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 249 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m controller[33m.[39mgetProfile(req [36mas[39m any)[33m;[39m
   [90m 250 |[39m
  [31m[1m>[22m[39m[90m 251 |[39m       expect(authService[33m.[39mvalidateUser)[33m.[39mtoHaveBeenCalledWith([32m'user-123'[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 252 |[39m       expect(authService[33m.[39mvalidateUser)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
   [90m 253 |[39m       expect(result)[33m.[39mtoEqual(mockUserResponse)[33m;[39m
   [90m 254 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m252:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 250 |[39m
   [90m 251 |[39m       expect(authService[33m.[39mvalidateUser)[33m.[39mtoHaveBeenCalledWith([32m'user-123'[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 252 |[39m       expect(authService[33m.[39mvalidateUser)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 253 |[39m       expect(result)[33m.[39mtoEqual(mockUserResponse)[33m;[39m
   [90m 254 |[39m     })[33m;[39m
   [90m 255 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m253:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 251 |[39m       expect(authService[33m.[39mvalidateUser)[33m.[39mtoHaveBeenCalledWith([32m'user-123'[39m)[33m;[39m
   [90m 252 |[39m       expect(authService[33m.[39mvalidateUser)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 253 |[39m       expect(result)[33m.[39mtoEqual(mockUserResponse)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 254 |[39m     })[33m;[39m
   [90m 255 |[39m
   [90m 256 |[39m     it([32m'should handle different user IDs'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m256:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 254 |[39m     })[33m;[39m
   [90m 255 |[39m
  [31m[1m>[22m[39m[90m 256 |[39m     it([32m'should handle different user IDs'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 257 |[39m       [36mconst[39m userIds [33m=[39m [
   [90m 258 |[39m         [32m'user-123'[39m[33m,[39m
   [90m 259 |[39m         [32m'550e8400-e29b-41d4-a716-446655440000'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m269:9[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 267 |[39m         [36mconst[39m result [33m=[39m [36mawait[39m controller[33m.[39mgetProfile(req [36mas[39m any)[33m;[39m
   [90m 268 |[39m
  [31m[1m>[22m[39m[90m 269 |[39m         expect(authService[33m.[39mvalidateUser)[33m.[39mtoHaveBeenCalledWith(userId)[33m;[39m
   [90m     |[39m         [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 270 |[39m         expect(result[33m.[39mid)[33m.[39mtoBe(userId)[33m;[39m
   [90m 271 |[39m       }
   [90m 272 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m270:9[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 268 |[39m
   [90m 269 |[39m         expect(authService[33m.[39mvalidateUser)[33m.[39mtoHaveBeenCalledWith(userId)[33m;[39m
  [31m[1m>[22m[39m[90m 270 |[39m         expect(result[33m.[39mid)[33m.[39mtoBe(userId)[33m;[39m
   [90m     |[39m         [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 271 |[39m       }
   [90m 272 |[39m     })[33m;[39m
   [90m 273 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m274:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 272 |[39m     })[33m;[39m
   [90m 273 |[39m
  [31m[1m>[22m[39m[90m 274 |[39m     it([32m'should propagate errors from auth service'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 275 |[39m       [36mconst[39m req [33m=[39m { user[33m:[39m { id[33m:[39m [32m'user-123'[39m } }[33m;[39m
   [90m 276 |[39m       [36mconst[39m error [33m=[39m [36mnew[39m [33mError[39m([32m'User not found'[39m)[33m;[39m
   [90m 277 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m280:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 278 |[39m       mockAuthService[33m.[39mvalidateUser[33m.[39mmockRejectedValue(error)[33m;[39m
   [90m 279 |[39m
  [31m[1m>[22m[39m[90m 280 |[39m       [36mawait[39m expect(controller[33m.[39mgetProfile(req [36mas[39m any))[33m.[39mrejects[33m.[39mtoThrow([32m'User not found'[39m)[33m;[39m
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 281 |[39m     })[33m;[39m
   [90m 282 |[39m   })[33m;[39m
   [90m 283 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m284:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 282 |[39m   })[33m;[39m
   [90m 283 |[39m
  [31m[1m>[22m[39m[90m 284 |[39m   describe([32m'getHealth'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 285 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m 286 |[39m       expect(controller[33m.[39mgetHealth)[33m.[39mtoBeDefined()[33m;[39m
   [90m 287 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m285:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 283 |[39m
   [90m 284 |[39m   describe([32m'getHealth'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 285 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 286 |[39m       expect(controller[33m.[39mgetHealth)[33m.[39mtoBeDefined()[33m;[39m
   [90m 287 |[39m     })[33m;[39m
   [90m 288 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m286:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 284 |[39m   describe([32m'getHealth'[39m[33m,[39m () [33m=>[39m {
   [90m 285 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 286 |[39m       expect(controller[33m.[39mgetHealth)[33m.[39mtoBeDefined()[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 287 |[39m     })[33m;[39m
   [90m 288 |[39m
   [90m 289 |[39m     it([32m'should return "ok" status when Redis is connected'[39m[33m,[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m289:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 287 |[39m     })[33m;[39m
   [90m 288 |[39m
  [31m[1m>[22m[39m[90m 289 |[39m     it([32m'should return "ok" status when Redis is connected'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 290 |[39m       mockSessionService[33m.[39mgetRedisStatus[33m.[39mmockReturnValue([32m'connected'[39m)[33m;[39m
   [90m 291 |[39m
   [90m 292 |[39m       [36mconst[39m result [33m=[39m controller[33m.[39mgetHealth()[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m294:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 292 |[39m       [36mconst[39m result [33m=[39m controller[33m.[39mgetHealth()[33m;[39m
   [90m 293 |[39m
  [31m[1m>[22m[39m[90m 294 |[39m       expect(sessionService[33m.[39mgetRedisStatus)[33m.[39mtoHaveBeenCalled()[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 295 |[39m       expect(result)[33m.[39mtoEqual({
   [90m 296 |[39m         status[33m:[39m [32m'ok'[39m[33m,[39m
   [90m 297 |[39m         redis[33m:[39m [32m'connected'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m295:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 293 |[39m
   [90m 294 |[39m       expect(sessionService[33m.[39mgetRedisStatus)[33m.[39mtoHaveBeenCalled()[33m;[39m
  [31m[1m>[22m[39m[90m 295 |[39m       expect(result)[33m.[39mtoEqual({
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 296 |[39m         status[33m:[39m [32m'ok'[39m[33m,[39m
   [90m 297 |[39m         redis[33m:[39m [32m'connected'[39m[33m,[39m
   [90m 298 |[39m         uptime[33m:[39m expect[33m.[39many([33mNumber[39m)[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m298:17[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 296 |[39m         status[33m:[39m [32m'ok'[39m[33m,[39m
   [90m 297 |[39m         redis[33m:[39m [32m'connected'[39m[33m,[39m
  [31m[1m>[22m[39m[90m 298 |[39m         uptime[33m:[39m expect[33m.[39many([33mNumber[39m)[33m,[39m
   [90m     |[39m                 [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 299 |[39m         timestamp[33m:[39m expect[33m.[39many([33mString[39m)[33m,[39m
   [90m 300 |[39m       })[33m;[39m
   [90m 301 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m299:20[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 297 |[39m         redis[33m:[39m [32m'connected'[39m[33m,[39m
   [90m 298 |[39m         uptime[33m:[39m expect[33m.[39many([33mNumber[39m)[33m,[39m
  [31m[1m>[22m[39m[90m 299 |[39m         timestamp[33m:[39m expect[33m.[39many([33mString[39m)[33m,[39m
   [90m     |[39m                    [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 300 |[39m       })[33m;[39m
   [90m 301 |[39m     })[33m;[39m
   [90m 302 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m303:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 301 |[39m     })[33m;[39m
   [90m 302 |[39m
  [31m[1m>[22m[39m[90m 303 |[39m     it([32m'should return "degraded" status when Redis is disconnected'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 304 |[39m       mockSessionService[33m.[39mgetRedisStatus[33m.[39mmockReturnValue([32m'disconnected'[39m)[33m;[39m
   [90m 305 |[39m
   [90m 306 |[39m       [36mconst[39m result [33m=[39m controller[33m.[39mgetHealth()[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m308:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 306 |[39m       [36mconst[39m result [33m=[39m controller[33m.[39mgetHealth()[33m;[39m
   [90m 307 |[39m
  [31m[1m>[22m[39m[90m 308 |[39m       expect(result)[33m.[39mtoEqual({
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 309 |[39m         status[33m:[39m [32m'degraded'[39m[33m,[39m
   [90m 310 |[39m         redis[33m:[39m [32m'disconnected'[39m[33m,[39m
   [90m 311 |[39m         uptime[33m:[39m expect[33m.[39many([33mNumber[39m)[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m311:17[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 309 |[39m         status[33m:[39m [32m'degraded'[39m[33m,[39m
   [90m 310 |[39m         redis[33m:[39m [32m'disconnected'[39m[33m,[39m
  [31m[1m>[22m[39m[90m 311 |[39m         uptime[33m:[39m expect[33m.[39many([33mNumber[39m)[33m,[39m
   [90m     |[39m                 [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 312 |[39m         timestamp[33m:[39m expect[33m.[39many([33mString[39m)[33m,[39m
   [90m 313 |[39m       })[33m;[39m
   [90m 314 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m312:20[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 310 |[39m         redis[33m:[39m [32m'disconnected'[39m[33m,[39m
   [90m 311 |[39m         uptime[33m:[39m expect[33m.[39many([33mNumber[39m)[33m,[39m
  [31m[1m>[22m[39m[90m 312 |[39m         timestamp[33m:[39m expect[33m.[39many([33mString[39m)[33m,[39m
   [90m     |[39m                    [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 313 |[39m       })[33m;[39m
   [90m 314 |[39m     })[33m;[39m
   [90m 315 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m316:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 314 |[39m     })[33m;[39m
   [90m 315 |[39m
  [31m[1m>[22m[39m[90m 316 |[39m     it([32m'should include uptime in health response'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 317 |[39m       mockSessionService[33m.[39mgetRedisStatus[33m.[39mmockReturnValue([32m'connected'[39m)[33m;[39m
   [90m 318 |[39m
   [90m 319 |[39m       [36mconst[39m result [33m=[39m controller[33m.[39mgetHealth()[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m321:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 319 |[39m       [36mconst[39m result [33m=[39m controller[33m.[39mgetHealth()[33m;[39m
   [90m 320 |[39m
  [31m[1m>[22m[39m[90m 321 |[39m       expect(result[33m.[39muptime)[33m.[39mtoBeGreaterThan([35m0[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 322 |[39m       expect([36mtypeof[39m result[33m.[39muptime)[33m.[39mtoBe([32m'number'[39m)[33m;[39m
   [90m 323 |[39m     })[33m;[39m
   [90m 324 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m322:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 320 |[39m
   [90m 321 |[39m       expect(result[33m.[39muptime)[33m.[39mtoBeGreaterThan([35m0[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 322 |[39m       expect([36mtypeof[39m result[33m.[39muptime)[33m.[39mtoBe([32m'number'[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 323 |[39m     })[33m;[39m
   [90m 324 |[39m
   [90m 325 |[39m     it([32m'should include valid ISO timestamp'[39m[33m,[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m325:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 323 |[39m     })[33m;[39m
   [90m 324 |[39m
  [31m[1m>[22m[39m[90m 325 |[39m     it([32m'should include valid ISO timestamp'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 326 |[39m       mockSessionService[33m.[39mgetRedisStatus[33m.[39mmockReturnValue([32m'connected'[39m)[33m;[39m
   [90m 327 |[39m
   [90m 328 |[39m       [36mconst[39m result [33m=[39m controller[33m.[39mgetHealth()[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m330:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 328 |[39m       [36mconst[39m result [33m=[39m controller[33m.[39mgetHealth()[33m;[39m
   [90m 329 |[39m
  [31m[1m>[22m[39m[90m 330 |[39m       expect(result[33m.[39mtimestamp)[33m.[39mtoMatch([35m/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}/[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 331 |[39m       expect(() [33m=>[39m [36mnew[39m [33mDate[39m(result[33m.[39mtimestamp))[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
   [90m 332 |[39m     })[33m;[39m
   [90m 333 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m331:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 329 |[39m
   [90m 330 |[39m       expect(result[33m.[39mtimestamp)[33m.[39mtoMatch([35m/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}/[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 331 |[39m       expect(() [33m=>[39m [36mnew[39m [33mDate[39m(result[33m.[39mtimestamp))[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 332 |[39m     })[33m;[39m
   [90m 333 |[39m
   [90m 334 |[39m     it([32m'should handle rapid successive health checks'[39m[33m,[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m334:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 332 |[39m     })[33m;[39m
   [90m 333 |[39m
  [31m[1m>[22m[39m[90m 334 |[39m     it([32m'should handle rapid successive health checks'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 335 |[39m       mockSessionService[33m.[39mgetRedisStatus[33m.[39mmockReturnValue([32m'connected'[39m)[33m;[39m
   [90m 336 |[39m
   [90m 337 |[39m       [36mconst[39m results [33m=[39m [33mArray[39m[33m.[39m[36mfrom[39m({ length[33m:[39m [35m100[39m }[33m,[39m () [33m=>[39m controller[33m.[39mgetHealth())[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m340:9[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 338 |[39m
   [90m 339 |[39m       results[33m.[39mforEach((result) [33m=>[39m {
  [31m[1m>[22m[39m[90m 340 |[39m         expect(result[33m.[39mstatus)[33m.[39mtoBe([32m'ok'[39m)[33m;[39m
   [90m     |[39m         [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 341 |[39m         expect(result[33m.[39mredis)[33m.[39mtoBe([32m'connected'[39m)[33m;[39m
   [90m 342 |[39m       })[33m;[39m
   [90m 343 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m341:9[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 339 |[39m       results[33m.[39mforEach((result) [33m=>[39m {
   [90m 340 |[39m         expect(result[33m.[39mstatus)[33m.[39mtoBe([32m'ok'[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 341 |[39m         expect(result[33m.[39mredis)[33m.[39mtoBe([32m'connected'[39m)[33m;[39m
   [90m     |[39m         [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 342 |[39m       })[33m;[39m
   [90m 343 |[39m
   [90m 344 |[39m       expect(sessionService[33m.[39mgetRedisStatus)[33m.[39mtoHaveBeenCalledTimes([35m100[39m)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m344:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 342 |[39m       })[33m;[39m
   [90m 343 |[39m
  [31m[1m>[22m[39m[90m 344 |[39m       expect(sessionService[33m.[39mgetRedisStatus)[33m.[39mtoHaveBeenCalledTimes([35m100[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 345 |[39m     })[33m;[39m
   [90m 346 |[39m   })[33m;[39m
   [90m 347 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m348:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 346 |[39m   })[33m;[39m
   [90m 347 |[39m
  [31m[1m>[22m[39m[90m 348 |[39m   describe([32m'integration scenarios'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 349 |[39m     it([32m'should handle complete auth flow'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m 350 |[39m       [90m// Login[39m
   [90m 351 |[39m       [36mconst[39m loginDto[33m:[39m [33mLoginDto[39m [33m=[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m349:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 347 |[39m
   [90m 348 |[39m   describe([32m'integration scenarios'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 349 |[39m     it([32m'should handle complete auth flow'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 350 |[39m       [90m// Login[39m
   [90m 351 |[39m       [36mconst[39m loginDto[33m:[39m [33mLoginDto[39m [33m=[39m {
   [90m 352 |[39m         email[33m:[39m [32m'test@example.com'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m358:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 356 |[39m
   [90m 357 |[39m       [36mconst[39m loginResult [33m=[39m [36mawait[39m controller[33m.[39mlogin(loginDto)[33m;[39m
  [31m[1m>[22m[39m[90m 358 |[39m       expect(loginResult[33m.[39maccessToken)[33m.[39mtoBeDefined()[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 359 |[39m
   [90m 360 |[39m       [90m// Get profile[39m
   [90m 361 |[39m       [36mconst[39m req [33m=[39m { user[33m:[39m { id[33m:[39m mockLoginResponse[33m.[39muser[33m.[39mid } }[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m365:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 363 |[39m
   [90m 364 |[39m       [36mconst[39m profileResult [33m=[39m [36mawait[39m controller[33m.[39mgetProfile(req [36mas[39m any)[33m;[39m
  [31m[1m>[22m[39m[90m 365 |[39m       expect(profileResult[33m.[39mid)[33m.[39mtoBe(mockLoginResponse[33m.[39muser[33m.[39mid)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 366 |[39m
   [90m 367 |[39m       [90m// Logout[39m
   [90m 368 |[39m       [36mconst[39m authHeader [33m=[39m [32m`Bearer ${loginResult.accessToken}`[39m[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m372:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 370 |[39m
   [90m 371 |[39m       [36mawait[39m controller[33m.[39mlogout(req [36mas[39m any[33m,[39m authHeader)[33m;[39m
  [31m[1m>[22m[39m[90m 372 |[39m       expect(authService[33m.[39mlogout)[33m.[39mtoHaveBeenCalledWith(
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 373 |[39m         mockLoginResponse[33m.[39muser[33m.[39mid[33m,[39m
   [90m 374 |[39m         loginResult[33m.[39maccessToken
   [90m 375 |[39m       )[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m378:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 376 |[39m     })[33m;[39m
   [90m 377 |[39m
  [31m[1m>[22m[39m[90m 378 |[39m     it([32m'should handle token refresh flow'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 379 |[39m       [90m// Initial login[39m
   [90m 380 |[39m       [36mconst[39m loginDto[33m:[39m [33mLoginDto[39m [33m=[39m {
   [90m 381 |[39m         email[33m:[39m [32m'test@example.com'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m400:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 398 |[39m
   [90m 399 |[39m       [36mconst[39m refreshResult [33m=[39m [36mawait[39m controller[33m.[39mrefresh(refreshTokenDto)[33m;[39m
  [31m[1m>[22m[39m[90m 400 |[39m       expect(refreshResult[33m.[39maccessToken)[33m.[39mtoBe([32m'new-access-token'[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 401 |[39m       expect(refreshResult[33m.[39mrefreshToken)[33m.[39mtoBe([32m'new-refresh-token'[39m)[33m;[39m
   [90m 402 |[39m     })[33m;[39m
   [90m 403 |[39m   })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/auth.controller.spec.ts:[32m[1m401:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 399 |[39m       [36mconst[39m refreshResult [33m=[39m [36mawait[39m controller[33m.[39mrefresh(refreshTokenDto)[33m;[39m
   [90m 400 |[39m       expect(refreshResult[33m.[39maccessToken)[33m.[39mtoBe([32m'new-access-token'[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 401 |[39m       expect(refreshResult[33m.[39mrefreshToken)[33m.[39mtoBe([32m'new-refresh-token'[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 402 |[39m     })[33m;[39m
   [90m 403 |[39m   })[33m;[39m
   [90m 404 |[39m })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m10:1[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m  8 |[39m [36mimport[39m { [33mLoginDto[39m[33m,[39m [33mRefreshTokenDto[39m } [36mfrom[39m [32m'../dto'[39m[33m;[39m
   [90m  9 |[39m
  [31m[1m>[22m[39m[90m 10 |[39m describe([32m'AuthService'[39m[33m,[39m () [33m=>[39m {
   [90m    |[39m [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 11 |[39m   [36mlet[39m service[33m:[39m [33mAuthService[39m[33m;[39m
   [90m 12 |[39m
   [90m 13 |[39m   [36mconst[39m mockPrismaService [33m=[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m15:19[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 13 |[39m   [36mconst[39m mockPrismaService [33m=[39m {
   [90m 14 |[39m     user[33m:[39m {
  [31m[1m>[22m[39m[90m 15 |[39m       findUnique[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m                   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 16 |[39m       update[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 17 |[39m     }[33m,[39m
   [90m 18 |[39m     refreshToken[33m:[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m16:15[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 14 |[39m     user[33m:[39m {
   [90m 15 |[39m       findUnique[33m:[39m jest[33m.[39mfn()[33m,[39m
  [31m[1m>[22m[39m[90m 16 |[39m       update[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m               [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 17 |[39m     }[33m,[39m
   [90m 18 |[39m     refreshToken[33m:[39m {
   [90m 19 |[39m       findUnique[33m:[39m jest[33m.[39mfn()[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m19:19[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 17 |[39m     }[33m,[39m
   [90m 18 |[39m     refreshToken[33m:[39m {
  [31m[1m>[22m[39m[90m 19 |[39m       findUnique[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m                   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 20 |[39m       create[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 21 |[39m       update[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 22 |[39m       updateMany[33m:[39m jest[33m.[39mfn()[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m20:15[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 18 |[39m     refreshToken[33m:[39m {
   [90m 19 |[39m       findUnique[33m:[39m jest[33m.[39mfn()[33m,[39m
  [31m[1m>[22m[39m[90m 20 |[39m       create[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m               [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 21 |[39m       update[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 22 |[39m       updateMany[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 23 |[39m     }[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m21:15[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 19 |[39m       findUnique[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 20 |[39m       create[33m:[39m jest[33m.[39mfn()[33m,[39m
  [31m[1m>[22m[39m[90m 21 |[39m       update[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m               [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 22 |[39m       updateMany[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 23 |[39m     }[33m,[39m
   [90m 24 |[39m   }[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m22:19[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 20 |[39m       create[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 21 |[39m       update[33m:[39m jest[33m.[39mfn()[33m,[39m
  [31m[1m>[22m[39m[90m 22 |[39m       updateMany[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m                   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 23 |[39m     }[33m,[39m
   [90m 24 |[39m   }[33m;[39m
   [90m 25 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m27:11[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 25 |[39m
   [90m 26 |[39m   [36mconst[39m mockJwtService [33m=[39m {
  [31m[1m>[22m[39m[90m 27 |[39m     sign[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m           [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 28 |[39m     decode[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 29 |[39m   }[33m;[39m
   [90m 30 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m28:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 26 |[39m   [36mconst[39m mockJwtService [33m=[39m {
   [90m 27 |[39m     sign[33m:[39m jest[33m.[39mfn()[33m,[39m
  [31m[1m>[22m[39m[90m 28 |[39m     decode[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 29 |[39m   }[33m;[39m
   [90m 30 |[39m
   [90m 31 |[39m   [36mconst[39m mockHashService [33m=[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m32:11[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 30 |[39m
   [90m 31 |[39m   [36mconst[39m mockHashService [33m=[39m {
  [31m[1m>[22m[39m[90m 32 |[39m     hash[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m           [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 33 |[39m     compare[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 34 |[39m   }[33m;[39m
   [90m 35 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m33:14[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 31 |[39m   [36mconst[39m mockHashService [33m=[39m {
   [90m 32 |[39m     hash[33m:[39m jest[33m.[39mfn()[33m,[39m
  [31m[1m>[22m[39m[90m 33 |[39m     compare[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m              [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 34 |[39m   }[33m;[39m
   [90m 35 |[39m
   [90m 36 |[39m   [36mconst[39m mockSessionService [33m=[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m37:20[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 35 |[39m
   [90m 36 |[39m   [36mconst[39m mockSessionService [33m=[39m {
  [31m[1m>[22m[39m[90m 37 |[39m     createSession[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m                    [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 38 |[39m     deleteSession[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 39 |[39m     blacklistToken[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 40 |[39m   }[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m38:20[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 36 |[39m   [36mconst[39m mockSessionService [33m=[39m {
   [90m 37 |[39m     createSession[33m:[39m jest[33m.[39mfn()[33m,[39m
  [31m[1m>[22m[39m[90m 38 |[39m     deleteSession[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m                    [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 39 |[39m     blacklistToken[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 40 |[39m   }[33m;[39m
   [90m 41 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m39:21[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 37 |[39m     createSession[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 38 |[39m     deleteSession[33m:[39m jest[33m.[39mfn()[33m,[39m
  [31m[1m>[22m[39m[90m 39 |[39m     blacklistToken[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m                     [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 40 |[39m   }[33m;[39m
   [90m 41 |[39m
   [90m 42 |[39m   [36mconst[39m mockUser [33m=[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m52:3[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'beforeEach'.
  [0m [90m 50 |[39m   }[33m;[39m
   [90m 51 |[39m
  [31m[1m>[22m[39m[90m 52 |[39m   beforeEach([36masync[39m () [33m=>[39m {
   [90m    |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 53 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
   [90m 54 |[39m       providers[33m:[39m [
   [90m 55 |[39m         [33mAuthService[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m65:5[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 63 |[39m     service [33m=[39m module[33m.[39m[36mget[39m[33m<[39m[33mAuthService[39m[33m>[39m([33mAuthService[39m)[33m;[39m
   [90m 64 |[39m
  [31m[1m>[22m[39m[90m 65 |[39m     jest[33m.[39mclearAllMocks()[33m;[39m
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 66 |[39m   })[33m;[39m
   [90m 67 |[39m
   [90m 68 |[39m   afterEach(() [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m68:3[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'afterEach'.
  [0m [90m 66 |[39m   })[33m;[39m
   [90m 67 |[39m
  [31m[1m>[22m[39m[90m 68 |[39m   afterEach(() [33m=>[39m {
   [90m    |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 69 |[39m     jest[33m.[39mresetAllMocks()[33m;[39m
   [90m 70 |[39m   })[33m;[39m
   [90m 71 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m69:5[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 67 |[39m
   [90m 68 |[39m   afterEach(() [33m=>[39m {
  [31m[1m>[22m[39m[90m 69 |[39m     jest[33m.[39mresetAllMocks()[33m;[39m
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 70 |[39m   })[33m;[39m
   [90m 71 |[39m
   [90m 72 |[39m   describe([32m'login'[39m[33m,[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m72:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 70 |[39m   })[33m;[39m
   [90m 71 |[39m
  [31m[1m>[22m[39m[90m 72 |[39m   describe([32m'login'[39m[33m,[39m () [33m=>[39m {
   [90m    |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 73 |[39m     [36mconst[39m loginDto[33m:[39m [33mLoginDto[39m [33m=[39m {
   [90m 74 |[39m       email[33m:[39m [32m'test@example.com'[39m[33m,[39m
   [90m 75 |[39m       password[33m:[39m [32m'password123'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m78:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 76 |[39m     }[33m;[39m
   [90m 77 |[39m
  [31m[1m>[22m[39m[90m 78 |[39m     it([32m'should successfully login a user with valid credentials'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 79 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockResolvedValue(mockUser)[33m;[39m
   [90m 80 |[39m       mockHashService[33m.[39mcompare[33m.[39mmockResolvedValue([36mtrue[39m)[33m;[39m
   [90m 81 |[39m       mockJwtService[33m.[39msign[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m97:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m  95 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39mlogin(loginDto)[33m;[39m
   [90m  96 |[39m
  [31m[1m>[22m[39m[90m  97 |[39m       expect(mockPrismaService[33m.[39muser[33m.[39mfindUnique)[33m.[39mtoHaveBeenCalledWith({
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m  98 |[39m         where[33m:[39m { email[33m:[39m loginDto[33m.[39memail }[33m,[39m
   [90m  99 |[39m       })[33m;[39m
   [90m 100 |[39m       expect(mockHashService[33m.[39mcompare)[33m.[39mtoHaveBeenCalledWith([0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m100:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m  98 |[39m         where[33m:[39m { email[33m:[39m loginDto[33m.[39memail }[33m,[39m
   [90m  99 |[39m       })[33m;[39m
  [31m[1m>[22m[39m[90m 100 |[39m       expect(mockHashService[33m.[39mcompare)[33m.[39mtoHaveBeenCalledWith(
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 101 |[39m         loginDto[33m.[39mpassword[33m,[39m
   [90m 102 |[39m         mockUser[33m.[39mpassword
   [90m 103 |[39m       )[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m104:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 102 |[39m         mockUser[33m.[39mpassword
   [90m 103 |[39m       )[33m;[39m
  [31m[1m>[22m[39m[90m 104 |[39m       expect(mockPrismaService[33m.[39muser[33m.[39mupdate)[33m.[39mtoHaveBeenCalledWith({
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 105 |[39m         where[33m:[39m { id[33m:[39m mockUser[33m.[39mid }[33m,[39m
   [90m 106 |[39m         data[33m:[39m { lastLoginAt[33m:[39m expect[33m.[39many([33mDate[39m) }[33m,[39m
   [90m 107 |[39m       })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m106:30[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 104 |[39m       expect(mockPrismaService[33m.[39muser[33m.[39mupdate)[33m.[39mtoHaveBeenCalledWith({
   [90m 105 |[39m         where[33m:[39m { id[33m:[39m mockUser[33m.[39mid }[33m,[39m
  [31m[1m>[22m[39m[90m 106 |[39m         data[33m:[39m { lastLoginAt[33m:[39m expect[33m.[39many([33mDate[39m) }[33m,[39m
   [90m     |[39m                              [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 107 |[39m       })[33m;[39m
   [90m 108 |[39m       expect(result)[33m.[39mtoEqual({
   [90m 109 |[39m         accessToken[33m:[39m [32m'access-token-xyz'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m108:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 106 |[39m         data[33m:[39m { lastLoginAt[33m:[39m expect[33m.[39many([33mDate[39m) }[33m,[39m
   [90m 107 |[39m       })[33m;[39m
  [31m[1m>[22m[39m[90m 108 |[39m       expect(result)[33m.[39mtoEqual({
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 109 |[39m         accessToken[33m:[39m [32m'access-token-xyz'[39m[33m,[39m
   [90m 110 |[39m         refreshToken[33m:[39m [32m'refresh-token-abc'[39m[33m,[39m
   [90m 111 |[39m         expiresIn[33m:[39m [35m15[39m [33m*[39m [35m60[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m121:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 119 |[39m     })[33m;[39m
   [90m 120 |[39m
  [31m[1m>[22m[39m[90m 121 |[39m     it([32m'should throw UnauthorizedException when user does not exist'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 122 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockResolvedValue([36mnull[39m)[33m;[39m
   [90m 123 |[39m
   [90m 124 |[39m       [36mawait[39m expect(service[33m.[39mlogin(loginDto))[33m.[39mrejects[33m.[39mtoThrow([33mUnauthorizedException[39m)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m124:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 122 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockResolvedValue([36mnull[39m)[33m;[39m
   [90m 123 |[39m
  [31m[1m>[22m[39m[90m 124 |[39m       [36mawait[39m expect(service[33m.[39mlogin(loginDto))[33m.[39mrejects[33m.[39mtoThrow([33mUnauthorizedException[39m)[33m;[39m
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 125 |[39m       [36mawait[39m expect(service[33m.[39mlogin(loginDto))[33m.[39mrejects[33m.[39mtoThrow([32m'Invalid credentials'[39m)[33m;[39m
   [90m 126 |[39m       expect(mockHashService[33m.[39mcompare)[33m.[39mnot[33m.[39mtoHaveBeenCalled()[33m;[39m
   [90m 127 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m125:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 123 |[39m
   [90m 124 |[39m       [36mawait[39m expect(service[33m.[39mlogin(loginDto))[33m.[39mrejects[33m.[39mtoThrow([33mUnauthorizedException[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 125 |[39m       [36mawait[39m expect(service[33m.[39mlogin(loginDto))[33m.[39mrejects[33m.[39mtoThrow([32m'Invalid credentials'[39m)[33m;[39m
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 126 |[39m       expect(mockHashService[33m.[39mcompare)[33m.[39mnot[33m.[39mtoHaveBeenCalled()[33m;[39m
   [90m 127 |[39m     })[33m;[39m
   [90m 128 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m126:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 124 |[39m       [36mawait[39m expect(service[33m.[39mlogin(loginDto))[33m.[39mrejects[33m.[39mtoThrow([33mUnauthorizedException[39m)[33m;[39m
   [90m 125 |[39m       [36mawait[39m expect(service[33m.[39mlogin(loginDto))[33m.[39mrejects[33m.[39mtoThrow([32m'Invalid credentials'[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 126 |[39m       expect(mockHashService[33m.[39mcompare)[33m.[39mnot[33m.[39mtoHaveBeenCalled()[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 127 |[39m     })[33m;[39m
   [90m 128 |[39m
   [90m 129 |[39m     it([32m'should throw UnauthorizedException when user is inactive'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m129:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 127 |[39m     })[33m;[39m
   [90m 128 |[39m
  [31m[1m>[22m[39m[90m 129 |[39m     it([32m'should throw UnauthorizedException when user is inactive'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 130 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockResolvedValue({
   [90m 131 |[39m         [33m...[39mmockUser[33m,[39m
   [90m 132 |[39m         isActive[33m:[39m [36mfalse[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m135:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 133 |[39m       })[33m;[39m
   [90m 134 |[39m
  [31m[1m>[22m[39m[90m 135 |[39m       [36mawait[39m expect(service[33m.[39mlogin(loginDto))[33m.[39mrejects[33m.[39mtoThrow([33mUnauthorizedException[39m)[33m;[39m
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 136 |[39m       [36mawait[39m expect(service[33m.[39mlogin(loginDto))[33m.[39mrejects[33m.[39mtoThrow([32m'User account is inactive'[39m)[33m;[39m
   [90m 137 |[39m       expect(mockHashService[33m.[39mcompare)[33m.[39mnot[33m.[39mtoHaveBeenCalled()[33m;[39m
   [90m 138 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m136:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 134 |[39m
   [90m 135 |[39m       [36mawait[39m expect(service[33m.[39mlogin(loginDto))[33m.[39mrejects[33m.[39mtoThrow([33mUnauthorizedException[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 136 |[39m       [36mawait[39m expect(service[33m.[39mlogin(loginDto))[33m.[39mrejects[33m.[39mtoThrow([32m'User account is inactive'[39m)[33m;[39m
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 137 |[39m       expect(mockHashService[33m.[39mcompare)[33m.[39mnot[33m.[39mtoHaveBeenCalled()[33m;[39m
   [90m 138 |[39m     })[33m;[39m
   [90m 139 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m137:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 135 |[39m       [36mawait[39m expect(service[33m.[39mlogin(loginDto))[33m.[39mrejects[33m.[39mtoThrow([33mUnauthorizedException[39m)[33m;[39m
   [90m 136 |[39m       [36mawait[39m expect(service[33m.[39mlogin(loginDto))[33m.[39mrejects[33m.[39mtoThrow([32m'User account is inactive'[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 137 |[39m       expect(mockHashService[33m.[39mcompare)[33m.[39mnot[33m.[39mtoHaveBeenCalled()[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 138 |[39m     })[33m;[39m
   [90m 139 |[39m
   [90m 140 |[39m     it([32m'should throw UnauthorizedException when password is invalid'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m140:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 138 |[39m     })[33m;[39m
   [90m 139 |[39m
  [31m[1m>[22m[39m[90m 140 |[39m     it([32m'should throw UnauthorizedException when password is invalid'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 141 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockResolvedValue(mockUser)[33m;[39m
   [90m 142 |[39m       mockHashService[33m.[39mcompare[33m.[39mmockResolvedValue([36mfalse[39m)[33m;[39m
   [90m 143 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m144:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 142 |[39m       mockHashService[33m.[39mcompare[33m.[39mmockResolvedValue([36mfalse[39m)[33m;[39m
   [90m 143 |[39m
  [31m[1m>[22m[39m[90m 144 |[39m       [36mawait[39m expect(service[33m.[39mlogin(loginDto))[33m.[39mrejects[33m.[39mtoThrow([33mUnauthorizedException[39m)[33m;[39m
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 145 |[39m       [36mawait[39m expect(service[33m.[39mlogin(loginDto))[33m.[39mrejects[33m.[39mtoThrow([32m'Invalid credentials'[39m)[33m;[39m
   [90m 146 |[39m     })[33m;[39m
   [90m 147 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m145:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 143 |[39m
   [90m 144 |[39m       [36mawait[39m expect(service[33m.[39mlogin(loginDto))[33m.[39mrejects[33m.[39mtoThrow([33mUnauthorizedException[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 145 |[39m       [36mawait[39m expect(service[33m.[39mlogin(loginDto))[33m.[39mrejects[33m.[39mtoThrow([32m'Invalid credentials'[39m)[33m;[39m
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 146 |[39m     })[33m;[39m
   [90m 147 |[39m
   [90m 148 |[39m     it([32m'should generate JWT tokens with correct payload'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m148:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 146 |[39m     })[33m;[39m
   [90m 147 |[39m
  [31m[1m>[22m[39m[90m 148 |[39m     it([32m'should generate JWT tokens with correct payload'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 149 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockResolvedValue(mockUser)[33m;[39m
   [90m 150 |[39m       mockHashService[33m.[39mcompare[33m.[39mmockResolvedValue([36mtrue[39m)[33m;[39m
   [90m 151 |[39m       mockJwtService[33m.[39msign[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m160:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 158 |[39m       [36mawait[39m service[33m.[39mlogin(loginDto)[33m;[39m
   [90m 159 |[39m
  [31m[1m>[22m[39m[90m 160 |[39m       expect(mockJwtService[33m.[39msign)[33m.[39mtoHaveBeenNthCalledWith(
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 161 |[39m         [35m1[39m[33m,[39m
   [90m 162 |[39m         expect[33m.[39mobjectContaining({
   [90m 163 |[39m           sub[33m:[39m mockUser[33m.[39mid[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m162:9[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 160 |[39m       expect(mockJwtService[33m.[39msign)[33m.[39mtoHaveBeenNthCalledWith(
   [90m 161 |[39m         [35m1[39m[33m,[39m
  [31m[1m>[22m[39m[90m 162 |[39m         expect[33m.[39mobjectContaining({
   [90m     |[39m         [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 163 |[39m           sub[33m:[39m mockUser[33m.[39mid[33m,[39m
   [90m 164 |[39m           email[33m:[39m mockUser[33m.[39memail[33m,[39m
   [90m 165 |[39m           jti[33m:[39m expect[33m.[39many([33mString[39m)[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m165:16[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 163 |[39m           sub[33m:[39m mockUser[33m.[39mid[33m,[39m
   [90m 164 |[39m           email[33m:[39m mockUser[33m.[39memail[33m,[39m
  [31m[1m>[22m[39m[90m 165 |[39m           jti[33m:[39m expect[33m.[39many([33mString[39m)[33m,[39m
   [90m     |[39m                [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 166 |[39m         })[33m,[39m
   [90m 167 |[39m         {
   [90m 168 |[39m           expiresIn[33m:[39m [32m'15m'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m169:19[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 167 |[39m         {
   [90m 168 |[39m           expiresIn[33m:[39m [32m'15m'[39m[33m,[39m
  [31m[1m>[22m[39m[90m 169 |[39m           secret[33m:[39m expect[33m.[39many([33mString[39m)[33m,[39m
   [90m     |[39m                   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 170 |[39m         }
   [90m 171 |[39m       )[33m;[39m
   [90m 172 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m173:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 171 |[39m       )[33m;[39m
   [90m 172 |[39m
  [31m[1m>[22m[39m[90m 173 |[39m       expect(mockJwtService[33m.[39msign)[33m.[39mtoHaveBeenNthCalledWith(
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 174 |[39m         [35m2[39m[33m,[39m
   [90m 175 |[39m         { sub[33m:[39m mockUser[33m.[39mid }[33m,[39m
   [90m 176 |[39m         {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m178:19[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 176 |[39m         {
   [90m 177 |[39m           expiresIn[33m:[39m [32m'7d'[39m[33m,[39m
  [31m[1m>[22m[39m[90m 178 |[39m           secret[33m:[39m expect[33m.[39many([33mString[39m)[33m,[39m
   [90m     |[39m                   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 179 |[39m         }
   [90m 180 |[39m       )[33m;[39m
   [90m 181 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m183:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 181 |[39m     })[33m;[39m
   [90m 182 |[39m
  [31m[1m>[22m[39m[90m 183 |[39m     it([32m'should store refresh token in database'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 184 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockResolvedValue(mockUser)[33m;[39m
   [90m 185 |[39m       mockHashService[33m.[39mcompare[33m.[39mmockResolvedValue([36mtrue[39m)[33m;[39m
   [90m 186 |[39m       mockJwtService[33m.[39msign[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m195:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 193 |[39m       [36mawait[39m service[33m.[39mlogin(loginDto)[33m;[39m
   [90m 194 |[39m
  [31m[1m>[22m[39m[90m 195 |[39m       expect(mockPrismaService[33m.[39mrefreshToken[33m.[39mcreate)[33m.[39mtoHaveBeenCalledWith({
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 196 |[39m         data[33m:[39m {
   [90m 197 |[39m           userId[33m:[39m mockUser[33m.[39mid[33m,[39m
   [90m 198 |[39m           token[33m:[39m [32m'refresh-token-abc'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m199:22[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 197 |[39m           userId[33m:[39m mockUser[33m.[39mid[33m,[39m
   [90m 198 |[39m           token[33m:[39m [32m'refresh-token-abc'[39m[33m,[39m
  [31m[1m>[22m[39m[90m 199 |[39m           expiresAt[33m:[39m expect[33m.[39many([33mDate[39m)[33m,[39m
   [90m     |[39m                      [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 200 |[39m         }[33m,[39m
   [90m 201 |[39m       })[33m;[39m
   [90m 202 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m204:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 202 |[39m     })[33m;[39m
   [90m 203 |[39m
  [31m[1m>[22m[39m[90m 204 |[39m     it([32m'should create session in Redis'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 205 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockResolvedValue(mockUser)[33m;[39m
   [90m 206 |[39m       mockHashService[33m.[39mcompare[33m.[39mmockResolvedValue([36mtrue[39m)[33m;[39m
   [90m 207 |[39m       mockJwtService[33m.[39msign[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m216:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 214 |[39m       [36mawait[39m service[33m.[39mlogin(loginDto)[33m;[39m
   [90m 215 |[39m
  [31m[1m>[22m[39m[90m 216 |[39m       expect(mockSessionService[33m.[39mcreateSession)[33m.[39mtoHaveBeenCalledWith({
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 217 |[39m         userId[33m:[39m mockUser[33m.[39mid[33m,[39m
   [90m 218 |[39m         accessToken[33m:[39m [32m'access-token'[39m[33m,[39m
   [90m 219 |[39m         refreshToken[33m:[39m [32m'refresh-token'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m220:20[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 218 |[39m         accessToken[33m:[39m [32m'access-token'[39m[33m,[39m
   [90m 219 |[39m         refreshToken[33m:[39m [32m'refresh-token'[39m[33m,[39m
  [31m[1m>[22m[39m[90m 220 |[39m         createdAt[33m:[39m expect[33m.[39many([33mNumber[39m)[33m,[39m
   [90m     |[39m                    [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 221 |[39m         expiresAt[33m:[39m expect[33m.[39many([33mNumber[39m)[33m,[39m
   [90m 222 |[39m         metadata[33m:[39m {}[33m,[39m
   [90m 223 |[39m       })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m221:20[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 219 |[39m         refreshToken[33m:[39m [32m'refresh-token'[39m[33m,[39m
   [90m 220 |[39m         createdAt[33m:[39m expect[33m.[39many([33mNumber[39m)[33m,[39m
  [31m[1m>[22m[39m[90m 221 |[39m         expiresAt[33m:[39m expect[33m.[39many([33mNumber[39m)[33m,[39m
   [90m     |[39m                    [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 222 |[39m         metadata[33m:[39m {}[33m,[39m
   [90m 223 |[39m       })[33m;[39m
   [90m 224 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m227:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 225 |[39m   })[33m;[39m
   [90m 226 |[39m
  [31m[1m>[22m[39m[90m 227 |[39m   describe([32m'logout'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 228 |[39m     [36mconst[39m userId [33m=[39m [32m'user-123'[39m[33m;[39m
   [90m 229 |[39m     [36mconst[39m accessToken [33m=[39m [32m'valid-access-token'[39m[33m;[39m
   [90m 230 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m231:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 229 |[39m     [36mconst[39m accessToken [33m=[39m [32m'valid-access-token'[39m[33m;[39m
   [90m 230 |[39m
  [31m[1m>[22m[39m[90m 231 |[39m     it([32m'should successfully logout a user'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 232 |[39m       mockJwtService[33m.[39mdecode[33m.[39mmockReturnValue({
   [90m 233 |[39m         jti[33m:[39m [32m'token-jti-123'[39m[33m,[39m
   [90m 234 |[39m         exp[33m:[39m [33mMath[39m[33m.[39mfloor([33mDate[39m[33m.[39mnow() [33m/[39m [35m1000[39m) [33m+[39m [35m900[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m242:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 240 |[39m       [36mawait[39m service[33m.[39mlogout(userId[33m,[39m accessToken)[33m;[39m
   [90m 241 |[39m
  [31m[1m>[22m[39m[90m 242 |[39m       expect(mockJwtService[33m.[39mdecode)[33m.[39mtoHaveBeenCalledWith(accessToken)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 243 |[39m       expect(mockSessionService[33m.[39mblacklistToken)[33m.[39mtoHaveBeenCalledWith(
   [90m 244 |[39m         [32m'token-jti-123'[39m[33m,[39m
   [90m 245 |[39m         expect[33m.[39many([33mNumber[39m)[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m243:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 241 |[39m
   [90m 242 |[39m       expect(mockJwtService[33m.[39mdecode)[33m.[39mtoHaveBeenCalledWith(accessToken)[33m;[39m
  [31m[1m>[22m[39m[90m 243 |[39m       expect(mockSessionService[33m.[39mblacklistToken)[33m.[39mtoHaveBeenCalledWith(
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 244 |[39m         [32m'token-jti-123'[39m[33m,[39m
   [90m 245 |[39m         expect[33m.[39many([33mNumber[39m)
   [90m 246 |[39m       )[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m245:9[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 243 |[39m       expect(mockSessionService[33m.[39mblacklistToken)[33m.[39mtoHaveBeenCalledWith(
   [90m 244 |[39m         [32m'token-jti-123'[39m[33m,[39m
  [31m[1m>[22m[39m[90m 245 |[39m         expect[33m.[39many([33mNumber[39m)
   [90m     |[39m         [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 246 |[39m       )[33m;[39m
   [90m 247 |[39m       expect(mockSessionService[33m.[39mdeleteSession)[33m.[39mtoHaveBeenCalledWith(userId)[33m;[39m
   [90m 248 |[39m       expect(mockPrismaService[33m.[39mrefreshToken[33m.[39mupdateMany)[33m.[39mtoHaveBeenCalledWith({[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m247:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 245 |[39m         expect[33m.[39many([33mNumber[39m)
   [90m 246 |[39m       )[33m;[39m
  [31m[1m>[22m[39m[90m 247 |[39m       expect(mockSessionService[33m.[39mdeleteSession)[33m.[39mtoHaveBeenCalledWith(userId)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 248 |[39m       expect(mockPrismaService[33m.[39mrefreshToken[33m.[39mupdateMany)[33m.[39mtoHaveBeenCalledWith({
   [90m 249 |[39m         where[33m:[39m {
   [90m 250 |[39m           userId[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m248:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 246 |[39m       )[33m;[39m
   [90m 247 |[39m       expect(mockSessionService[33m.[39mdeleteSession)[33m.[39mtoHaveBeenCalledWith(userId)[33m;[39m
  [31m[1m>[22m[39m[90m 248 |[39m       expect(mockPrismaService[33m.[39mrefreshToken[33m.[39mupdateMany)[33m.[39mtoHaveBeenCalledWith({
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 249 |[39m         where[33m:[39m {
   [90m 250 |[39m           userId[33m,[39m
   [90m 251 |[39m           isRevoked[33m:[39m [36mfalse[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m259:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 257 |[39m     })[33m;[39m
   [90m 258 |[39m
  [31m[1m>[22m[39m[90m 259 |[39m     it([32m'should handle logout when token has no JTI'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 260 |[39m       mockJwtService[33m.[39mdecode[33m.[39mmockReturnValue({ exp[33m:[39m [33mMath[39m[33m.[39mfloor([33mDate[39m[33m.[39mnow() [33m/[39m [35m1000[39m) [33m+[39m [35m900[39m })[33m;[39m
   [90m 261 |[39m       mockSessionService[33m.[39mdeleteSession[33m.[39mmockResolvedValue(undefined)[33m;[39m
   [90m 262 |[39m       mockPrismaService[33m.[39mrefreshToken[33m.[39mupdateMany[33m.[39mmockResolvedValue({ count[33m:[39m [35m1[39m })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m266:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 264 |[39m       [36mawait[39m service[33m.[39mlogout(userId[33m,[39m accessToken)[33m;[39m
   [90m 265 |[39m
  [31m[1m>[22m[39m[90m 266 |[39m       expect(mockSessionService[33m.[39mblacklistToken)[33m.[39mnot[33m.[39mtoHaveBeenCalled()[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 267 |[39m       expect(mockSessionService[33m.[39mdeleteSession)[33m.[39mtoHaveBeenCalled()[33m;[39m
   [90m 268 |[39m     })[33m;[39m
   [90m 269 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m267:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 265 |[39m
   [90m 266 |[39m       expect(mockSessionService[33m.[39mblacklistToken)[33m.[39mnot[33m.[39mtoHaveBeenCalled()[33m;[39m
  [31m[1m>[22m[39m[90m 267 |[39m       expect(mockSessionService[33m.[39mdeleteSession)[33m.[39mtoHaveBeenCalled()[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 268 |[39m     })[33m;[39m
   [90m 269 |[39m
   [90m 270 |[39m     it([32m'should handle logout when token decode fails'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m270:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 268 |[39m     })[33m;[39m
   [90m 269 |[39m
  [31m[1m>[22m[39m[90m 270 |[39m     it([32m'should handle logout when token decode fails'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 271 |[39m       mockJwtService[33m.[39mdecode[33m.[39mmockReturnValue([36mnull[39m)[33m;[39m
   [90m 272 |[39m       mockSessionService[33m.[39mdeleteSession[33m.[39mmockResolvedValue(undefined)[33m;[39m
   [90m 273 |[39m       mockPrismaService[33m.[39mrefreshToken[33m.[39mupdateMany[33m.[39mmockResolvedValue({ count[33m:[39m [35m1[39m })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m277:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 275 |[39m       [36mawait[39m service[33m.[39mlogout(userId[33m,[39m accessToken)[33m;[39m
   [90m 276 |[39m
  [31m[1m>[22m[39m[90m 277 |[39m       expect(mockSessionService[33m.[39mblacklistToken)[33m.[39mnot[33m.[39mtoHaveBeenCalled()[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 278 |[39m       expect(mockSessionService[33m.[39mdeleteSession)[33m.[39mtoHaveBeenCalled()[33m;[39m
   [90m 279 |[39m     })[33m;[39m
   [90m 280 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m278:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 276 |[39m
   [90m 277 |[39m       expect(mockSessionService[33m.[39mblacklistToken)[33m.[39mnot[33m.[39mtoHaveBeenCalled()[33m;[39m
  [31m[1m>[22m[39m[90m 278 |[39m       expect(mockSessionService[33m.[39mdeleteSession)[33m.[39mtoHaveBeenCalled()[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 279 |[39m     })[33m;[39m
   [90m 280 |[39m
   [90m 281 |[39m     it([32m'should propagate errors during logout'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m281:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 279 |[39m     })[33m;[39m
   [90m 280 |[39m
  [31m[1m>[22m[39m[90m 281 |[39m     it([32m'should propagate errors during logout'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 282 |[39m       [36mconst[39m error [33m=[39m [36mnew[39m [33mError[39m([32m'Database error'[39m)[33m;[39m
   [90m 283 |[39m       mockJwtService[33m.[39mdecode[33m.[39mmockReturnValue({ jti[33m:[39m [32m'jti-123'[39m[33m,[39m exp[33m:[39m [35m123456[39m })[33m;[39m
   [90m 284 |[39m       mockSessionService[33m.[39mblacklistToken[33m.[39mmockResolvedValue(undefined)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m287:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 285 |[39m       mockSessionService[33m.[39mdeleteSession[33m.[39mmockRejectedValue(error)[33m;[39m
   [90m 286 |[39m
  [31m[1m>[22m[39m[90m 287 |[39m       [36mawait[39m expect(service[33m.[39mlogout(userId[33m,[39m accessToken))[33m.[39mrejects[33m.[39mtoThrow([32m'Database error'[39m)[33m;[39m
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 288 |[39m     })[33m;[39m
   [90m 289 |[39m   })[33m;[39m
   [90m 290 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m291:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 289 |[39m   })[33m;[39m
   [90m 290 |[39m
  [31m[1m>[22m[39m[90m 291 |[39m   describe([32m'refreshTokens'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 292 |[39m     [36mconst[39m refreshTokenDto[33m:[39m [33mRefreshTokenDto[39m [33m=[39m {
   [90m 293 |[39m       refreshToken[33m:[39m [32m'valid-refresh-token'[39m[33m,[39m
   [90m 294 |[39m     }[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m306:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 304 |[39m     }[33m;[39m
   [90m 305 |[39m
  [31m[1m>[22m[39m[90m 306 |[39m     it([32m'should successfully refresh tokens'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 307 |[39m       mockPrismaService[33m.[39mrefreshToken[33m.[39mfindUnique[33m.[39mmockResolvedValue(storedToken)[33m;[39m
   [90m 308 |[39m       mockJwtService[33m.[39msign
   [90m 309 |[39m         [33m.[39mmockReturnValueOnce([32m'new-access-token'[39m)[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m317:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 315 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39mrefreshTokens(refreshTokenDto)[33m;[39m
   [90m 316 |[39m
  [31m[1m>[22m[39m[90m 317 |[39m       expect(mockPrismaService[33m.[39mrefreshToken[33m.[39mfindUnique)[33m.[39mtoHaveBeenCalledWith({
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 318 |[39m         where[33m:[39m { token[33m:[39m refreshTokenDto[33m.[39mrefreshToken }[33m,[39m
   [90m 319 |[39m         include[33m:[39m { user[33m:[39m [36mtrue[39m }[33m,[39m
   [90m 320 |[39m       })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m321:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 319 |[39m         include[33m:[39m { user[33m:[39m [36mtrue[39m }[33m,[39m
   [90m 320 |[39m       })[33m;[39m
  [31m[1m>[22m[39m[90m 321 |[39m       expect(result)[33m.[39mtoEqual({
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 322 |[39m         accessToken[33m:[39m [32m'new-access-token'[39m[33m,[39m
   [90m 323 |[39m         refreshToken[33m:[39m [32m'new-refresh-token'[39m[33m,[39m
   [90m 324 |[39m         expiresIn[33m:[39m [35m15[39m [33m*[39m [35m60[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m334:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 332 |[39m     })[33m;[39m
   [90m 333 |[39m
  [31m[1m>[22m[39m[90m 334 |[39m     it([32m'should throw UnauthorizedException when refresh token does not exist'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 335 |[39m       mockPrismaService[33m.[39mrefreshToken[33m.[39mfindUnique[33m.[39mmockResolvedValue([36mnull[39m)[33m;[39m
   [90m 336 |[39m
   [90m 337 |[39m       [36mawait[39m expect(service[33m.[39mrefreshTokens(refreshTokenDto))[33m.[39mrejects[33m.[39mtoThrow([0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m337:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 335 |[39m       mockPrismaService[33m.[39mrefreshToken[33m.[39mfindUnique[33m.[39mmockResolvedValue([36mnull[39m)[33m;[39m
   [90m 336 |[39m
  [31m[1m>[22m[39m[90m 337 |[39m       [36mawait[39m expect(service[33m.[39mrefreshTokens(refreshTokenDto))[33m.[39mrejects[33m.[39mtoThrow(
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 338 |[39m         [33mUnauthorizedException[39m
   [90m 339 |[39m       )[33m;[39m
   [90m 340 |[39m       [36mawait[39m expect(service[33m.[39mrefreshTokens(refreshTokenDto))[33m.[39mrejects[33m.[39mtoThrow([0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m340:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 338 |[39m         [33mUnauthorizedException[39m
   [90m 339 |[39m       )[33m;[39m
  [31m[1m>[22m[39m[90m 340 |[39m       [36mawait[39m expect(service[33m.[39mrefreshTokens(refreshTokenDto))[33m.[39mrejects[33m.[39mtoThrow(
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 341 |[39m         [32m'Invalid refresh token'[39m
   [90m 342 |[39m       )[33m;[39m
   [90m 343 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m345:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 343 |[39m     })[33m;[39m
   [90m 344 |[39m
  [31m[1m>[22m[39m[90m 345 |[39m     it([32m'should throw UnauthorizedException when refresh token is revoked'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 346 |[39m       mockPrismaService[33m.[39mrefreshToken[33m.[39mfindUnique[33m.[39mmockResolvedValue({
   [90m 347 |[39m         [33m...[39mstoredToken[33m,[39m
   [90m 348 |[39m         isRevoked[33m:[39m [36mtrue[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m351:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 349 |[39m       })[33m;[39m
   [90m 350 |[39m
  [31m[1m>[22m[39m[90m 351 |[39m       [36mawait[39m expect(service[33m.[39mrefreshTokens(refreshTokenDto))[33m.[39mrejects[33m.[39mtoThrow(
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 352 |[39m         [33mUnauthorizedException[39m
   [90m 353 |[39m       )[33m;[39m
   [90m 354 |[39m       [36mawait[39m expect(service[33m.[39mrefreshTokens(refreshTokenDto))[33m.[39mrejects[33m.[39mtoThrow([0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m354:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 352 |[39m         [33mUnauthorizedException[39m
   [90m 353 |[39m       )[33m;[39m
  [31m[1m>[22m[39m[90m 354 |[39m       [36mawait[39m expect(service[33m.[39mrefreshTokens(refreshTokenDto))[33m.[39mrejects[33m.[39mtoThrow(
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 355 |[39m         [32m'Refresh token has been revoked'[39m
   [90m 356 |[39m       )[33m;[39m
   [90m 357 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m359:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 357 |[39m     })[33m;[39m
   [90m 358 |[39m
  [31m[1m>[22m[39m[90m 359 |[39m     it([32m'should throw UnauthorizedException when refresh token is expired'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 360 |[39m       mockPrismaService[33m.[39mrefreshToken[33m.[39mfindUnique[33m.[39mmockResolvedValue({
   [90m 361 |[39m         [33m...[39mstoredToken[33m,[39m
   [90m 362 |[39m         expiresAt[33m:[39m [36mnew[39m [33mDate[39m([33mDate[39m[33m.[39mnow() [33m-[39m [35m1000[39m)[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m365:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 363 |[39m       })[33m;[39m
   [90m 364 |[39m
  [31m[1m>[22m[39m[90m 365 |[39m       [36mawait[39m expect(service[33m.[39mrefreshTokens(refreshTokenDto))[33m.[39mrejects[33m.[39mtoThrow(
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 366 |[39m         [33mUnauthorizedException[39m
   [90m 367 |[39m       )[33m;[39m
   [90m 368 |[39m       [36mawait[39m expect(service[33m.[39mrefreshTokens(refreshTokenDto))[33m.[39mrejects[33m.[39mtoThrow([0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m368:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 366 |[39m         [33mUnauthorizedException[39m
   [90m 367 |[39m       )[33m;[39m
  [31m[1m>[22m[39m[90m 368 |[39m       [36mawait[39m expect(service[33m.[39mrefreshTokens(refreshTokenDto))[33m.[39mrejects[33m.[39mtoThrow(
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 369 |[39m         [32m'Refresh token has expired'[39m
   [90m 370 |[39m       )[33m;[39m
   [90m 371 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m373:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 371 |[39m     })[33m;[39m
   [90m 372 |[39m
  [31m[1m>[22m[39m[90m 373 |[39m     it([32m'should throw UnauthorizedException when user is inactive'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 374 |[39m       mockPrismaService[33m.[39mrefreshToken[33m.[39mfindUnique[33m.[39mmockResolvedValue({
   [90m 375 |[39m         [33m...[39mstoredToken[33m,[39m
   [90m 376 |[39m         user[33m:[39m { [33m...[39mmockUser[33m,[39m isActive[33m:[39m [36mfalse[39m }[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m379:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 377 |[39m       })[33m;[39m
   [90m 378 |[39m
  [31m[1m>[22m[39m[90m 379 |[39m       [36mawait[39m expect(service[33m.[39mrefreshTokens(refreshTokenDto))[33m.[39mrejects[33m.[39mtoThrow(
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 380 |[39m         [33mUnauthorizedException[39m
   [90m 381 |[39m       )[33m;[39m
   [90m 382 |[39m       [36mawait[39m expect(service[33m.[39mrefreshTokens(refreshTokenDto))[33m.[39mrejects[33m.[39mtoThrow([0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m382:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 380 |[39m         [33mUnauthorizedException[39m
   [90m 381 |[39m       )[33m;[39m
  [31m[1m>[22m[39m[90m 382 |[39m       [36mawait[39m expect(service[33m.[39mrefreshTokens(refreshTokenDto))[33m.[39mrejects[33m.[39mtoThrow(
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 383 |[39m         [32m'User account is inactive'[39m
   [90m 384 |[39m       )[33m;[39m
   [90m 385 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m387:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 385 |[39m     })[33m;[39m
   [90m 386 |[39m
  [31m[1m>[22m[39m[90m 387 |[39m     it([32m'should revoke old refresh token (token rotation)'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 388 |[39m       mockPrismaService[33m.[39mrefreshToken[33m.[39mfindUnique[33m.[39mmockResolvedValue(storedToken)[33m;[39m
   [90m 389 |[39m       mockJwtService[33m.[39msign
   [90m 390 |[39m         [33m.[39mmockReturnValueOnce([32m'new-access-token'[39m)[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m398:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 396 |[39m       [36mawait[39m service[33m.[39mrefreshTokens(refreshTokenDto)[33m;[39m
   [90m 397 |[39m
  [31m[1m>[22m[39m[90m 398 |[39m       expect(mockPrismaService[33m.[39mrefreshToken[33m.[39mupdate)[33m.[39mtoHaveBeenCalledWith({
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 399 |[39m         where[33m:[39m { id[33m:[39m storedToken[33m.[39mid }[33m,[39m
   [90m 400 |[39m         data[33m:[39m { isRevoked[33m:[39m [36mtrue[39m }[33m,[39m
   [90m 401 |[39m       })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m404:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 402 |[39m     })[33m;[39m
   [90m 403 |[39m
  [31m[1m>[22m[39m[90m 404 |[39m     it([32m'should store new refresh token'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 405 |[39m       mockPrismaService[33m.[39mrefreshToken[33m.[39mfindUnique[33m.[39mmockResolvedValue(storedToken)[33m;[39m
   [90m 406 |[39m       mockJwtService[33m.[39msign
   [90m 407 |[39m         [33m.[39mmockReturnValueOnce([32m'new-access-token'[39m)[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m415:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 413 |[39m       [36mawait[39m service[33m.[39mrefreshTokens(refreshTokenDto)[33m;[39m
   [90m 414 |[39m
  [31m[1m>[22m[39m[90m 415 |[39m       expect(mockPrismaService[33m.[39mrefreshToken[33m.[39mcreate)[33m.[39mtoHaveBeenCalledWith({
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 416 |[39m         data[33m:[39m {
   [90m 417 |[39m           userId[33m:[39m mockUser[33m.[39mid[33m,[39m
   [90m 418 |[39m           token[33m:[39m [32m'new-refresh-token'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m419:22[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 417 |[39m           userId[33m:[39m mockUser[33m.[39mid[33m,[39m
   [90m 418 |[39m           token[33m:[39m [32m'new-refresh-token'[39m[33m,[39m
  [31m[1m>[22m[39m[90m 419 |[39m           expiresAt[33m:[39m expect[33m.[39many([33mDate[39m)[33m,[39m
   [90m     |[39m                      [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 420 |[39m         }[33m,[39m
   [90m 421 |[39m       })[33m;[39m
   [90m 422 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m424:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 422 |[39m     })[33m;[39m
   [90m 423 |[39m
  [31m[1m>[22m[39m[90m 424 |[39m     it([32m'should update session in Redis'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 425 |[39m       mockPrismaService[33m.[39mrefreshToken[33m.[39mfindUnique[33m.[39mmockResolvedValue(storedToken)[33m;[39m
   [90m 426 |[39m       mockJwtService[33m.[39msign
   [90m 427 |[39m         [33m.[39mmockReturnValueOnce([32m'new-access-token'[39m)[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m435:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 433 |[39m       [36mawait[39m service[33m.[39mrefreshTokens(refreshTokenDto)[33m;[39m
   [90m 434 |[39m
  [31m[1m>[22m[39m[90m 435 |[39m       expect(mockSessionService[33m.[39mcreateSession)[33m.[39mtoHaveBeenCalledWith({
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 436 |[39m         userId[33m:[39m mockUser[33m.[39mid[33m,[39m
   [90m 437 |[39m         accessToken[33m:[39m [32m'new-access-token'[39m[33m,[39m
   [90m 438 |[39m         refreshToken[33m:[39m [32m'new-refresh-token'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m439:20[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 437 |[39m         accessToken[33m:[39m [32m'new-access-token'[39m[33m,[39m
   [90m 438 |[39m         refreshToken[33m:[39m [32m'new-refresh-token'[39m[33m,[39m
  [31m[1m>[22m[39m[90m 439 |[39m         createdAt[33m:[39m expect[33m.[39many([33mNumber[39m)[33m,[39m
   [90m     |[39m                    [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 440 |[39m         expiresAt[33m:[39m expect[33m.[39many([33mNumber[39m)[33m,[39m
   [90m 441 |[39m         metadata[33m:[39m {}[33m,[39m
   [90m 442 |[39m       })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m440:20[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 438 |[39m         refreshToken[33m:[39m [32m'new-refresh-token'[39m[33m,[39m
   [90m 439 |[39m         createdAt[33m:[39m expect[33m.[39many([33mNumber[39m)[33m,[39m
  [31m[1m>[22m[39m[90m 440 |[39m         expiresAt[33m:[39m expect[33m.[39many([33mNumber[39m)[33m,[39m
   [90m     |[39m                    [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 441 |[39m         metadata[33m:[39m {}[33m,[39m
   [90m 442 |[39m       })[33m;[39m
   [90m 443 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m446:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 444 |[39m   })[33m;[39m
   [90m 445 |[39m
  [31m[1m>[22m[39m[90m 446 |[39m   describe([32m'validateUser'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 447 |[39m     it([32m'should return user data when user exists and is active'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m 448 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockResolvedValue(mockUser)[33m;[39m
   [90m 449 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m447:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 445 |[39m
   [90m 446 |[39m   describe([32m'validateUser'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 447 |[39m     it([32m'should return user data when user exists and is active'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 448 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockResolvedValue(mockUser)[33m;[39m
   [90m 449 |[39m
   [90m 450 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39mvalidateUser(mockUser[33m.[39mid)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m452:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 450 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39mvalidateUser(mockUser[33m.[39mid)[33m;[39m
   [90m 451 |[39m
  [31m[1m>[22m[39m[90m 452 |[39m       expect(mockPrismaService[33m.[39muser[33m.[39mfindUnique)[33m.[39mtoHaveBeenCalledWith({
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 453 |[39m         where[33m:[39m { id[33m:[39m mockUser[33m.[39mid }[33m,[39m
   [90m 454 |[39m         select[33m:[39m {
   [90m 455 |[39m           id[33m:[39m [36mtrue[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m462:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 460 |[39m         }[33m,[39m
   [90m 461 |[39m       })[33m;[39m
  [31m[1m>[22m[39m[90m 462 |[39m       expect(result)[33m.[39mtoEqual({
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 463 |[39m         id[33m:[39m mockUser[33m.[39mid[33m,[39m
   [90m 464 |[39m         email[33m:[39m mockUser[33m.[39memail[33m,[39m
   [90m 465 |[39m         name[33m:[39m mockUser[33m.[39mname[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m470:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 468 |[39m     })[33m;[39m
   [90m 469 |[39m
  [31m[1m>[22m[39m[90m 470 |[39m     it([32m'should throw UnauthorizedException when user does not exist'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 471 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockResolvedValue([36mnull[39m)[33m;[39m
   [90m 472 |[39m
   [90m 473 |[39m       [36mawait[39m expect(service[33m.[39mvalidateUser([32m'non-existent-id'[39m))[33m.[39mrejects[33m.[39mtoThrow([0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m473:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 471 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockResolvedValue([36mnull[39m)[33m;[39m
   [90m 472 |[39m
  [31m[1m>[22m[39m[90m 473 |[39m       [36mawait[39m expect(service[33m.[39mvalidateUser([32m'non-existent-id'[39m))[33m.[39mrejects[33m.[39mtoThrow(
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 474 |[39m         [33mUnauthorizedException[39m
   [90m 475 |[39m       )[33m;[39m
   [90m 476 |[39m       [36mawait[39m expect(service[33m.[39mvalidateUser([32m'non-existent-id'[39m))[33m.[39mrejects[33m.[39mtoThrow([0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m476:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 474 |[39m         [33mUnauthorizedException[39m
   [90m 475 |[39m       )[33m;[39m
  [31m[1m>[22m[39m[90m 476 |[39m       [36mawait[39m expect(service[33m.[39mvalidateUser([32m'non-existent-id'[39m))[33m.[39mrejects[33m.[39mtoThrow(
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 477 |[39m         [32m'User not found or inactive'[39m
   [90m 478 |[39m       )[33m;[39m
   [90m 479 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m481:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 479 |[39m     })[33m;[39m
   [90m 480 |[39m
  [31m[1m>[22m[39m[90m 481 |[39m     it([32m'should throw UnauthorizedException when user is inactive'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 482 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockResolvedValue({
   [90m 483 |[39m         [33m...[39mmockUser[33m,[39m
   [90m 484 |[39m         isActive[33m:[39m [36mfalse[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m487:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 485 |[39m       })[33m;[39m
   [90m 486 |[39m
  [31m[1m>[22m[39m[90m 487 |[39m       [36mawait[39m expect(service[33m.[39mvalidateUser(mockUser[33m.[39mid))[33m.[39mrejects[33m.[39mtoThrow([33mUnauthorizedException[39m)[33m;[39m
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 488 |[39m       [36mawait[39m expect(service[33m.[39mvalidateUser(mockUser[33m.[39mid))[33m.[39mrejects[33m.[39mtoThrow(
   [90m 489 |[39m         [32m'User not found or inactive'[39m
   [90m 490 |[39m       )[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m488:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 486 |[39m
   [90m 487 |[39m       [36mawait[39m expect(service[33m.[39mvalidateUser(mockUser[33m.[39mid))[33m.[39mrejects[33m.[39mtoThrow([33mUnauthorizedException[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 488 |[39m       [36mawait[39m expect(service[33m.[39mvalidateUser(mockUser[33m.[39mid))[33m.[39mrejects[33m.[39mtoThrow(
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 489 |[39m         [32m'User not found or inactive'[39m
   [90m 490 |[39m       )[33m;[39m
   [90m 491 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m494:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 492 |[39m   })[33m;[39m
   [90m 493 |[39m
  [31m[1m>[22m[39m[90m 494 |[39m   describe([32m'edge cases and error handling'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 495 |[39m     it([32m'should handle concurrent login attempts'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m 496 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockResolvedValue(mockUser)[33m;[39m
   [90m 497 |[39m       mockHashService[33m.[39mcompare[33m.[39mmockResolvedValue([36mtrue[39m)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m495:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 493 |[39m
   [90m 494 |[39m   describe([32m'edge cases and error handling'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 495 |[39m     it([32m'should handle concurrent login attempts'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 496 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockResolvedValue(mockUser)[33m;[39m
   [90m 497 |[39m       mockHashService[33m.[39mcompare[33m.[39mmockResolvedValue([36mtrue[39m)[33m;[39m
   [90m 498 |[39m       mockJwtService[33m.[39msign[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m510:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 508 |[39m       [36mconst[39m results [33m=[39m [36mawait[39m [33mPromise[39m[33m.[39mall(logins)[33m;[39m
   [90m 509 |[39m
  [31m[1m>[22m[39m[90m 510 |[39m       expect(results)[33m.[39mtoHaveLength([35m5[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 511 |[39m       results[33m.[39mforEach((result) [33m=>[39m {
   [90m 512 |[39m         expect(result[33m.[39maccessToken)[33m.[39mtoBeDefined()[33m;[39m
   [90m 513 |[39m         expect(result[33m.[39mrefreshToken)[33m.[39mtoBeDefined()[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m512:9[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 510 |[39m       expect(results)[33m.[39mtoHaveLength([35m5[39m)[33m;[39m
   [90m 511 |[39m       results[33m.[39mforEach((result) [33m=>[39m {
  [31m[1m>[22m[39m[90m 512 |[39m         expect(result[33m.[39maccessToken)[33m.[39mtoBeDefined()[33m;[39m
   [90m     |[39m         [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 513 |[39m         expect(result[33m.[39mrefreshToken)[33m.[39mtoBeDefined()[33m;[39m
   [90m 514 |[39m       })[33m;[39m
   [90m 515 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m513:9[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 511 |[39m       results[33m.[39mforEach((result) [33m=>[39m {
   [90m 512 |[39m         expect(result[33m.[39maccessToken)[33m.[39mtoBeDefined()[33m;[39m
  [31m[1m>[22m[39m[90m 513 |[39m         expect(result[33m.[39mrefreshToken)[33m.[39mtoBeDefined()[33m;[39m
   [90m     |[39m         [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 514 |[39m       })[33m;[39m
   [90m 515 |[39m     })[33m;[39m
   [90m 516 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m517:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 515 |[39m     })[33m;[39m
   [90m 516 |[39m
  [31m[1m>[22m[39m[90m 517 |[39m     it([32m'should handle database errors during login'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 518 |[39m       [36mconst[39m loginDto[33m:[39m [33mLoginDto[39m [33m=[39m { email[33m:[39m [32m'test@example.com'[39m[33m,[39m password[33m:[39m [32m'password123'[39m }[33m;[39m
   [90m 519 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockRejectedValue([36mnew[39m [33mError[39m([32m'DB connection lost'[39m))[33m;[39m
   [90m 520 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/auth.service.spec.ts:[32m[1m521:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 519 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockRejectedValue([36mnew[39m [33mError[39m([32m'DB connection lost'[39m))[33m;[39m
   [90m 520 |[39m
  [31m[1m>[22m[39m[90m 521 |[39m       [36mawait[39m expect(service[33m.[39mlogin(loginDto))[33m.[39mrejects[33m.[39mtoThrow([32m'DB connection lost'[39m)[33m;[39m
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 522 |[39m     })[33m;[39m
   [90m 523 |[39m   })[33m;[39m
   [90m 524 |[39m })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m6:1[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 4 |[39m
   [90m 5 |[39m [90m// Mock bcrypt to avoid slow actual hashing in tests[39m
  [31m[1m>[22m[39m[90m 6 |[39m jest[33m.[39mmock([32m'bcrypt'[39m)[33m;[39m
   [90m   |[39m [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 7 |[39m
   [90m 8 |[39m describe([32m'HashService'[39m[33m,[39m () [33m=>[39m {
   [90m 9 |[39m   [36mlet[39m service[33m:[39m [33mHashService[39m[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m8:1[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m  6 |[39m jest[33m.[39mmock([32m'bcrypt'[39m)[33m;[39m
   [90m  7 |[39m
  [31m[1m>[22m[39m[90m  8 |[39m describe([32m'HashService'[39m[33m,[39m () [33m=>[39m {
   [90m    |[39m [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m  9 |[39m   [36mlet[39m service[33m:[39m [33mHashService[39m[33m;[39m
   [90m 10 |[39m   [36mconst[39m mockedBcrypt [33m=[39m bcrypt [36mas[39m jest[33m.[39m[33mMocked[39m[33m<[39m[36mtypeof[39m bcrypt[33m>[39m[33m;[39m
   [90m 11 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m10:34[22m[39m[1m[39m[22m
[90mTS2503: [39mCannot find namespace 'jest'.
  [0m [90m  8 |[39m describe([32m'HashService'[39m[33m,[39m () [33m=>[39m {
   [90m  9 |[39m   [36mlet[39m service[33m:[39m [33mHashService[39m[33m;[39m
  [31m[1m>[22m[39m[90m 10 |[39m   [36mconst[39m mockedBcrypt [33m=[39m bcrypt [36mas[39m jest[33m.[39m[33mMocked[39m[33m<[39m[36mtypeof[39m bcrypt[33m>[39m[33m;[39m
   [90m    |[39m                                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 11 |[39m
   [90m 12 |[39m   beforeEach([36masync[39m () [33m=>[39m {
   [90m 13 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m12:3[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'beforeEach'.
  [0m [90m 10 |[39m   [36mconst[39m mockedBcrypt [33m=[39m bcrypt [36mas[39m jest[33m.[39m[33mMocked[39m[33m<[39m[36mtypeof[39m bcrypt[33m>[39m[33m;[39m
   [90m 11 |[39m
  [31m[1m>[22m[39m[90m 12 |[39m   beforeEach([36masync[39m () [33m=>[39m {
   [90m    |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 13 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
   [90m 14 |[39m       providers[33m:[39m [[33mHashService[39m][33m,[39m
   [90m 15 |[39m     })[33m.[39mcompile()[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m18:5[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 16 |[39m
   [90m 17 |[39m     service [33m=[39m module[33m.[39m[36mget[39m[33m<[39m[33mHashService[39m[33m>[39m([33mHashService[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 18 |[39m     jest[33m.[39mclearAllMocks()[33m;[39m
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 19 |[39m   })[33m;[39m
   [90m 20 |[39m
   [90m 21 |[39m   afterEach(() [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m21:3[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'afterEach'.
  [0m [90m 19 |[39m   })[33m;[39m
   [90m 20 |[39m
  [31m[1m>[22m[39m[90m 21 |[39m   afterEach(() [33m=>[39m {
   [90m    |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 22 |[39m     jest[33m.[39mresetAllMocks()[33m;[39m
   [90m 23 |[39m   })[33m;[39m
   [90m 24 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m22:5[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 20 |[39m
   [90m 21 |[39m   afterEach(() [33m=>[39m {
  [31m[1m>[22m[39m[90m 22 |[39m     jest[33m.[39mresetAllMocks()[33m;[39m
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 23 |[39m   })[33m;[39m
   [90m 24 |[39m
   [90m 25 |[39m   describe([32m'hash'[39m[33m,[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m25:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 23 |[39m   })[33m;[39m
   [90m 24 |[39m
  [31m[1m>[22m[39m[90m 25 |[39m   describe([32m'hash'[39m[33m,[39m () [33m=>[39m {
   [90m    |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 26 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m 27 |[39m       expect(service)[33m.[39mtoBeDefined()[33m;[39m
   [90m 28 |[39m       expect(service[33m.[39mhash)[33m.[39mtoBeDefined()[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m26:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 24 |[39m
   [90m 25 |[39m   describe([32m'hash'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 26 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 27 |[39m       expect(service)[33m.[39mtoBeDefined()[33m;[39m
   [90m 28 |[39m       expect(service[33m.[39mhash)[33m.[39mtoBeDefined()[33m;[39m
   [90m 29 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m27:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 25 |[39m   describe([32m'hash'[39m[33m,[39m () [33m=>[39m {
   [90m 26 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 27 |[39m       expect(service)[33m.[39mtoBeDefined()[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 28 |[39m       expect(service[33m.[39mhash)[33m.[39mtoBeDefined()[33m;[39m
   [90m 29 |[39m     })[33m;[39m
   [90m 30 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m28:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 26 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m 27 |[39m       expect(service)[33m.[39mtoBeDefined()[33m;[39m
  [31m[1m>[22m[39m[90m 28 |[39m       expect(service[33m.[39mhash)[33m.[39mtoBeDefined()[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 29 |[39m     })[33m;[39m
   [90m 30 |[39m
   [90m 31 |[39m     it([32m'should hash a password using bcrypt with 12 salt rounds'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m31:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 29 |[39m     })[33m;[39m
   [90m 30 |[39m
  [31m[1m>[22m[39m[90m 31 |[39m     it([32m'should hash a password using bcrypt with 12 salt rounds'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 32 |[39m       [36mconst[39m password [33m=[39m [32m'testPassword123'[39m[33m;[39m
   [90m 33 |[39m       [36mconst[39m hashedPassword [33m=[39m [32m'$2b$12$hashedPasswordExample'[39m[33m;[39m
   [90m 34 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m39:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 37 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39mhash(password)[33m;[39m
   [90m 38 |[39m
  [31m[1m>[22m[39m[90m 39 |[39m       expect(mockedBcrypt[33m.[39mhash)[33m.[39mtoHaveBeenCalledWith(password[33m,[39m [35m12[39m)[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 40 |[39m       expect(mockedBcrypt[33m.[39mhash)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
   [90m 41 |[39m       expect(result)[33m.[39mtoBe(hashedPassword)[33m;[39m
   [90m 42 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m40:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 38 |[39m
   [90m 39 |[39m       expect(mockedBcrypt[33m.[39mhash)[33m.[39mtoHaveBeenCalledWith(password[33m,[39m [35m12[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 40 |[39m       expect(mockedBcrypt[33m.[39mhash)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 41 |[39m       expect(result)[33m.[39mtoBe(hashedPassword)[33m;[39m
   [90m 42 |[39m     })[33m;[39m
   [90m 43 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m41:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 39 |[39m       expect(mockedBcrypt[33m.[39mhash)[33m.[39mtoHaveBeenCalledWith(password[33m,[39m [35m12[39m)[33m;[39m
   [90m 40 |[39m       expect(mockedBcrypt[33m.[39mhash)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 41 |[39m       expect(result)[33m.[39mtoBe(hashedPassword)[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 42 |[39m     })[33m;[39m
   [90m 43 |[39m
   [90m 44 |[39m     it([32m'should handle different password inputs'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m44:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 42 |[39m     })[33m;[39m
   [90m 43 |[39m
  [31m[1m>[22m[39m[90m 44 |[39m     it([32m'should handle different password inputs'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 45 |[39m       [36mconst[39m passwords [33m=[39m [
   [90m 46 |[39m         [32m'short'[39m[33m,[39m
   [90m 47 |[39m         [32m'a very long password with many characters and symbols !@#$%^&*()'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m59:9[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 57 |[39m         [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39mhash(password)[33m;[39m
   [90m 58 |[39m
  [31m[1m>[22m[39m[90m 59 |[39m         expect(result)[33m.[39mtoBe(hash)[33m;[39m
   [90m    |[39m         [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 60 |[39m       }
   [90m 61 |[39m     })[33m;[39m
   [90m 62 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m63:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 61 |[39m     })[33m;[39m
   [90m 62 |[39m
  [31m[1m>[22m[39m[90m 63 |[39m     it([32m'should propagate bcrypt errors'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 64 |[39m       [36mconst[39m password [33m=[39m [32m'testPassword'[39m[33m;[39m
   [90m 65 |[39m       [36mconst[39m error [33m=[39m [36mnew[39m [33mError[39m([32m'Bcrypt hashing failed'[39m)[33m;[39m
   [90m 66 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m69:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 67 |[39m       mockedBcrypt[33m.[39mhash[33m.[39mmockRejectedValue(error [36mas[39m never)[33m;[39m
   [90m 68 |[39m
  [31m[1m>[22m[39m[90m 69 |[39m       [36mawait[39m expect(service[33m.[39mhash(password))[33m.[39mrejects[33m.[39mtoThrow([32m'Bcrypt hashing failed'[39m)[33m;[39m
   [90m    |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 70 |[39m     })[33m;[39m
   [90m 71 |[39m   })[33m;[39m
   [90m 72 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m73:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 71 |[39m   })[33m;[39m
   [90m 72 |[39m
  [31m[1m>[22m[39m[90m 73 |[39m   describe([32m'compare'[39m[33m,[39m () [33m=>[39m {
   [90m    |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 74 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m 75 |[39m       expect(service[33m.[39mcompare)[33m.[39mtoBeDefined()[33m;[39m
   [90m 76 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m74:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 72 |[39m
   [90m 73 |[39m   describe([32m'compare'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 74 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 75 |[39m       expect(service[33m.[39mcompare)[33m.[39mtoBeDefined()[33m;[39m
   [90m 76 |[39m     })[33m;[39m
   [90m 77 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m75:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 73 |[39m   describe([32m'compare'[39m[33m,[39m () [33m=>[39m {
   [90m 74 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 75 |[39m       expect(service[33m.[39mcompare)[33m.[39mtoBeDefined()[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 76 |[39m     })[33m;[39m
   [90m 77 |[39m
   [90m 78 |[39m     it([32m'should return true when password matches hash'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m78:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 76 |[39m     })[33m;[39m
   [90m 77 |[39m
  [31m[1m>[22m[39m[90m 78 |[39m     it([32m'should return true when password matches hash'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 79 |[39m       [36mconst[39m password [33m=[39m [32m'testPassword123'[39m[33m;[39m
   [90m 80 |[39m       [36mconst[39m hash [33m=[39m [32m'$2b$12$hashedPasswordExample'[39m[33m;[39m
   [90m 81 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m86:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 84 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39mcompare(password[33m,[39m hash)[33m;[39m
   [90m 85 |[39m
  [31m[1m>[22m[39m[90m 86 |[39m       expect(mockedBcrypt[33m.[39mcompare)[33m.[39mtoHaveBeenCalledWith(password[33m,[39m hash)[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 87 |[39m       expect(mockedBcrypt[33m.[39mcompare)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
   [90m 88 |[39m       expect(result)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
   [90m 89 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m87:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 85 |[39m
   [90m 86 |[39m       expect(mockedBcrypt[33m.[39mcompare)[33m.[39mtoHaveBeenCalledWith(password[33m,[39m hash)[33m;[39m
  [31m[1m>[22m[39m[90m 87 |[39m       expect(mockedBcrypt[33m.[39mcompare)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 88 |[39m       expect(result)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
   [90m 89 |[39m     })[33m;[39m
   [90m 90 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m88:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 86 |[39m       expect(mockedBcrypt[33m.[39mcompare)[33m.[39mtoHaveBeenCalledWith(password[33m,[39m hash)[33m;[39m
   [90m 87 |[39m       expect(mockedBcrypt[33m.[39mcompare)[33m.[39mtoHaveBeenCalledTimes([35m1[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 88 |[39m       expect(result)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 89 |[39m     })[33m;[39m
   [90m 90 |[39m
   [90m 91 |[39m     it([32m'should return false when password does not match hash'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m91:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 89 |[39m     })[33m;[39m
   [90m 90 |[39m
  [31m[1m>[22m[39m[90m 91 |[39m     it([32m'should return false when password does not match hash'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 92 |[39m       [36mconst[39m password [33m=[39m [32m'wrongPassword'[39m[33m;[39m
   [90m 93 |[39m       [36mconst[39m hash [33m=[39m [32m'$2b$12$hashedPasswordExample'[39m[33m;[39m
   [90m 94 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m99:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m  97 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39mcompare(password[33m,[39m hash)[33m;[39m
   [90m  98 |[39m
  [31m[1m>[22m[39m[90m  99 |[39m       expect(mockedBcrypt[33m.[39mcompare)[33m.[39mtoHaveBeenCalledWith(password[33m,[39m hash)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 100 |[39m       expect(result)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
   [90m 101 |[39m     })[33m;[39m
   [90m 102 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m100:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m  98 |[39m
   [90m  99 |[39m       expect(mockedBcrypt[33m.[39mcompare)[33m.[39mtoHaveBeenCalledWith(password[33m,[39m hash)[33m;[39m
  [31m[1m>[22m[39m[90m 100 |[39m       expect(result)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 101 |[39m     })[33m;[39m
   [90m 102 |[39m
   [90m 103 |[39m     it([32m'should handle empty password'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m103:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 101 |[39m     })[33m;[39m
   [90m 102 |[39m
  [31m[1m>[22m[39m[90m 103 |[39m     it([32m'should handle empty password'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 104 |[39m       [36mconst[39m password [33m=[39m [32m''[39m[33m;[39m
   [90m 105 |[39m       [36mconst[39m hash [33m=[39m [32m'$2b$12$hashedPasswordExample'[39m[33m;[39m
   [90m 106 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m111:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 109 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39mcompare(password[33m,[39m hash)[33m;[39m
   [90m 110 |[39m
  [31m[1m>[22m[39m[90m 111 |[39m       expect(result)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 112 |[39m     })[33m;[39m
   [90m 113 |[39m
   [90m 114 |[39m     it([32m'should handle case sensitivity correctly'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m114:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 112 |[39m     })[33m;[39m
   [90m 113 |[39m
  [31m[1m>[22m[39m[90m 114 |[39m     it([32m'should handle case sensitivity correctly'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 115 |[39m       [36mconst[39m password [33m=[39m [32m'TestPassword'[39m[33m;[39m
   [90m 116 |[39m       [36mconst[39m hash [33m=[39m [32m'$2b$12$hashedPasswordExample'[39m[33m;[39m
   [90m 117 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m121:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 119 |[39m       mockedBcrypt[33m.[39mcompare[33m.[39mmockResolvedValue([36mtrue[39m [36mas[39m never)[33m;[39m
   [90m 120 |[39m       [36mconst[39m resultCorrect [33m=[39m [36mawait[39m service[33m.[39mcompare(password[33m,[39m hash)[33m;[39m
  [31m[1m>[22m[39m[90m 121 |[39m       expect(resultCorrect)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 122 |[39m
   [90m 123 |[39m       [90m// Second call - wrong case[39m
   [90m 124 |[39m       mockedBcrypt[33m.[39mcompare[33m.[39mmockResolvedValue([36mfalse[39m [36mas[39m never)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m126:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 124 |[39m       mockedBcrypt[33m.[39mcompare[33m.[39mmockResolvedValue([36mfalse[39m [36mas[39m never)[33m;[39m
   [90m 125 |[39m       [36mconst[39m resultWrong [33m=[39m [36mawait[39m service[33m.[39mcompare([32m'testpassword'[39m[33m,[39m hash)[33m;[39m
  [31m[1m>[22m[39m[90m 126 |[39m       expect(resultWrong)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 127 |[39m     })[33m;[39m
   [90m 128 |[39m
   [90m 129 |[39m     it([32m'should propagate bcrypt errors'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m129:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 127 |[39m     })[33m;[39m
   [90m 128 |[39m
  [31m[1m>[22m[39m[90m 129 |[39m     it([32m'should propagate bcrypt errors'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 130 |[39m       [36mconst[39m password [33m=[39m [32m'testPassword'[39m[33m;[39m
   [90m 131 |[39m       [36mconst[39m hash [33m=[39m [32m'$2b$12$hashedPasswordExample'[39m[33m;[39m
   [90m 132 |[39m       [36mconst[39m error [33m=[39m [36mnew[39m [33mError[39m([32m'Bcrypt compare failed'[39m)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m136:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 134 |[39m       mockedBcrypt[33m.[39mcompare[33m.[39mmockRejectedValue(error [36mas[39m never)[33m;[39m
   [90m 135 |[39m
  [31m[1m>[22m[39m[90m 136 |[39m       [36mawait[39m expect(service[33m.[39mcompare(password[33m,[39m hash))[33m.[39mrejects[33m.[39mtoThrow(
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 137 |[39m         [32m'Bcrypt compare failed'[39m
   [90m 138 |[39m       )[33m;[39m
   [90m 139 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m141:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 139 |[39m     })[33m;[39m
   [90m 140 |[39m
  [31m[1m>[22m[39m[90m 141 |[39m     it([32m'should handle invalid hash format gracefully'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 142 |[39m       [36mconst[39m password [33m=[39m [32m'testPassword'[39m[33m;[39m
   [90m 143 |[39m       [36mconst[39m invalidHash [33m=[39m [32m'not-a-valid-hash'[39m[33m;[39m
   [90m 144 |[39m       [36mconst[39m error [33m=[39m [36mnew[39m [33mError[39m([32m'Invalid hash format'[39m)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m148:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 146 |[39m       mockedBcrypt[33m.[39mcompare[33m.[39mmockRejectedValue(error [36mas[39m never)[33m;[39m
   [90m 147 |[39m
  [31m[1m>[22m[39m[90m 148 |[39m       [36mawait[39m expect(service[33m.[39mcompare(password[33m,[39m invalidHash))[33m.[39mrejects[33m.[39mtoThrow(
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 149 |[39m         [32m'Invalid hash format'[39m
   [90m 150 |[39m       )[33m;[39m
   [90m 151 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m154:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 152 |[39m   })[33m;[39m
   [90m 153 |[39m
  [31m[1m>[22m[39m[90m 154 |[39m   describe([32m'integration scenarios'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 155 |[39m     it([32m'should handle rapid successive hashing requests'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m 156 |[39m       [36mconst[39m passwords [33m=[39m [33mArray[39m[33m.[39m[36mfrom[39m({ length[33m:[39m [35m10[39m }[33m,[39m (_[33m,[39m i) [33m=>[39m [32m`password${i}`[39m)[33m;[39m
   [90m 157 |[39m       [36mconst[39m hashes [33m=[39m passwords[33m.[39mmap((_[33m,[39m i) [33m=>[39m [32m`$2b$12$hash${i}`[39m)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m155:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 153 |[39m
   [90m 154 |[39m   describe([32m'integration scenarios'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 155 |[39m     it([32m'should handle rapid successive hashing requests'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 156 |[39m       [36mconst[39m passwords [33m=[39m [33mArray[39m[33m.[39m[36mfrom[39m({ length[33m:[39m [35m10[39m }[33m,[39m (_[33m,[39m i) [33m=>[39m [32m`password${i}`[39m)[33m;[39m
   [90m 157 |[39m       [36mconst[39m hashes [33m=[39m passwords[33m.[39mmap((_[33m,[39m i) [33m=>[39m [32m`$2b$12$hash${i}`[39m)[33m;[39m
   [90m 158 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m165:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 163 |[39m       [36mconst[39m results [33m=[39m [36mawait[39m [33mPromise[39m[33m.[39mall(passwords[33m.[39mmap((pwd) [33m=>[39m service[33m.[39mhash(pwd)))[33m;[39m
   [90m 164 |[39m
  [31m[1m>[22m[39m[90m 165 |[39m       expect(results)[33m.[39mtoEqual(hashes)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 166 |[39m       expect(mockedBcrypt[33m.[39mhash)[33m.[39mtoHaveBeenCalledTimes([35m10[39m)[33m;[39m
   [90m 167 |[39m     })[33m;[39m
   [90m 168 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m166:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 164 |[39m
   [90m 165 |[39m       expect(results)[33m.[39mtoEqual(hashes)[33m;[39m
  [31m[1m>[22m[39m[90m 166 |[39m       expect(mockedBcrypt[33m.[39mhash)[33m.[39mtoHaveBeenCalledTimes([35m10[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 167 |[39m     })[33m;[39m
   [90m 168 |[39m
   [90m 169 |[39m     it([32m'should handle rapid successive comparison requests'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m169:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 167 |[39m     })[33m;[39m
   [90m 168 |[39m
  [31m[1m>[22m[39m[90m 169 |[39m     it([32m'should handle rapid successive comparison requests'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 170 |[39m       [36mconst[39m comparisons [33m=[39m [33mArray[39m[33m.[39m[36mfrom[39m({ length[33m:[39m [35m10[39m }[33m,[39m (_[33m,[39m i) [33m=>[39m ({
   [90m 171 |[39m         password[33m:[39m [32m`password${i}`[39m[33m,[39m
   [90m 172 |[39m         hash[33m:[39m [32m`$2b$12$hash${i}`[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m184:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 182 |[39m       )[33m;[39m
   [90m 183 |[39m
  [31m[1m>[22m[39m[90m 184 |[39m       expect(results)[33m.[39mtoEqual(comparisons[33m.[39mmap((c) [33m=>[39m c[33m.[39mexpected))[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 185 |[39m       expect(mockedBcrypt[33m.[39mcompare)[33m.[39mtoHaveBeenCalledTimes([35m10[39m)[33m;[39m
   [90m 186 |[39m     })[33m;[39m
   [90m 187 |[39m   })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/hash.service.spec.ts:[32m[1m185:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 183 |[39m
   [90m 184 |[39m       expect(results)[33m.[39mtoEqual(comparisons[33m.[39mmap((c) [33m=>[39m c[33m.[39mexpected))[33m;[39m
  [31m[1m>[22m[39m[90m 185 |[39m       expect(mockedBcrypt[33m.[39mcompare)[33m.[39mtoHaveBeenCalledTimes([35m10[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 186 |[39m     })[33m;[39m
   [90m 187 |[39m   })[33m;[39m
   [90m 188 |[39m })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m7:10[22m[39m[1m[39m[22m
[90mTS2503: [39mCannot find namespace 'jest'.
  [0m [90m  5 |[39m [90m// Mock Redis[39m
   [90m  6 |[39m [36mconst[39m mockRedis[33m:[39m {
  [31m[1m>[22m[39m[90m  7 |[39m   setex[33m:[39m jest[33m.[39m[33mMock[39m[33m;[39m
   [90m    |[39m          [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m  8 |[39m   [36mget[39m[33m:[39m jest[33m.[39m[33mMock[39m[33m;[39m
   [90m  9 |[39m   del[33m:[39m jest[33m.[39m[33mMock[39m[33m;[39m
   [90m 10 |[39m   on[33m:[39m jest[33m.[39m[33mMock[39m[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m8:8[22m[39m[1m[39m[22m
[90mTS2503: [39mCannot find namespace 'jest'.
  [0m [90m  6 |[39m [36mconst[39m mockRedis[33m:[39m {
   [90m  7 |[39m   setex[33m:[39m jest[33m.[39m[33mMock[39m[33m;[39m
  [31m[1m>[22m[39m[90m  8 |[39m   [36mget[39m[33m:[39m jest[33m.[39m[33mMock[39m[33m;[39m
   [90m    |[39m        [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m  9 |[39m   del[33m:[39m jest[33m.[39m[33mMock[39m[33m;[39m
   [90m 10 |[39m   on[33m:[39m jest[33m.[39m[33mMock[39m[33m;[39m
   [90m 11 |[39m   _handlers[33m:[39m [33mRecord[39m[33m<[39m[33mstring[39m[33m,[39m ([33m...[39margs[33m:[39m unknown[]) [33m=>[39m [36mvoid[39m[33m>[39m[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m9:8[22m[39m[1m[39m[22m
[90mTS2503: [39mCannot find namespace 'jest'.
  [0m [90m  7 |[39m   setex[33m:[39m jest[33m.[39m[33mMock[39m[33m;[39m
   [90m  8 |[39m   [36mget[39m[33m:[39m jest[33m.[39m[33mMock[39m[33m;[39m
  [31m[1m>[22m[39m[90m  9 |[39m   del[33m:[39m jest[33m.[39m[33mMock[39m[33m;[39m
   [90m    |[39m        [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 10 |[39m   on[33m:[39m jest[33m.[39m[33mMock[39m[33m;[39m
   [90m 11 |[39m   _handlers[33m:[39m [33mRecord[39m[33m<[39m[33mstring[39m[33m,[39m ([33m...[39margs[33m:[39m unknown[]) [33m=>[39m [36mvoid[39m[33m>[39m[33m;[39m
   [90m 12 |[39m } [33m=[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m10:7[22m[39m[1m[39m[22m
[90mTS2503: [39mCannot find namespace 'jest'.
  [0m [90m  8 |[39m   [36mget[39m[33m:[39m jest[33m.[39m[33mMock[39m[33m;[39m
   [90m  9 |[39m   del[33m:[39m jest[33m.[39m[33mMock[39m[33m;[39m
  [31m[1m>[22m[39m[90m 10 |[39m   on[33m:[39m jest[33m.[39m[33mMock[39m[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 11 |[39m   _handlers[33m:[39m [33mRecord[39m[33m<[39m[33mstring[39m[33m,[39m ([33m...[39margs[33m:[39m unknown[]) [33m=>[39m [36mvoid[39m[33m>[39m[33m;[39m
   [90m 12 |[39m } [33m=[39m {
   [90m 13 |[39m   setex[33m:[39m jest[33m.[39mfn()[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m13:10[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 11 |[39m   _handlers[33m:[39m [33mRecord[39m[33m<[39m[33mstring[39m[33m,[39m ([33m...[39margs[33m:[39m unknown[]) [33m=>[39m [36mvoid[39m[33m>[39m[33m;[39m
   [90m 12 |[39m } [33m=[39m {
  [31m[1m>[22m[39m[90m 13 |[39m   setex[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m          [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 14 |[39m   [36mget[39m[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 15 |[39m   del[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 16 |[39m   on[33m:[39m jest[33m.[39mfn((event[33m:[39m string[33m,[39m handler[33m:[39m ([33m...[39margs[33m:[39m unknown[]) [33m=>[39m [36mvoid[39m) [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m14:8[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 12 |[39m } [33m=[39m {
   [90m 13 |[39m   setex[33m:[39m jest[33m.[39mfn()[33m,[39m
  [31m[1m>[22m[39m[90m 14 |[39m   [36mget[39m[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m        [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 15 |[39m   del[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 16 |[39m   on[33m:[39m jest[33m.[39mfn((event[33m:[39m string[33m,[39m handler[33m:[39m ([33m...[39margs[33m:[39m unknown[]) [33m=>[39m [36mvoid[39m) [33m=>[39m {
   [90m 17 |[39m     [90m// Store handlers for later triggering[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m15:8[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 13 |[39m   setex[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 14 |[39m   [36mget[39m[33m:[39m jest[33m.[39mfn()[33m,[39m
  [31m[1m>[22m[39m[90m 15 |[39m   del[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m        [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 16 |[39m   on[33m:[39m jest[33m.[39mfn((event[33m:[39m string[33m,[39m handler[33m:[39m ([33m...[39margs[33m:[39m unknown[]) [33m=>[39m [36mvoid[39m) [33m=>[39m {
   [90m 17 |[39m     [90m// Store handlers for later triggering[39m
   [90m 18 |[39m     [36mif[39m ([33m![39mmockRedis[33m.[39m_handlers) {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m16:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 14 |[39m   [36mget[39m[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m 15 |[39m   del[33m:[39m jest[33m.[39mfn()[33m,[39m
  [31m[1m>[22m[39m[90m 16 |[39m   on[33m:[39m jest[33m.[39mfn((event[33m:[39m string[33m,[39m handler[33m:[39m ([33m...[39margs[33m:[39m unknown[]) [33m=>[39m [36mvoid[39m) [33m=>[39m {
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 17 |[39m     [90m// Store handlers for later triggering[39m
   [90m 18 |[39m     [36mif[39m ([33m![39mmockRedis[33m.[39m_handlers) {
   [90m 19 |[39m       mockRedis[33m.[39m_handlers [33m=[39m {}[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m27:1[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 25 |[39m }[33m;[39m
   [90m 26 |[39m
  [31m[1m>[22m[39m[90m 27 |[39m jest[33m.[39mmock([32m'ioredis'[39m[33m,[39m () [33m=>[39m {
   [90m    |[39m [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 28 |[39m   [36mreturn[39m {
   [90m 29 |[39m     __esModule[33m:[39m [36mtrue[39m[33m,[39m
   [90m 30 |[39m     [36mdefault[39m[33m:[39m jest[33m.[39mfn()[33m.[39mmockImplementation(() [33m=>[39m mockRedis)[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m30:14[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 28 |[39m   [36mreturn[39m {
   [90m 29 |[39m     __esModule[33m:[39m [36mtrue[39m[33m,[39m
  [31m[1m>[22m[39m[90m 30 |[39m     [36mdefault[39m[33m:[39m jest[33m.[39mfn()[33m.[39mmockImplementation(() [33m=>[39m mockRedis)[33m,[39m
   [90m    |[39m              [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 31 |[39m     [33mRedis[39m[33m:[39m jest[33m.[39mfn()[33m.[39mmockImplementation(() [33m=>[39m mockRedis)[33m,[39m
   [90m 32 |[39m   }[33m;[39m
   [90m 33 |[39m })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m31:12[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 29 |[39m     __esModule[33m:[39m [36mtrue[39m[33m,[39m
   [90m 30 |[39m     [36mdefault[39m[33m:[39m jest[33m.[39mfn()[33m.[39mmockImplementation(() [33m=>[39m mockRedis)[33m,[39m
  [31m[1m>[22m[39m[90m 31 |[39m     [33mRedis[39m[33m:[39m jest[33m.[39mfn()[33m.[39mmockImplementation(() [33m=>[39m mockRedis)[33m,[39m
   [90m    |[39m            [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 32 |[39m   }[33m;[39m
   [90m 33 |[39m })[33m;[39m
   [90m 34 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m35:1[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 33 |[39m })[33m;[39m
   [90m 34 |[39m
  [31m[1m>[22m[39m[90m 35 |[39m describe([32m'SessionService'[39m[33m,[39m () [33m=>[39m {
   [90m    |[39m [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 36 |[39m   [36mlet[39m service[33m:[39m [33mSessionService[39m[33m;[39m
   [90m 37 |[39m   [36mlet[39m mockLogger[33m:[39m jest[33m.[39m[33mSpyInstance[39m[33m;[39m
   [90m 38 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m37:19[22m[39m[1m[39m[22m
[90mTS2503: [39mCannot find namespace 'jest'.
  [0m [90m 35 |[39m describe([32m'SessionService'[39m[33m,[39m () [33m=>[39m {
   [90m 36 |[39m   [36mlet[39m service[33m:[39m [33mSessionService[39m[33m;[39m
  [31m[1m>[22m[39m[90m 37 |[39m   [36mlet[39m mockLogger[33m:[39m jest[33m.[39m[33mSpyInstance[39m[33m;[39m
   [90m    |[39m                   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 38 |[39m
   [90m 39 |[39m   [36mconst[39m createMockSessionData [33m=[39m (overrides[33m?[39m[33m:[39m [33mPartial[39m[33m<[39m[33mSessionData[39m[33m>[39m)[33m:[39m [33mSessionData[39m [33m=>[39m ({
   [90m 40 |[39m     userId[33m:[39m [32m'user-123'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m52:3[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'beforeEach'.
  [0m [90m 50 |[39m   })[33m;[39m
   [90m 51 |[39m
  [31m[1m>[22m[39m[90m 52 |[39m   beforeEach([36masync[39m () [33m=>[39m {
   [90m    |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 53 |[39m     [90m// Clear all mocks[39m
   [90m 54 |[39m     jest[33m.[39mclearAllMocks()[33m;[39m
   [90m 55 |[39m     mockRedis[33m.[39msetex[33m.[39mmockClear()[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m54:5[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 52 |[39m   beforeEach([36masync[39m () [33m=>[39m {
   [90m 53 |[39m     [90m// Clear all mocks[39m
  [31m[1m>[22m[39m[90m 54 |[39m     jest[33m.[39mclearAllMocks()[33m;[39m
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 55 |[39m     mockRedis[33m.[39msetex[33m.[39mmockClear()[33m;[39m
   [90m 56 |[39m     mockRedis[33m.[39m[36mget[39m[33m.[39mmockClear()[33m;[39m
   [90m 57 |[39m     mockRedis[33m.[39mdel[33m.[39mmockClear()[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m61:18[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 59 |[39m
   [90m 60 |[39m     [90m// Mock Logger methods[39m
  [31m[1m>[22m[39m[90m 61 |[39m     mockLogger [33m=[39m jest[33m.[39mspyOn([33mLogger[39m[33m.[39mprototype[33m,[39m [32m'log'[39m)[33m.[39mmockImplementation()[33m;[39m
   [90m    |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 62 |[39m     jest[33m.[39mspyOn([33mLogger[39m[33m.[39mprototype[33m,[39m [32m'warn'[39m)[33m.[39mmockImplementation()[33m;[39m
   [90m 63 |[39m     jest[33m.[39mspyOn([33mLogger[39m[33m.[39mprototype[33m,[39m [32m'error'[39m)[33m.[39mmockImplementation()[33m;[39m
   [90m 64 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m62:5[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 60 |[39m     [90m// Mock Logger methods[39m
   [90m 61 |[39m     mockLogger [33m=[39m jest[33m.[39mspyOn([33mLogger[39m[33m.[39mprototype[33m,[39m [32m'log'[39m)[33m.[39mmockImplementation()[33m;[39m
  [31m[1m>[22m[39m[90m 62 |[39m     jest[33m.[39mspyOn([33mLogger[39m[33m.[39mprototype[33m,[39m [32m'warn'[39m)[33m.[39mmockImplementation()[33m;[39m
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 63 |[39m     jest[33m.[39mspyOn([33mLogger[39m[33m.[39mprototype[33m,[39m [32m'error'[39m)[33m.[39mmockImplementation()[33m;[39m
   [90m 64 |[39m
   [90m 65 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m63:5[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 61 |[39m     mockLogger [33m=[39m jest[33m.[39mspyOn([33mLogger[39m[33m.[39mprototype[33m,[39m [32m'log'[39m)[33m.[39mmockImplementation()[33m;[39m
   [90m 62 |[39m     jest[33m.[39mspyOn([33mLogger[39m[33m.[39mprototype[33m,[39m [32m'warn'[39m)[33m.[39mmockImplementation()[33m;[39m
  [31m[1m>[22m[39m[90m 63 |[39m     jest[33m.[39mspyOn([33mLogger[39m[33m.[39mprototype[33m,[39m [32m'error'[39m)[33m.[39mmockImplementation()[33m;[39m
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 64 |[39m
   [90m 65 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
   [90m 66 |[39m       providers[33m:[39m [[33mSessionService[39m][33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m77:3[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'afterEach'.
  [0m [90m 75 |[39m   })[33m;[39m
   [90m 76 |[39m
  [31m[1m>[22m[39m[90m 77 |[39m   afterEach(() [33m=>[39m {
   [90m    |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 78 |[39m     jest[33m.[39mrestoreAllMocks()[33m;[39m
   [90m 79 |[39m   })[33m;[39m
   [90m 80 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m78:5[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 76 |[39m
   [90m 77 |[39m   afterEach(() [33m=>[39m {
  [31m[1m>[22m[39m[90m 78 |[39m     jest[33m.[39mrestoreAllMocks()[33m;[39m
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 79 |[39m   })[33m;[39m
   [90m 80 |[39m
   [90m 81 |[39m   describe([32m'initialization'[39m[33m,[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m81:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 79 |[39m   })[33m;[39m
   [90m 80 |[39m
  [31m[1m>[22m[39m[90m 81 |[39m   describe([32m'initialization'[39m[33m,[39m () [33m=>[39m {
   [90m    |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 82 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m 83 |[39m       expect(service)[33m.[39mtoBeDefined()[33m;[39m
   [90m 84 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m82:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 80 |[39m
   [90m 81 |[39m   describe([32m'initialization'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 82 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 83 |[39m       expect(service)[33m.[39mtoBeDefined()[33m;[39m
   [90m 84 |[39m     })[33m;[39m
   [90m 85 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m83:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 81 |[39m   describe([32m'initialization'[39m[33m,[39m () [33m=>[39m {
   [90m 82 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 83 |[39m       expect(service)[33m.[39mtoBeDefined()[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 84 |[39m     })[33m;[39m
   [90m 85 |[39m
   [90m 86 |[39m     it([32m'should initialize Redis with correct configuration'[39m[33m,[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m86:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 84 |[39m     })[33m;[39m
   [90m 85 |[39m
  [31m[1m>[22m[39m[90m 86 |[39m     it([32m'should initialize Redis with correct configuration'[39m[33m,[39m () [33m=>[39m {
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 87 |[39m       expect(mockRedis[33m.[39m_handlers[[32m'connect'[39m])[33m.[39mtoBeDefined()[33m;[39m
   [90m 88 |[39m       expect(mockRedis[33m.[39m_handlers[[32m'error'[39m])[33m.[39mtoBeDefined()[33m;[39m
   [90m 89 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m87:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 85 |[39m
   [90m 86 |[39m     it([32m'should initialize Redis with correct configuration'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 87 |[39m       expect(mockRedis[33m.[39m_handlers[[32m'connect'[39m])[33m.[39mtoBeDefined()[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 88 |[39m       expect(mockRedis[33m.[39m_handlers[[32m'error'[39m])[33m.[39mtoBeDefined()[33m;[39m
   [90m 89 |[39m     })[33m;[39m
   [90m 90 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m88:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 86 |[39m     it([32m'should initialize Redis with correct configuration'[39m[33m,[39m () [33m=>[39m {
   [90m 87 |[39m       expect(mockRedis[33m.[39m_handlers[[32m'connect'[39m])[33m.[39mtoBeDefined()[33m;[39m
  [31m[1m>[22m[39m[90m 88 |[39m       expect(mockRedis[33m.[39m_handlers[[32m'error'[39m])[33m.[39mtoBeDefined()[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 89 |[39m     })[33m;[39m
   [90m 90 |[39m
   [90m 91 |[39m     it([32m'should log success message on Redis connection'[39m[33m,[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m91:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 89 |[39m     })[33m;[39m
   [90m 90 |[39m
  [31m[1m>[22m[39m[90m 91 |[39m     it([32m'should log success message on Redis connection'[39m[33m,[39m () [33m=>[39m {
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 92 |[39m       expect(mockLogger)[33m.[39mtoHaveBeenCalledWith([32m'Redis connected successfully'[39m)[33m;[39m
   [90m 93 |[39m     })[33m;[39m
   [90m 94 |[39m   })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m92:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 90 |[39m
   [90m 91 |[39m     it([32m'should log success message on Redis connection'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 92 |[39m       expect(mockLogger)[33m.[39mtoHaveBeenCalledWith([32m'Redis connected successfully'[39m)[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 93 |[39m     })[33m;[39m
   [90m 94 |[39m   })[33m;[39m
   [90m 95 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m96:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 94 |[39m   })[33m;[39m
   [90m 95 |[39m
  [31m[1m>[22m[39m[90m 96 |[39m   describe([32m'createSession'[39m[33m,[39m () [33m=>[39m {
   [90m    |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 97 |[39m     it([32m'should create a session in Redis with correct TTL'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m 98 |[39m       [36mconst[39m sessionData [33m=[39m createMockSessionData()[33m;[39m
   [90m 99 |[39m       mockRedis[33m.[39msetex[33m.[39mmockResolvedValue([32m'OK'[39m)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m97:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m  95 |[39m
   [90m  96 |[39m   describe([32m'createSession'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m  97 |[39m     it([32m'should create a session in Redis with correct TTL'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m  98 |[39m       [36mconst[39m sessionData [33m=[39m createMockSessionData()[33m;[39m
   [90m  99 |[39m       mockRedis[33m.[39msetex[33m.[39mmockResolvedValue([32m'OK'[39m)[33m;[39m
   [90m 100 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m103:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 101 |[39m       [36mawait[39m service[33m.[39mcreateSession(sessionData)[33m;[39m
   [90m 102 |[39m
  [31m[1m>[22m[39m[90m 103 |[39m       expect(mockRedis[33m.[39msetex)[33m.[39mtoHaveBeenCalledWith(
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 104 |[39m         [32m`session:${sessionData.userId}`[39m[33m,[39m
   [90m 105 |[39m         [35m7[39m [33m*[39m [35m24[39m [33m*[39m [35m60[39m [33m*[39m [35m60[39m[33m,[39m [90m// 7 days in seconds[39m
   [90m 106 |[39m         [33mJSON[39m[33m.[39mstringify(sessionData)[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m108:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 106 |[39m         [33mJSON[39m[33m.[39mstringify(sessionData)
   [90m 107 |[39m       )[33m;[39m
  [31m[1m>[22m[39m[90m 108 |[39m       expect(mockLogger)[33m.[39mtoHaveBeenCalledWith([32m`Session created for user ${sessionData.userId}`[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 109 |[39m     })[33m;[39m
   [90m 110 |[39m
   [90m 111 |[39m     it([32m'should handle session creation with minimal metadata'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m111:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 109 |[39m     })[33m;[39m
   [90m 110 |[39m
  [31m[1m>[22m[39m[90m 111 |[39m     it([32m'should handle session creation with minimal metadata'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 112 |[39m       [36mconst[39m sessionData [33m=[39m createMockSessionData({ metadata[33m:[39m {} })[33m;[39m
   [90m 113 |[39m       mockRedis[33m.[39msetex[33m.[39mmockResolvedValue([32m'OK'[39m)[33m;[39m
   [90m 114 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m117:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 115 |[39m       [36mawait[39m service[33m.[39mcreateSession(sessionData)[33m;[39m
   [90m 116 |[39m
  [31m[1m>[22m[39m[90m 117 |[39m       expect(mockRedis[33m.[39msetex)[33m.[39mtoHaveBeenCalledWith(
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 118 |[39m         [32m`session:${sessionData.userId}`[39m[33m,[39m
   [90m 119 |[39m         expect[33m.[39many([33mNumber[39m)[33m,[39m
   [90m 120 |[39m         [33mJSON[39m[33m.[39mstringify(sessionData)[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m119:9[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 117 |[39m       expect(mockRedis[33m.[39msetex)[33m.[39mtoHaveBeenCalledWith(
   [90m 118 |[39m         [32m`session:${sessionData.userId}`[39m[33m,[39m
  [31m[1m>[22m[39m[90m 119 |[39m         expect[33m.[39many([33mNumber[39m)[33m,[39m
   [90m     |[39m         [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 120 |[39m         [33mJSON[39m[33m.[39mstringify(sessionData)
   [90m 121 |[39m       )[33m;[39m
   [90m 122 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m124:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 122 |[39m     })[33m;[39m
   [90m 123 |[39m
  [31m[1m>[22m[39m[90m 124 |[39m     it([32m'should handle Redis errors gracefully'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 125 |[39m       [36mconst[39m sessionData [33m=[39m createMockSessionData()[33m;[39m
   [90m 126 |[39m       [36mconst[39m error [33m=[39m [36mnew[39m [33mError[39m([32m'Redis connection failed'[39m)[33m;[39m
   [90m 127 |[39m       mockRedis[33m.[39msetex[33m.[39mmockRejectedValue(error)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m131:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 129 |[39m       [36mawait[39m service[33m.[39mcreateSession(sessionData)[33m;[39m
   [90m 130 |[39m
  [31m[1m>[22m[39m[90m 131 |[39m       expect([33mLogger[39m[33m.[39mprototype[33m.[39merror)[33m.[39mtoHaveBeenCalledWith(
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 132 |[39m         [32m`Failed to create session: ${error.message}`[39m
   [90m 133 |[39m       )[33m;[39m
   [90m 134 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m136:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 134 |[39m     })[33m;[39m
   [90m 135 |[39m
  [31m[1m>[22m[39m[90m 136 |[39m     it([32m'should warn when Redis is unavailable'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 137 |[39m       [90m// Simulate Redis error[39m
   [90m 138 |[39m       [36mif[39m (mockRedis[33m.[39m_handlers[[32m'error'[39m]) {
   [90m 139 |[39m         mockRedis[33m.[39m_handlers[[32m'error'[39m]([36mnew[39m [33mError[39m([32m'Connection refused'[39m))[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m145:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 143 |[39m       [36mawait[39m service[33m.[39mcreateSession(sessionData)[33m;[39m
   [90m 144 |[39m
  [31m[1m>[22m[39m[90m 145 |[39m       expect([33mLogger[39m[33m.[39mprototype[33m.[39mwarn)[33m.[39mtoHaveBeenCalledWith(
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 146 |[39m         [32m'Redis unavailable, session not persisted'[39m
   [90m 147 |[39m       )[33m;[39m
   [90m 148 |[39m       expect(mockRedis[33m.[39msetex)[33m.[39mnot[33m.[39mtoHaveBeenCalled()[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m148:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 146 |[39m         [32m'Redis unavailable, session not persisted'[39m
   [90m 147 |[39m       )[33m;[39m
  [31m[1m>[22m[39m[90m 148 |[39m       expect(mockRedis[33m.[39msetex)[33m.[39mnot[33m.[39mtoHaveBeenCalled()[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 149 |[39m     })[33m;[39m
   [90m 150 |[39m   })[33m;[39m
   [90m 151 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m152:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 150 |[39m   })[33m;[39m
   [90m 151 |[39m
  [31m[1m>[22m[39m[90m 152 |[39m   describe([32m'getSession'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 153 |[39m     it([32m'should retrieve a session from Redis'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m 154 |[39m       [36mconst[39m sessionData [33m=[39m createMockSessionData()[33m;[39m
   [90m 155 |[39m       mockRedis[33m.[39m[36mget[39m[33m.[39mmockResolvedValue([33mJSON[39m[33m.[39mstringify(sessionData))[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m153:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 151 |[39m
   [90m 152 |[39m   describe([32m'getSession'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 153 |[39m     it([32m'should retrieve a session from Redis'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 154 |[39m       [36mconst[39m sessionData [33m=[39m createMockSessionData()[33m;[39m
   [90m 155 |[39m       mockRedis[33m.[39m[36mget[39m[33m.[39mmockResolvedValue([33mJSON[39m[33m.[39mstringify(sessionData))[33m;[39m
   [90m 156 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m159:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 157 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39mgetSession(sessionData[33m.[39muserId)[33m;[39m
   [90m 158 |[39m
  [31m[1m>[22m[39m[90m 159 |[39m       expect(mockRedis[33m.[39m[36mget[39m)[33m.[39mtoHaveBeenCalledWith([32m`session:${sessionData.userId}`[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 160 |[39m       expect(result)[33m.[39mtoEqual(sessionData)[33m;[39m
   [90m 161 |[39m     })[33m;[39m
   [90m 162 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m160:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 158 |[39m
   [90m 159 |[39m       expect(mockRedis[33m.[39m[36mget[39m)[33m.[39mtoHaveBeenCalledWith([32m`session:${sessionData.userId}`[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 160 |[39m       expect(result)[33m.[39mtoEqual(sessionData)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 161 |[39m     })[33m;[39m
   [90m 162 |[39m
   [90m 163 |[39m     it([32m'should return null when session does not exist'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m163:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 161 |[39m     })[33m;[39m
   [90m 162 |[39m
  [31m[1m>[22m[39m[90m 163 |[39m     it([32m'should return null when session does not exist'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 164 |[39m       mockRedis[33m.[39m[36mget[39m[33m.[39mmockResolvedValue([36mnull[39m)[33m;[39m
   [90m 165 |[39m
   [90m 166 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39mgetSession([32m'non-existent-user'[39m)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m168:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 166 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39mgetSession([32m'non-existent-user'[39m)[33m;[39m
   [90m 167 |[39m
  [31m[1m>[22m[39m[90m 168 |[39m       expect(result)[33m.[39mtoBeNull()[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 169 |[39m     })[33m;[39m
   [90m 170 |[39m
   [90m 171 |[39m     it([32m'should handle JSON parsing errors'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m171:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 169 |[39m     })[33m;[39m
   [90m 170 |[39m
  [31m[1m>[22m[39m[90m 171 |[39m     it([32m'should handle JSON parsing errors'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 172 |[39m       mockRedis[33m.[39m[36mget[39m[33m.[39mmockResolvedValue([32m'invalid-json'[39m)[33m;[39m
   [90m 173 |[39m
   [90m 174 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39mgetSession([32m'user-123'[39m)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m176:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 174 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39mgetSession([32m'user-123'[39m)[33m;[39m
   [90m 175 |[39m
  [31m[1m>[22m[39m[90m 176 |[39m       expect([33mLogger[39m[33m.[39mprototype[33m.[39merror)[33m.[39mtoHaveBeenCalledWith(
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 177 |[39m         expect[33m.[39mstringContaining([32m'Failed to get session:'[39m)
   [90m 178 |[39m       )[33m;[39m
   [90m 179 |[39m       expect(result)[33m.[39mtoBeNull()[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m177:9[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 175 |[39m
   [90m 176 |[39m       expect([33mLogger[39m[33m.[39mprototype[33m.[39merror)[33m.[39mtoHaveBeenCalledWith(
  [31m[1m>[22m[39m[90m 177 |[39m         expect[33m.[39mstringContaining([32m'Failed to get session:'[39m)
   [90m     |[39m         [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 178 |[39m       )[33m;[39m
   [90m 179 |[39m       expect(result)[33m.[39mtoBeNull()[33m;[39m
   [90m 180 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m179:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 177 |[39m         expect[33m.[39mstringContaining([32m'Failed to get session:'[39m)
   [90m 178 |[39m       )[33m;[39m
  [31m[1m>[22m[39m[90m 179 |[39m       expect(result)[33m.[39mtoBeNull()[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 180 |[39m     })[33m;[39m
   [90m 181 |[39m
   [90m 182 |[39m     it([32m'should handle Redis errors'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m182:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 180 |[39m     })[33m;[39m
   [90m 181 |[39m
  [31m[1m>[22m[39m[90m 182 |[39m     it([32m'should handle Redis errors'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 183 |[39m       [36mconst[39m error [33m=[39m [36mnew[39m [33mError[39m([32m'Redis read failed'[39m)[33m;[39m
   [90m 184 |[39m       mockRedis[33m.[39m[36mget[39m[33m.[39mmockRejectedValue(error)[33m;[39m
   [90m 185 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m188:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 186 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39mgetSession([32m'user-123'[39m)[33m;[39m
   [90m 187 |[39m
  [31m[1m>[22m[39m[90m 188 |[39m       expect([33mLogger[39m[33m.[39mprototype[33m.[39merror)[33m.[39mtoHaveBeenCalledWith(
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 189 |[39m         [32m`Failed to get session: ${error.message}`[39m
   [90m 190 |[39m       )[33m;[39m
   [90m 191 |[39m       expect(result)[33m.[39mtoBeNull()[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m191:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 189 |[39m         [32m`Failed to get session: ${error.message}`[39m
   [90m 190 |[39m       )[33m;[39m
  [31m[1m>[22m[39m[90m 191 |[39m       expect(result)[33m.[39mtoBeNull()[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 192 |[39m     })[33m;[39m
   [90m 193 |[39m
   [90m 194 |[39m     it([32m'should return null when Redis is unavailable'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m194:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 192 |[39m     })[33m;[39m
   [90m 193 |[39m
  [31m[1m>[22m[39m[90m 194 |[39m     it([32m'should return null when Redis is unavailable'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 195 |[39m       [36mif[39m (mockRedis[33m.[39m_handlers[[32m'error'[39m]) {
   [90m 196 |[39m         mockRedis[33m.[39m_handlers[[32m'error'[39m]([36mnew[39m [33mError[39m([32m'Connection refused'[39m))[33m;[39m
   [90m 197 |[39m       }[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m201:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 199 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39mgetSession([32m'user-123'[39m)[33m;[39m
   [90m 200 |[39m
  [31m[1m>[22m[39m[90m 201 |[39m       expect([33mLogger[39m[33m.[39mprototype[33m.[39mwarn)[33m.[39mtoHaveBeenCalledWith(
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 202 |[39m         [32m'Redis unavailable, cannot retrieve session'[39m
   [90m 203 |[39m       )[33m;[39m
   [90m 204 |[39m       expect(result)[33m.[39mtoBeNull()[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m204:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 202 |[39m         [32m'Redis unavailable, cannot retrieve session'[39m
   [90m 203 |[39m       )[33m;[39m
  [31m[1m>[22m[39m[90m 204 |[39m       expect(result)[33m.[39mtoBeNull()[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 205 |[39m     })[33m;[39m
   [90m 206 |[39m   })[33m;[39m
   [90m 207 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m208:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 206 |[39m   })[33m;[39m
   [90m 207 |[39m
  [31m[1m>[22m[39m[90m 208 |[39m   describe([32m'deleteSession'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 209 |[39m     it([32m'should delete a session from Redis'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m 210 |[39m       [36mconst[39m userId [33m=[39m [32m'user-123'[39m[33m;[39m
   [90m 211 |[39m       mockRedis[33m.[39mdel[33m.[39mmockResolvedValue([35m1[39m)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m209:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 207 |[39m
   [90m 208 |[39m   describe([32m'deleteSession'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 209 |[39m     it([32m'should delete a session from Redis'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 210 |[39m       [36mconst[39m userId [33m=[39m [32m'user-123'[39m[33m;[39m
   [90m 211 |[39m       mockRedis[33m.[39mdel[33m.[39mmockResolvedValue([35m1[39m)[33m;[39m
   [90m 212 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m215:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 213 |[39m       [36mawait[39m service[33m.[39mdeleteSession(userId)[33m;[39m
   [90m 214 |[39m
  [31m[1m>[22m[39m[90m 215 |[39m       expect(mockRedis[33m.[39mdel)[33m.[39mtoHaveBeenCalledWith([32m`session:${userId}`[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 216 |[39m       expect(mockLogger)[33m.[39mtoHaveBeenCalledWith([32m`Session deleted for user ${userId}`[39m)[33m;[39m
   [90m 217 |[39m     })[33m;[39m
   [90m 218 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m216:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 214 |[39m
   [90m 215 |[39m       expect(mockRedis[33m.[39mdel)[33m.[39mtoHaveBeenCalledWith([32m`session:${userId}`[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 216 |[39m       expect(mockLogger)[33m.[39mtoHaveBeenCalledWith([32m`Session deleted for user ${userId}`[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 217 |[39m     })[33m;[39m
   [90m 218 |[39m
   [90m 219 |[39m     it([32m'should handle deletion of non-existent session'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m219:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 217 |[39m     })[33m;[39m
   [90m 218 |[39m
  [31m[1m>[22m[39m[90m 219 |[39m     it([32m'should handle deletion of non-existent session'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 220 |[39m       [36mconst[39m userId [33m=[39m [32m'non-existent-user'[39m[33m;[39m
   [90m 221 |[39m       mockRedis[33m.[39mdel[33m.[39mmockResolvedValue([35m0[39m)[33m;[39m [90m// Redis returns 0 when key doesn't exist[39m
   [90m 222 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m225:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 223 |[39m       [36mawait[39m service[33m.[39mdeleteSession(userId)[33m;[39m
   [90m 224 |[39m
  [31m[1m>[22m[39m[90m 225 |[39m       expect(mockRedis[33m.[39mdel)[33m.[39mtoHaveBeenCalledWith([32m`session:${userId}`[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 226 |[39m     })[33m;[39m
   [90m 227 |[39m
   [90m 228 |[39m     it([32m'should handle Redis errors during deletion'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m228:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 226 |[39m     })[33m;[39m
   [90m 227 |[39m
  [31m[1m>[22m[39m[90m 228 |[39m     it([32m'should handle Redis errors during deletion'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 229 |[39m       [36mconst[39m error [33m=[39m [36mnew[39m [33mError[39m([32m'Redis delete failed'[39m)[33m;[39m
   [90m 230 |[39m       mockRedis[33m.[39mdel[33m.[39mmockRejectedValue(error)[33m;[39m
   [90m 231 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m234:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 232 |[39m       [36mawait[39m service[33m.[39mdeleteSession([32m'user-123'[39m)[33m;[39m
   [90m 233 |[39m
  [31m[1m>[22m[39m[90m 234 |[39m       expect([33mLogger[39m[33m.[39mprototype[33m.[39merror)[33m.[39mtoHaveBeenCalledWith(
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 235 |[39m         [32m`Failed to delete session: ${error.message}`[39m
   [90m 236 |[39m       )[33m;[39m
   [90m 237 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m239:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 237 |[39m     })[33m;[39m
   [90m 238 |[39m
  [31m[1m>[22m[39m[90m 239 |[39m     it([32m'should warn when Redis is unavailable'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 240 |[39m       [36mif[39m (mockRedis[33m.[39m_handlers[[32m'error'[39m]) {
   [90m 241 |[39m         mockRedis[33m.[39m_handlers[[32m'error'[39m]([36mnew[39m [33mError[39m([32m'Connection refused'[39m))[33m;[39m
   [90m 242 |[39m       }[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m246:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 244 |[39m       [36mawait[39m service[33m.[39mdeleteSession([32m'user-123'[39m)[33m;[39m
   [90m 245 |[39m
  [31m[1m>[22m[39m[90m 246 |[39m       expect([33mLogger[39m[33m.[39mprototype[33m.[39mwarn)[33m.[39mtoHaveBeenCalledWith(
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 247 |[39m         [32m'Redis unavailable, session not deleted'[39m
   [90m 248 |[39m       )[33m;[39m
   [90m 249 |[39m       expect(mockRedis[33m.[39mdel)[33m.[39mnot[33m.[39mtoHaveBeenCalled()[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m249:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 247 |[39m         [32m'Redis unavailable, session not deleted'[39m
   [90m 248 |[39m       )[33m;[39m
  [31m[1m>[22m[39m[90m 249 |[39m       expect(mockRedis[33m.[39mdel)[33m.[39mnot[33m.[39mtoHaveBeenCalled()[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 250 |[39m     })[33m;[39m
   [90m 251 |[39m   })[33m;[39m
   [90m 252 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m253:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 251 |[39m   })[33m;[39m
   [90m 252 |[39m
  [31m[1m>[22m[39m[90m 253 |[39m   describe([32m'blacklistToken'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 254 |[39m     it([32m'should blacklist a token with correct expiration'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m 255 |[39m       [36mconst[39m tokenId [33m=[39m [32m'token-xyz-123'[39m[33m;[39m
   [90m 256 |[39m       [36mconst[39m expiresIn [33m=[39m [35m900[39m[33m;[39m [90m// 15 minutes in seconds[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m254:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 252 |[39m
   [90m 253 |[39m   describe([32m'blacklistToken'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 254 |[39m     it([32m'should blacklist a token with correct expiration'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 255 |[39m       [36mconst[39m tokenId [33m=[39m [32m'token-xyz-123'[39m[33m;[39m
   [90m 256 |[39m       [36mconst[39m expiresIn [33m=[39m [35m900[39m[33m;[39m [90m// 15 minutes in seconds[39m
   [90m 257 |[39m       mockRedis[33m.[39msetex[33m.[39mmockResolvedValue([32m'OK'[39m)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m261:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 259 |[39m       [36mawait[39m service[33m.[39mblacklistToken(tokenId[33m,[39m expiresIn)[33m;[39m
   [90m 260 |[39m
  [31m[1m>[22m[39m[90m 261 |[39m       expect(mockRedis[33m.[39msetex)[33m.[39mtoHaveBeenCalledWith(
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 262 |[39m         [32m`blacklist:${tokenId}`[39m[33m,[39m
   [90m 263 |[39m         expiresIn[33m,[39m
   [90m 264 |[39m         [32m'revoked'[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m266:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 264 |[39m         [32m'revoked'[39m
   [90m 265 |[39m       )[33m;[39m
  [31m[1m>[22m[39m[90m 266 |[39m       expect(mockLogger)[33m.[39mtoHaveBeenCalledWith([32m`Token ${tokenId} blacklisted`[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 267 |[39m     })[33m;[39m
   [90m 268 |[39m
   [90m 269 |[39m     it([32m'should handle blacklisting with different expiration times'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m269:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 267 |[39m     })[33m;[39m
   [90m 268 |[39m
  [31m[1m>[22m[39m[90m 269 |[39m     it([32m'should handle blacklisting with different expiration times'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 270 |[39m       [36mconst[39m expirations [33m=[39m [[35m60[39m[33m,[39m [35m300[39m[33m,[39m [35m900[39m[33m,[39m [35m3600[39m][33m;[39m [90m// 1min, 5min, 15min, 1hour[39m
   [90m 271 |[39m
   [90m 272 |[39m       [36mfor[39m ([36mconst[39m expiresIn [36mof[39m expirations) {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m276:9[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 274 |[39m         [36mawait[39m service[33m.[39mblacklistToken([32m'token-123'[39m[33m,[39m expiresIn)[33m;[39m
   [90m 275 |[39m
  [31m[1m>[22m[39m[90m 276 |[39m         expect(mockRedis[33m.[39msetex)[33m.[39mtoHaveBeenCalledWith(
   [90m     |[39m         [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 277 |[39m           [32m'blacklist:token-123'[39m[33m,[39m
   [90m 278 |[39m           expiresIn[33m,[39m
   [90m 279 |[39m           [32m'revoked'[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m284:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 282 |[39m     })[33m;[39m
   [90m 283 |[39m
  [31m[1m>[22m[39m[90m 284 |[39m     it([32m'should handle Redis errors during blacklisting'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 285 |[39m       [36mconst[39m error [33m=[39m [36mnew[39m [33mError[39m([32m'Redis blacklist failed'[39m)[33m;[39m
   [90m 286 |[39m       mockRedis[33m.[39msetex[33m.[39mmockRejectedValue(error)[33m;[39m
   [90m 287 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m290:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 288 |[39m       [36mawait[39m service[33m.[39mblacklistToken([32m'token-123'[39m[33m,[39m [35m900[39m)[33m;[39m
   [90m 289 |[39m
  [31m[1m>[22m[39m[90m 290 |[39m       expect([33mLogger[39m[33m.[39mprototype[33m.[39merror)[33m.[39mtoHaveBeenCalledWith(
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 291 |[39m         [32m`Failed to blacklist token: ${error.message}`[39m
   [90m 292 |[39m       )[33m;[39m
   [90m 293 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m295:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 293 |[39m     })[33m;[39m
   [90m 294 |[39m
  [31m[1m>[22m[39m[90m 295 |[39m     it([32m'should warn when Redis is unavailable'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 296 |[39m       [36mif[39m (mockRedis[33m.[39m_handlers[[32m'error'[39m]) {
   [90m 297 |[39m         mockRedis[33m.[39m_handlers[[32m'error'[39m]([36mnew[39m [33mError[39m([32m'Connection refused'[39m))[33m;[39m
   [90m 298 |[39m       }[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m302:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 300 |[39m       [36mawait[39m service[33m.[39mblacklistToken([32m'token-123'[39m[33m,[39m [35m900[39m)[33m;[39m
   [90m 301 |[39m
  [31m[1m>[22m[39m[90m 302 |[39m       expect([33mLogger[39m[33m.[39mprototype[33m.[39mwarn)[33m.[39mtoHaveBeenCalledWith(
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 303 |[39m         [32m'Redis unavailable, token not blacklisted'[39m
   [90m 304 |[39m       )[33m;[39m
   [90m 305 |[39m       expect(mockRedis[33m.[39msetex)[33m.[39mnot[33m.[39mtoHaveBeenCalled()[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m305:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 303 |[39m         [32m'Redis unavailable, token not blacklisted'[39m
   [90m 304 |[39m       )[33m;[39m
  [31m[1m>[22m[39m[90m 305 |[39m       expect(mockRedis[33m.[39msetex)[33m.[39mnot[33m.[39mtoHaveBeenCalled()[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 306 |[39m     })[33m;[39m
   [90m 307 |[39m   })[33m;[39m
   [90m 308 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m309:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 307 |[39m   })[33m;[39m
   [90m 308 |[39m
  [31m[1m>[22m[39m[90m 309 |[39m   describe([32m'isTokenBlacklisted'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 310 |[39m     it([32m'should return true when token is blacklisted'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m 311 |[39m       mockRedis[33m.[39m[36mget[39m[33m.[39mmockResolvedValue([32m'revoked'[39m)[33m;[39m
   [90m 312 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m310:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 308 |[39m
   [90m 309 |[39m   describe([32m'isTokenBlacklisted'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 310 |[39m     it([32m'should return true when token is blacklisted'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 311 |[39m       mockRedis[33m.[39m[36mget[39m[33m.[39mmockResolvedValue([32m'revoked'[39m)[33m;[39m
   [90m 312 |[39m
   [90m 313 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39misTokenBlacklisted([32m'token-123'[39m)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m315:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 313 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39misTokenBlacklisted([32m'token-123'[39m)[33m;[39m
   [90m 314 |[39m
  [31m[1m>[22m[39m[90m 315 |[39m       expect(mockRedis[33m.[39m[36mget[39m)[33m.[39mtoHaveBeenCalledWith([32m'blacklist:token-123'[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 316 |[39m       expect(result)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
   [90m 317 |[39m     })[33m;[39m
   [90m 318 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m316:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 314 |[39m
   [90m 315 |[39m       expect(mockRedis[33m.[39m[36mget[39m)[33m.[39mtoHaveBeenCalledWith([32m'blacklist:token-123'[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 316 |[39m       expect(result)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 317 |[39m     })[33m;[39m
   [90m 318 |[39m
   [90m 319 |[39m     it([32m'should return false when token is not blacklisted'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m319:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 317 |[39m     })[33m;[39m
   [90m 318 |[39m
  [31m[1m>[22m[39m[90m 319 |[39m     it([32m'should return false when token is not blacklisted'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 320 |[39m       mockRedis[33m.[39m[36mget[39m[33m.[39mmockResolvedValue([36mnull[39m)[33m;[39m
   [90m 321 |[39m
   [90m 322 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39misTokenBlacklisted([32m'token-123'[39m)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m324:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 322 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39misTokenBlacklisted([32m'token-123'[39m)[33m;[39m
   [90m 323 |[39m
  [31m[1m>[22m[39m[90m 324 |[39m       expect(result)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 325 |[39m     })[33m;[39m
   [90m 326 |[39m
   [90m 327 |[39m     it([32m'should handle Redis errors'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m327:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 325 |[39m     })[33m;[39m
   [90m 326 |[39m
  [31m[1m>[22m[39m[90m 327 |[39m     it([32m'should handle Redis errors'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 328 |[39m       [36mconst[39m error [33m=[39m [36mnew[39m [33mError[39m([32m'Redis check failed'[39m)[33m;[39m
   [90m 329 |[39m       mockRedis[33m.[39m[36mget[39m[33m.[39mmockRejectedValue(error)[33m;[39m
   [90m 330 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m333:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 331 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39misTokenBlacklisted([32m'token-123'[39m)[33m;[39m
   [90m 332 |[39m
  [31m[1m>[22m[39m[90m 333 |[39m       expect([33mLogger[39m[33m.[39mprototype[33m.[39merror)[33m.[39mtoHaveBeenCalledWith(
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 334 |[39m         [32m`Failed to check blacklist: ${error.message}`[39m
   [90m 335 |[39m       )[33m;[39m
   [90m 336 |[39m       expect(result)[33m.[39mtoBe([36mfalse[39m)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m336:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 334 |[39m         [32m`Failed to check blacklist: ${error.message}`[39m
   [90m 335 |[39m       )[33m;[39m
  [31m[1m>[22m[39m[90m 336 |[39m       expect(result)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 337 |[39m     })[33m;[39m
   [90m 338 |[39m
   [90m 339 |[39m     it([32m'should return false when Redis is unavailable'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m339:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 337 |[39m     })[33m;[39m
   [90m 338 |[39m
  [31m[1m>[22m[39m[90m 339 |[39m     it([32m'should return false when Redis is unavailable'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 340 |[39m       [36mif[39m (mockRedis[33m.[39m_handlers[[32m'error'[39m]) {
   [90m 341 |[39m         mockRedis[33m.[39m_handlers[[32m'error'[39m]([36mnew[39m [33mError[39m([32m'Connection refused'[39m))[33m;[39m
   [90m 342 |[39m       }[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m346:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 344 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m service[33m.[39misTokenBlacklisted([32m'token-123'[39m)[33m;[39m
   [90m 345 |[39m
  [31m[1m>[22m[39m[90m 346 |[39m       expect([33mLogger[39m[33m.[39mprototype[33m.[39mwarn)[33m.[39mtoHaveBeenCalledWith(
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 347 |[39m         [32m'Redis unavailable, cannot check blacklist'[39m
   [90m 348 |[39m       )[33m;[39m
   [90m 349 |[39m       expect(result)[33m.[39mtoBe([36mfalse[39m)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m349:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 347 |[39m         [32m'Redis unavailable, cannot check blacklist'[39m
   [90m 348 |[39m       )[33m;[39m
  [31m[1m>[22m[39m[90m 349 |[39m       expect(result)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 350 |[39m     })[33m;[39m
   [90m 351 |[39m   })[33m;[39m
   [90m 352 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m353:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 351 |[39m   })[33m;[39m
   [90m 352 |[39m
  [31m[1m>[22m[39m[90m 353 |[39m   describe([32m'getRedisStatus'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 354 |[39m     it([32m'should return "connected" when Redis is available'[39m[33m,[39m () [33m=>[39m {
   [90m 355 |[39m       [36mconst[39m status [33m=[39m service[33m.[39mgetRedisStatus()[33m;[39m
   [90m 356 |[39m       expect(status)[33m.[39mtoBe([32m'connected'[39m)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m354:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 352 |[39m
   [90m 353 |[39m   describe([32m'getRedisStatus'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 354 |[39m     it([32m'should return "connected" when Redis is available'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 355 |[39m       [36mconst[39m status [33m=[39m service[33m.[39mgetRedisStatus()[33m;[39m
   [90m 356 |[39m       expect(status)[33m.[39mtoBe([32m'connected'[39m)[33m;[39m
   [90m 357 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m356:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 354 |[39m     it([32m'should return "connected" when Redis is available'[39m[33m,[39m () [33m=>[39m {
   [90m 355 |[39m       [36mconst[39m status [33m=[39m service[33m.[39mgetRedisStatus()[33m;[39m
  [31m[1m>[22m[39m[90m 356 |[39m       expect(status)[33m.[39mtoBe([32m'connected'[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 357 |[39m     })[33m;[39m
   [90m 358 |[39m
   [90m 359 |[39m     it([32m'should return "disconnected" when Redis is unavailable'[39m[33m,[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m359:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 357 |[39m     })[33m;[39m
   [90m 358 |[39m
  [31m[1m>[22m[39m[90m 359 |[39m     it([32m'should return "disconnected" when Redis is unavailable'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 360 |[39m       [36mif[39m (mockRedis[33m.[39m_handlers[[32m'error'[39m]) {
   [90m 361 |[39m         mockRedis[33m.[39m_handlers[[32m'error'[39m]([36mnew[39m [33mError[39m([32m'Connection refused'[39m))[33m;[39m
   [90m 362 |[39m       }[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m365:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 363 |[39m
   [90m 364 |[39m       [36mconst[39m status [33m=[39m service[33m.[39mgetRedisStatus()[33m;[39m
  [31m[1m>[22m[39m[90m 365 |[39m       expect(status)[33m.[39mtoBe([32m'disconnected'[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 366 |[39m     })[33m;[39m
   [90m 367 |[39m   })[33m;[39m
   [90m 368 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m369:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 367 |[39m   })[33m;[39m
   [90m 368 |[39m
  [31m[1m>[22m[39m[90m 369 |[39m   describe([32m'graceful degradation'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 370 |[39m     it([32m'should not throw errors when Redis operations fail'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m 371 |[39m       mockRedis[33m.[39msetex[33m.[39mmockRejectedValue([36mnew[39m [33mError[39m([32m'Redis down'[39m))[33m;[39m
   [90m 372 |[39m       mockRedis[33m.[39m[36mget[39m[33m.[39mmockRejectedValue([36mnew[39m [33mError[39m([32m'Redis down'[39m))[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m370:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 368 |[39m
   [90m 369 |[39m   describe([32m'graceful degradation'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 370 |[39m     it([32m'should not throw errors when Redis operations fail'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 371 |[39m       mockRedis[33m.[39msetex[33m.[39mmockRejectedValue([36mnew[39m [33mError[39m([32m'Redis down'[39m))[33m;[39m
   [90m 372 |[39m       mockRedis[33m.[39m[36mget[39m[33m.[39mmockRejectedValue([36mnew[39m [33mError[39m([32m'Redis down'[39m))[33m;[39m
   [90m 373 |[39m       mockRedis[33m.[39mdel[33m.[39mmockRejectedValue([36mnew[39m [33mError[39m([32m'Redis down'[39m))[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m377:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 375 |[39m       [36mconst[39m sessionData [33m=[39m createMockSessionData()[33m;[39m
   [90m 376 |[39m
  [31m[1m>[22m[39m[90m 377 |[39m       [36mawait[39m expect(service[33m.[39mcreateSession(sessionData))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 378 |[39m       [36mawait[39m expect(service[33m.[39mgetSession([32m'user-123'[39m))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
   [90m 379 |[39m       [36mawait[39m expect(service[33m.[39mdeleteSession([32m'user-123'[39m))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
   [90m 380 |[39m       [36mawait[39m expect(service[33m.[39mblacklistToken([32m'token-123'[39m[33m,[39m [35m900[39m))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m378:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 376 |[39m
   [90m 377 |[39m       [36mawait[39m expect(service[33m.[39mcreateSession(sessionData))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
  [31m[1m>[22m[39m[90m 378 |[39m       [36mawait[39m expect(service[33m.[39mgetSession([32m'user-123'[39m))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 379 |[39m       [36mawait[39m expect(service[33m.[39mdeleteSession([32m'user-123'[39m))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
   [90m 380 |[39m       [36mawait[39m expect(service[33m.[39mblacklistToken([32m'token-123'[39m[33m,[39m [35m900[39m))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
   [90m 381 |[39m       [36mawait[39m expect(service[33m.[39misTokenBlacklisted([32m'token-123'[39m))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m379:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 377 |[39m       [36mawait[39m expect(service[33m.[39mcreateSession(sessionData))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
   [90m 378 |[39m       [36mawait[39m expect(service[33m.[39mgetSession([32m'user-123'[39m))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
  [31m[1m>[22m[39m[90m 379 |[39m       [36mawait[39m expect(service[33m.[39mdeleteSession([32m'user-123'[39m))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 380 |[39m       [36mawait[39m expect(service[33m.[39mblacklistToken([32m'token-123'[39m[33m,[39m [35m900[39m))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
   [90m 381 |[39m       [36mawait[39m expect(service[33m.[39misTokenBlacklisted([32m'token-123'[39m))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
   [90m 382 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m380:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 378 |[39m       [36mawait[39m expect(service[33m.[39mgetSession([32m'user-123'[39m))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
   [90m 379 |[39m       [36mawait[39m expect(service[33m.[39mdeleteSession([32m'user-123'[39m))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
  [31m[1m>[22m[39m[90m 380 |[39m       [36mawait[39m expect(service[33m.[39mblacklistToken([32m'token-123'[39m[33m,[39m [35m900[39m))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 381 |[39m       [36mawait[39m expect(service[33m.[39misTokenBlacklisted([32m'token-123'[39m))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
   [90m 382 |[39m     })[33m;[39m
   [90m 383 |[39m   })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/services/session.service.spec.ts:[32m[1m381:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 379 |[39m       [36mawait[39m expect(service[33m.[39mdeleteSession([32m'user-123'[39m))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
   [90m 380 |[39m       [36mawait[39m expect(service[33m.[39mblacklistToken([32m'token-123'[39m[33m,[39m [35m900[39m))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
  [31m[1m>[22m[39m[90m 381 |[39m       [36mawait[39m expect(service[33m.[39misTokenBlacklisted([32m'token-123'[39m))[33m.[39mresolves[33m.[39mnot[33m.[39mtoThrow()[33m;[39m
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 382 |[39m     })[33m;[39m
   [90m 383 |[39m   })[33m;[39m
   [90m 384 |[39m })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m6:1[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 4 |[39m [36mimport[39m { [33mPrismaService[39m } [36mfrom[39m [32m'@orion/shared'[39m[33m;[39m
   [90m 5 |[39m
  [31m[1m>[22m[39m[90m 6 |[39m describe([32m'JwtStrategy'[39m[33m,[39m () [33m=>[39m {
   [90m   |[39m [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 7 |[39m   [36mlet[39m strategy[33m:[39m [33mJwtStrategy[39m[33m;[39m
   [90m 8 |[39m
   [90m 9 |[39m   [36mconst[39m mockPrismaService [33m=[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m11:19[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m  9 |[39m   [36mconst[39m mockPrismaService [33m=[39m {
   [90m 10 |[39m     user[33m:[39m {
  [31m[1m>[22m[39m[90m 11 |[39m       findUnique[33m:[39m jest[33m.[39mfn()[33m,[39m
   [90m    |[39m                   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 12 |[39m     }[33m,[39m
   [90m 13 |[39m   }[33m;[39m
   [90m 14 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m15:3[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'beforeEach'.
  [0m [90m 13 |[39m   }[33m;[39m
   [90m 14 |[39m
  [31m[1m>[22m[39m[90m 15 |[39m   beforeEach([36masync[39m () [33m=>[39m {
   [90m    |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 16 |[39m     [36mconst[39m module[33m:[39m [33mTestingModule[39m [33m=[39m [36mawait[39m [33mTest[39m[33m.[39mcreateTestingModule({
   [90m 17 |[39m       providers[33m:[39m [
   [90m 18 |[39m         [33mJwtStrategy[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m27:5[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 25 |[39m
   [90m 26 |[39m     strategy [33m=[39m module[33m.[39m[36mget[39m[33m<[39m[33mJwtStrategy[39m[33m>[39m([33mJwtStrategy[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 27 |[39m     jest[33m.[39mclearAllMocks()[33m;[39m
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 28 |[39m   })[33m;[39m
   [90m 29 |[39m
   [90m 30 |[39m   afterEach(() [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m30:3[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'afterEach'.
  [0m [90m 28 |[39m   })[33m;[39m
   [90m 29 |[39m
  [31m[1m>[22m[39m[90m 30 |[39m   afterEach(() [33m=>[39m {
   [90m    |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 31 |[39m     jest[33m.[39mresetAllMocks()[33m;[39m
   [90m 32 |[39m   })[33m;[39m
   [90m 33 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m31:5[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'jest'.
  [0m [90m 29 |[39m
   [90m 30 |[39m   afterEach(() [33m=>[39m {
  [31m[1m>[22m[39m[90m 31 |[39m     jest[33m.[39mresetAllMocks()[33m;[39m
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 32 |[39m   })[33m;[39m
   [90m 33 |[39m
   [90m 34 |[39m   describe([32m'validate'[39m[33m,[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m34:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 32 |[39m   })[33m;[39m
   [90m 33 |[39m
  [31m[1m>[22m[39m[90m 34 |[39m   describe([32m'validate'[39m[33m,[39m () [33m=>[39m {
   [90m    |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 35 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m 36 |[39m       expect(strategy)[33m.[39mtoBeDefined()[33m;[39m
   [90m 37 |[39m       expect(strategy[33m.[39mvalidate)[33m.[39mtoBeDefined()[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m35:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 33 |[39m
   [90m 34 |[39m   describe([32m'validate'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 35 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 36 |[39m       expect(strategy)[33m.[39mtoBeDefined()[33m;[39m
   [90m 37 |[39m       expect(strategy[33m.[39mvalidate)[33m.[39mtoBeDefined()[33m;[39m
   [90m 38 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m36:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 34 |[39m   describe([32m'validate'[39m[33m,[39m () [33m=>[39m {
   [90m 35 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 36 |[39m       expect(strategy)[33m.[39mtoBeDefined()[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 37 |[39m       expect(strategy[33m.[39mvalidate)[33m.[39mtoBeDefined()[33m;[39m
   [90m 38 |[39m     })[33m;[39m
   [90m 39 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m37:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 35 |[39m     it([32m'should be defined'[39m[33m,[39m () [33m=>[39m {
   [90m 36 |[39m       expect(strategy)[33m.[39mtoBeDefined()[33m;[39m
  [31m[1m>[22m[39m[90m 37 |[39m       expect(strategy[33m.[39mvalidate)[33m.[39mtoBeDefined()[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 38 |[39m     })[33m;[39m
   [90m 39 |[39m
   [90m 40 |[39m     it([32m'should validate and return user when payload is valid and user is active'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m40:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 38 |[39m     })[33m;[39m
   [90m 39 |[39m
  [31m[1m>[22m[39m[90m 40 |[39m     it([32m'should validate and return user when payload is valid and user is active'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 41 |[39m       [36mconst[39m payload[33m:[39m [33mJwtPayload[39m [33m=[39m {
   [90m 42 |[39m         sub[33m:[39m [32m'user-123'[39m[33m,[39m
   [90m 43 |[39m         email[33m:[39m [32m'test@example.com'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m57:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 55 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m strategy[33m.[39mvalidate(payload)[33m;[39m
   [90m 56 |[39m
  [31m[1m>[22m[39m[90m 57 |[39m       expect(mockPrismaService[33m.[39muser[33m.[39mfindUnique)[33m.[39mtoHaveBeenCalledWith({
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 58 |[39m         where[33m:[39m { id[33m:[39m payload[33m.[39msub }[33m,[39m
   [90m 59 |[39m         select[33m:[39m {
   [90m 60 |[39m           id[33m:[39m [36mtrue[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m66:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 64 |[39m         }[33m,[39m
   [90m 65 |[39m       })[33m;[39m
  [31m[1m>[22m[39m[90m 66 |[39m       expect(result)[33m.[39mtoEqual(mockUser)[33m;[39m
   [90m    |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 67 |[39m     })[33m;[39m
   [90m 68 |[39m
   [90m 69 |[39m     it([32m'should throw UnauthorizedException when user does not exist'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m69:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 67 |[39m     })[33m;[39m
   [90m 68 |[39m
  [31m[1m>[22m[39m[90m 69 |[39m     it([32m'should throw UnauthorizedException when user does not exist'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 70 |[39m       [36mconst[39m payload[33m:[39m [33mJwtPayload[39m [33m=[39m {
   [90m 71 |[39m         sub[33m:[39m [32m'non-existent-user'[39m[33m,[39m
   [90m 72 |[39m         email[33m:[39m [32m'nonexistent@example.com'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m77:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 75 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockResolvedValue([36mnull[39m)[33m;[39m
   [90m 76 |[39m
  [31m[1m>[22m[39m[90m 77 |[39m       [36mawait[39m expect(strategy[33m.[39mvalidate(payload))[33m.[39mrejects[33m.[39mtoThrow([33mUnauthorizedException[39m)[33m;[39m
   [90m    |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 78 |[39m       [36mawait[39m expect(strategy[33m.[39mvalidate(payload))[33m.[39mrejects[33m.[39mtoThrow(
   [90m 79 |[39m         [32m'User not found or inactive'[39m
   [90m 80 |[39m       )[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m78:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 76 |[39m
   [90m 77 |[39m       [36mawait[39m expect(strategy[33m.[39mvalidate(payload))[33m.[39mrejects[33m.[39mtoThrow([33mUnauthorizedException[39m)[33m;[39m
  [31m[1m>[22m[39m[90m 78 |[39m       [36mawait[39m expect(strategy[33m.[39mvalidate(payload))[33m.[39mrejects[33m.[39mtoThrow(
   [90m    |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 79 |[39m         [32m'User not found or inactive'[39m
   [90m 80 |[39m       )[33m;[39m
   [90m 81 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m83:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 81 |[39m     })[33m;[39m
   [90m 82 |[39m
  [31m[1m>[22m[39m[90m 83 |[39m     it([32m'should throw UnauthorizedException when user is inactive'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m    |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 84 |[39m       [36mconst[39m payload[33m:[39m [33mJwtPayload[39m [33m=[39m {
   [90m 85 |[39m         sub[33m:[39m [32m'user-123'[39m[33m,[39m
   [90m 86 |[39m         email[33m:[39m [32m'inactive@example.com'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m98:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m  96 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockResolvedValue(mockInactiveUser)[33m;[39m
   [90m  97 |[39m
  [31m[1m>[22m[39m[90m  98 |[39m       [36mawait[39m expect(strategy[33m.[39mvalidate(payload))[33m.[39mrejects[33m.[39mtoThrow([33mUnauthorizedException[39m)[33m;[39m
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m  99 |[39m       [36mawait[39m expect(strategy[33m.[39mvalidate(payload))[33m.[39mrejects[33m.[39mtoThrow(
   [90m 100 |[39m         [32m'User not found or inactive'[39m
   [90m 101 |[39m       )[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m99:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m  97 |[39m
   [90m  98 |[39m       [36mawait[39m expect(strategy[33m.[39mvalidate(payload))[33m.[39mrejects[33m.[39mtoThrow([33mUnauthorizedException[39m)[33m;[39m
  [31m[1m>[22m[39m[90m  99 |[39m       [36mawait[39m expect(strategy[33m.[39mvalidate(payload))[33m.[39mrejects[33m.[39mtoThrow(
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 100 |[39m         [32m'User not found or inactive'[39m
   [90m 101 |[39m       )[33m;[39m
   [90m 102 |[39m     })[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m104:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 102 |[39m     })[33m;[39m
   [90m 103 |[39m
  [31m[1m>[22m[39m[90m 104 |[39m     it([32m'should handle user with missing optional fields'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 105 |[39m       [36mconst[39m payload[33m:[39m [33mJwtPayload[39m [33m=[39m {
   [90m 106 |[39m         sub[33m:[39m [32m'user-123'[39m[33m,[39m
   [90m 107 |[39m         email[33m:[39m [32m'test@example.com'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m121:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 119 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m strategy[33m.[39mvalidate(payload)[33m;[39m
   [90m 120 |[39m
  [31m[1m>[22m[39m[90m 121 |[39m       expect(result)[33m.[39mtoEqual(mockUser)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 122 |[39m     })[33m;[39m
   [90m 123 |[39m
   [90m 124 |[39m     it([32m'should validate multiple users sequentially'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m124:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 122 |[39m     })[33m;[39m
   [90m 123 |[39m
  [31m[1m>[22m[39m[90m 124 |[39m     it([32m'should validate multiple users sequentially'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 125 |[39m       [36mconst[39m users [33m=[39m [
   [90m 126 |[39m         {
   [90m 127 |[39m           payload[33m:[39m { sub[33m:[39m [32m'user-1'[39m[33m,[39m email[33m:[39m [32m'user1@example.com'[39m }[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m143:9[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 141 |[39m         mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockResolvedValue(user)[33m;[39m
   [90m 142 |[39m         [36mconst[39m result [33m=[39m [36mawait[39m strategy[33m.[39mvalidate(payload)[33m;[39m
  [31m[1m>[22m[39m[90m 143 |[39m         expect(result)[33m.[39mtoEqual(user)[33m;[39m
   [90m     |[39m         [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 144 |[39m       }
   [90m 145 |[39m
   [90m 146 |[39m       expect(mockPrismaService[33m.[39muser[33m.[39mfindUnique)[33m.[39mtoHaveBeenCalledTimes([35m3[39m)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m146:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 144 |[39m       }
   [90m 145 |[39m
  [31m[1m>[22m[39m[90m 146 |[39m       expect(mockPrismaService[33m.[39muser[33m.[39mfindUnique)[33m.[39mtoHaveBeenCalledTimes([35m3[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 147 |[39m     })[33m;[39m
   [90m 148 |[39m
   [90m 149 |[39m     it([32m'should handle database errors gracefully'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m149:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 147 |[39m     })[33m;[39m
   [90m 148 |[39m
  [31m[1m>[22m[39m[90m 149 |[39m     it([32m'should handle database errors gracefully'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 150 |[39m       [36mconst[39m payload[33m:[39m [33mJwtPayload[39m [33m=[39m {
   [90m 151 |[39m         sub[33m:[39m [32m'user-123'[39m[33m,[39m
   [90m 152 |[39m         email[33m:[39m [32m'test@example.com'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m158:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 156 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockRejectedValue(dbError)[33m;[39m
   [90m 157 |[39m
  [31m[1m>[22m[39m[90m 158 |[39m       [36mawait[39m expect(strategy[33m.[39mvalidate(payload))[33m.[39mrejects[33m.[39mtoThrow([32m'Database connection failed'[39m)[33m;[39m
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 159 |[39m     })[33m;[39m
   [90m 160 |[39m
   [90m 161 |[39m     it([32m'should only select specified fields from database'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m161:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 159 |[39m     })[33m;[39m
   [90m 160 |[39m
  [31m[1m>[22m[39m[90m 161 |[39m     it([32m'should only select specified fields from database'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 162 |[39m       [36mconst[39m payload[33m:[39m [33mJwtPayload[39m [33m=[39m {
   [90m 163 |[39m         sub[33m:[39m [32m'user-123'[39m[33m,[39m
   [90m 164 |[39m         email[33m:[39m [32m'test@example.com'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m178:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 176 |[39m       [36mawait[39m strategy[33m.[39mvalidate(payload)[33m;[39m
   [90m 177 |[39m
  [31m[1m>[22m[39m[90m 178 |[39m       expect(mockPrismaService[33m.[39muser[33m.[39mfindUnique)[33m.[39mtoHaveBeenCalledWith({
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 179 |[39m         where[33m:[39m { id[33m:[39m payload[33m.[39msub }[33m,[39m
   [90m 180 |[39m         select[33m:[39m {
   [90m 181 |[39m           id[33m:[39m [36mtrue[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m189:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 187 |[39m     })[33m;[39m
   [90m 188 |[39m
  [31m[1m>[22m[39m[90m 189 |[39m     it([32m'should handle special characters in email'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 190 |[39m       [36mconst[39m payload[33m:[39m [33mJwtPayload[39m [33m=[39m {
   [90m 191 |[39m         sub[33m:[39m [32m'user-123'[39m[33m,[39m
   [90m 192 |[39m         email[33m:[39m [32m'test+tag@example.com'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m206:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 204 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m strategy[33m.[39mvalidate(payload)[33m;[39m
   [90m 205 |[39m
  [31m[1m>[22m[39m[90m 206 |[39m       expect(result)[33m.[39mtoEqual(mockUser)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 207 |[39m     })[33m;[39m
   [90m 208 |[39m
   [90m 209 |[39m     it([32m'should validate user with UUID format user ID'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m209:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 207 |[39m     })[33m;[39m
   [90m 208 |[39m
  [31m[1m>[22m[39m[90m 209 |[39m     it([32m'should validate user with UUID format user ID'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 210 |[39m       [36mconst[39m payload[33m:[39m [33mJwtPayload[39m [33m=[39m {
   [90m 211 |[39m         sub[33m:[39m [32m'550e8400-e29b-41d4-a716-446655440000'[39m[33m,[39m
   [90m 212 |[39m         email[33m:[39m [32m'test@example.com'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m226:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 224 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m strategy[33m.[39mvalidate(payload)[33m;[39m
   [90m 225 |[39m
  [31m[1m>[22m[39m[90m 226 |[39m       expect(result[33m.[39mid)[33m.[39mtoBe(payload[33m.[39msub)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 227 |[39m     })[33m;[39m
   [90m 228 |[39m   })[33m;[39m
   [90m 229 |[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m230:3[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 228 |[39m   })[33m;[39m
   [90m 229 |[39m
  [31m[1m>[22m[39m[90m 230 |[39m   describe([32m'edge cases'[39m[33m,[39m () [33m=>[39m {
   [90m     |[39m   [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 231 |[39m     it([32m'should handle rapid successive validations'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m 232 |[39m       [36mconst[39m payload[33m:[39m [33mJwtPayload[39m [33m=[39m {
   [90m 233 |[39m         sub[33m:[39m [32m'user-123'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m231:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 229 |[39m
   [90m 230 |[39m   describe([32m'edge cases'[39m[33m,[39m () [33m=>[39m {
  [31m[1m>[22m[39m[90m 231 |[39m     it([32m'should handle rapid successive validations'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 232 |[39m       [36mconst[39m payload[33m:[39m [33mJwtPayload[39m [33m=[39m {
   [90m 233 |[39m         sub[33m:[39m [32m'user-123'[39m[33m,[39m
   [90m 234 |[39m         email[33m:[39m [32m'test@example.com'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m250:9[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 248 |[39m
   [90m 249 |[39m       results[33m.[39mforEach((result[33m:[39m unknown) [33m=>[39m {
  [31m[1m>[22m[39m[90m 250 |[39m         expect(result)[33m.[39mtoEqual(mockUser)[33m;[39m
   [90m     |[39m         [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 251 |[39m       })[33m;[39m
   [90m 252 |[39m
   [90m 253 |[39m       expect(mockPrismaService[33m.[39muser[33m.[39mfindUnique)[33m.[39mtoHaveBeenCalledTimes([35m100[39m)[33m;[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m253:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 251 |[39m       })[33m;[39m
   [90m 252 |[39m
  [31m[1m>[22m[39m[90m 253 |[39m       expect(mockPrismaService[33m.[39muser[33m.[39mfindUnique)[33m.[39mtoHaveBeenCalledTimes([35m100[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 254 |[39m     })[33m;[39m
   [90m 255 |[39m
   [90m 256 |[39m     it([32m'should handle user status changing between validations'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m256:5[22m[39m[1m[39m[22m
[90mTS2593: [39mCannot find name 'it'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig.
  [0m [90m 254 |[39m     })[33m;[39m
   [90m 255 |[39m
  [31m[1m>[22m[39m[90m 256 |[39m     it([32m'should handle user status changing between validations'[39m[33m,[39m [36masync[39m () [33m=>[39m {
   [90m     |[39m     [31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 257 |[39m       [36mconst[39m payload[33m:[39m [33mJwtPayload[39m [33m=[39m {
   [90m 258 |[39m         sub[33m:[39m [32m'user-123'[39m[33m,[39m
   [90m 259 |[39m         email[33m:[39m [32m'test@example.com'[39m[33m,[39m[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m271:7[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 269 |[39m
   [90m 270 |[39m       [36mconst[39m result1 [33m=[39m [36mawait[39m strategy[33m.[39mvalidate(payload)[33m;[39m
  [31m[1m>[22m[39m[90m 271 |[39m       expect(result1[33m.[39misActive)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
   [90m     |[39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 272 |[39m
   [90m 273 |[39m       [90m// Second validation - user is now inactive[39m
   [90m 274 |[39m       mockPrismaService[33m.[39muser[33m.[39mfindUnique[33m.[39mmockResolvedValueOnce({[0m

[1m[31mERROR[39m[22m in [1m./src/app/strategies/jwt.strategy.spec.ts:[32m[1m281:13[22m[39m[1m[39m[22m
[90mTS2304: [39mCannot find name 'expect'.
  [0m [90m 279 |[39m       })[33m;[39m
   [90m 280 |[39m
  [31m[1m>[22m[39m[90m 281 |[39m       [36mawait[39m expect(strategy[33m.[39mvalidate(payload))[33m.[39mrejects[33m.[39mtoThrow([33mUnauthorizedException[39m)[33m;[39m
   [90m     |[39m             [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m
   [90m 282 |[39m     })[33m;[39m
   [90m 283 |[39m   })[33m;[39m
   [90m 284 |[39m })[33m;[39m[0m

webpack compiled with [1m[31m386 errors[39m[22m (1061e094d85ab276)
Warning: command "webpack-cli build --node-env=production" exited with non-zero status code