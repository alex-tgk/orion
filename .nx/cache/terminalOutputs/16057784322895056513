[0m[7m[1m[31m FAIL [39m[22m[27m[0m [0m[7m[37m auth [39m[27m[0m [2mpackages/auth/src/app/strategies/[22m[1mjwt.strategy.spec.ts[22m
  [1m‚óè [22mTest suite failed to run

    [96mpackages/auth/src/app/strategies/jwt.strategy.spec.ts[0m:[93m8[0m:[93m7[0m - [91merror[0m[90m TS6133: [0m'prismaService' is declared but its value is never read.

    [7m8[0m   let prismaService: jest.Mocked<PrismaService>;
    [7m [0m [91m      ~~~~~~~~~~~~~[0m
    [96mpackages/auth/src/app/strategies/jwt.strategy.spec.ts[0m:[93m251[0m:[93m24[0m - [91merror[0m[90m TS7006: [0mParameter 'result' implicitly has an 'any' type.

    [7m251[0m       results.forEach((result) => {
    [7m   [0m [91m                       ~~~~~~[0m

[0m[7m[1m[31m FAIL [39m[22m[27m[0m [0m[7m[37m auth [39m[27m[0m [2mpackages/auth/src/app/services/[22m[1mauth.service.spec.ts[22m
  [1m‚óè [22mTest suite failed to run

    [96mpackages/auth/src/app/services/auth.service.spec.ts[0m:[93m12[0m:[93m7[0m - [91merror[0m[90m TS6133: [0m'prismaService' is declared but its value is never read.

    [7m12[0m   let prismaService: jest.Mocked<PrismaService>;
    [7m  [0m [91m      ~~~~~~~~~~~~~[0m
    [96mpackages/auth/src/app/services/auth.service.spec.ts[0m:[93m13[0m:[93m7[0m - [91merror[0m[90m TS6133: [0m'jwtService' is declared but its value is never read.

    [7m13[0m   let jwtService: jest.Mocked<JwtService>;
    [7m  [0m [91m      ~~~~~~~~~~[0m
    [96mpackages/auth/src/app/services/auth.service.spec.ts[0m:[93m14[0m:[93m7[0m - [91merror[0m[90m TS6133: [0m'hashService' is declared but its value is never read.

    [7m14[0m   let hashService: jest.Mocked<HashService>;
    [7m  [0m [91m      ~~~~~~~~~~~[0m
    [96mpackages/auth/src/app/services/auth.service.spec.ts[0m:[93m15[0m:[93m7[0m - [91merror[0m[90m TS6133: [0m'sessionService' is declared but its value is never read.

    [7m15[0m   let sessionService: jest.Mocked<SessionService>;
    [7m  [0m [91m      ~~~~~~~~~~~~~~[0m

[0m[7m[1m[31m FAIL [39m[22m[27m[0m [0m[7m[37m auth [39m[27m[0m [2mpackages/auth/src/app/services/[22m[1mhash.service.spec.ts[22m
  [1m‚óè [22mTest suite failed to run

    [96mpackages/auth/src/app/services/hash.service.spec.ts[0m:[93m67[0m:[93m43[0m - [91merror[0m[90m TS2345: [0mArgument of type 'Error' is not assignable to parameter of type 'never'.

    [7m67[0m       mockedBcrypt.hash.mockRejectedValue(error);
    [7m  [0m [91m                                          ~~~~~[0m
    [96mpackages/auth/src/app/services/hash.service.spec.ts[0m:[93m134[0m:[93m46[0m - [91merror[0m[90m TS2345: [0mArgument of type 'Error' is not assignable to parameter of type 'never'.

    [7m134[0m       mockedBcrypt.compare.mockRejectedValue(error);
    [7m   [0m [91m                                             ~~~~~[0m
    [96mpackages/auth/src/app/services/hash.service.spec.ts[0m:[93m146[0m:[93m46[0m - [91merror[0m[90m TS2345: [0mArgument of type 'Error' is not assignable to parameter of type 'never'.

    [7m146[0m       mockedBcrypt.compare.mockRejectedValue(error);
    [7m   [0m [91m                                             ~~~~~[0m

[0m[7m[1m[31m FAIL [39m[22m[27m[0m [0m[7m[37m auth [39m[27m[0m [2mpackages/auth/src/app/services/[22m[1msession.service.spec.ts[22m
  [1m‚óè [22mTest suite failed to run

    [96mpackages/auth/src/app/services/session.service.ts[0m:[93m43[0m:[93m10[0m - [91merror[0m[90m TS2352: [0mConversion of type 'this' to type '{ isRedisAvailable: boolean; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
      Type 'SessionService' is not comparable to type '{ isRedisAvailable: boolean; }'.
        Property 'isRedisAvailable' is private in type 'SessionService' but not in type '{ isRedisAvailable: boolean; }'.

    [7m43[0m         (this as { isRedisAvailable: boolean }).isRedisAvailable = true;
    [7m  [0m [91m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mpackages/auth/src/app/services/session.service.ts[0m:[93m46[0m:[93m1[0m - [91merror[0m[90m TS2304: [0mCannot find name 'fa'.

    [7m46[0m fa
    [7m  [0m [91m~~[0m
    [96mpackages/auth/src/app/services/session.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2352: [0mConversion of type 'this' to type '{ isRedisAvailable: boolean; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
      Type 'SessionService' is not comparable to type '{ isRedisAvailable: boolean; }'.
        Property 'isRedisAvailable' is private in type 'SessionService' but not in type '{ isRedisAvailable: boolean; }'.

    [7m48[0m         (this as { isRedisAvailable: boolean }).isRedisAvailable = false;
    [7m  [0m [91m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    [96mpackages/auth/src/app/services/session.service.ts[0m:[93m52[0m:[93m56[0m - [91merror[0m[90m TS18046: [0m'error' is of type 'unknown'.

    [7m52[0m       this.logger.error(`Failed to initialize Redis: ${error.message}`);
    [7m  [0m [91m                                                       ~~~~~[0m
    [96mpackages/auth/src/app/services/session.service.ts[0m:[93m69[0m:[93m54[0m - [91merror[0m[90m TS18046: [0m'error' is of type 'unknown'.

    [7m69[0m       this.logger.error(`Failed to create session: ${error.message}`);
    [7m  [0m [91m                                                     ~~~~~[0m
    [96mpackages/auth/src/app/services/session.service.ts[0m:[93m89[0m:[93m51[0m - [91merror[0m[90m TS18046: [0m'error' is of type 'unknown'.

    [7m89[0m       this.logger.error(`Failed to get session: ${error.message}`);
    [7m  [0m [91m                                                  ~~~~~[0m
    [96mpackages/auth/src/app/services/session.service.ts[0m:[93m105[0m:[93m54[0m - [91merror[0m[90m TS18046: [0m'error' is of type 'unknown'.

    [7m105[0m       this.logger.error(`Failed to delete session: ${error.message}`);
    [7m   [0m [91m                                                     ~~~~~[0m
    [96mpackages/auth/src/app/services/session.service.ts[0m:[93m120[0m:[93m55[0m - [91merror[0m[90m TS18046: [0m'error' is of type 'unknown'.

    [7m120[0m       this.logger.error(`Failed to blacklist token: ${error.message}`);
    [7m   [0m [91m                                                      ~~~~~[0m
    [96mpackages/auth/src/app/services/session.service.ts[0m:[93m135[0m:[93m55[0m - [91merror[0m[90m TS18046: [0m'error' is of type 'unknown'.

    [7m135[0m       this.logger.error(`Failed to check blacklist: ${error.message}`);
    [7m   [0m [91m                                                      ~~~~~[0m

[0m[7m[1m[31m FAIL [39m[22m[27m[0m [0m[7m[37m auth [39m[27m[0m [2mpackages/auth/src/app/[22m[1mauth.controller.spec.ts[22m
  [1m‚óè [22mTest suite failed to run

    [96mpackages/auth/src/app/services/auth.service.ts[0m:[93m30[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'PrismaService'.

    [7m30[0m     const user = await this.prisma.user.findUnique({
    [7m  [0m [91m                                   ~~~~[0m
    [96mpackages/auth/src/app/services/auth.service.ts[0m:[93m54[0m:[93m23[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'PrismaService'.

    [7m54[0m     await this.prisma.user.update({
    [7m  [0m [91m                      ~~~~[0m
    [96mpackages/auth/src/app/services/auth.service.ts[0m:[93m109[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'refreshToken' does not exist on type 'PrismaService'.

    [7m109[0m       await this.prisma.refreshToken.updateMany({
    [7m   [0m [91m                        ~~~~~~~~~~~~[0m
    [96mpackages/auth/src/app/services/auth.service.ts[0m:[93m121[0m:[93m42[0m - [91merror[0m[90m TS18046: [0m'error' is of type 'unknown'.

    [7m121[0m       this.logger.error(`Logout error: ${error.message}`);
    [7m   [0m [91m                                         ~~~~~[0m
    [96mpackages/auth/src/app/services/auth.service.ts[0m:[93m132[0m:[93m43[0m - [91merror[0m[90m TS2339: [0mProperty 'refreshToken' does not exist on type 'PrismaService'.

    [7m132[0m     const storedToken = await this.prisma.refreshToken.findUnique({
    [7m   [0m [91m                                          ~~~~~~~~~~~~[0m
    [96mpackages/auth/src/app/services/auth.service.ts[0m:[93m163[0m:[93m23[0m - [91merror[0m[90m TS2339: [0mProperty 'refreshToken' does not exist on type 'PrismaService'.

    [7m163[0m     await this.prisma.refreshToken.update({
    [7m   [0m [91m                      ~~~~~~~~~~~~[0m
    [96mpackages/auth/src/app/services/auth.service.ts[0m:[93m197[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'PrismaService'.

    [7m197[0m     const user = await this.prisma.user.findUnique({
    [7m   [0m [91m                                   ~~~~[0m
    [96mpackages/auth/src/app/services/auth.service.ts[0m:[93m256[0m:[93m23[0m - [91merror[0m[90m TS2339: [0mProperty 'refreshToken' does not exist on type 'PrismaService'.

    [7m256[0m     await this.prisma.refreshToken.create({
    [7m   [0m [91m                      ~~~~~~~~~~~~[0m

[31mFailed to collect coverage from /Users/acarroll/dev/projects/orion/packages/auth/src/app/dto/auth-response.dto.ts[39m
[31mERROR: [96mpackages/auth/src/app/dto/auth-response.dto.ts[0m:[93m2[0m:[93m3[0m - [91merror[0m[90m TS2564: [0mProperty 'id' has no initializer and is not definitely assigned in the constructor.[39m
[31m[39m
[31m[7m2[0m   id: string;[39m
[31m[7m [0m [91m  ~~[0m[39m
[31m[96mpackages/auth/src/app/dto/auth-response.dto.ts[0m:[93m3[0m:[93m3[0m - [91merror[0m[90m TS2564: [0mProperty 'email' has no initializer and is not definitely assigned in the constructor.[39m
[31m[39m
[31m[7m3[0m   email: string;[39m
[31m[7m [0m [91m  ~~~~~[0m[39m
[31m[96mpackages/auth/src/app/dto/auth-response.dto.ts[0m:[93m4[0m:[93m3[0m - [91merror[0m[90m TS2564: [0mProperty 'name' has no initializer and is not definitely assigned in the constructor.[39m
[31m[39m
[31m[7m4[0m   name: string;[39m
[31m[7m [0m [91m  ~~~~[0m[39m
[31m[96mpackages/auth/src/app/dto/auth-response.dto.ts[0m:[93m5[0m:[93m3[0m - [91merror[0m[90m TS2564: [0mProperty 'createdAt' has no initializer and is not definitely assigned in the constructor.[39m
[31m[39m
[31m[7m5[0m   createdAt: Date;[39m
[31m[7m [0m [91m  ~~~~~~~~~[0m[39m
[31m[96mpackages/auth/src/app/dto/auth-response.dto.ts[0m:[93m9[0m:[93m3[0m - [91merror[0m[90m TS2564: [0mProperty 'accessToken' has no initializer and is not definitely assigned in the constructor.[39m
[31m[39m
[31m[7m9[0m   accessToken: string;[39m
[31m[7m [0m [91m  ~~~~~~~~~~~[0m[39m
[31m[96mpackages/auth/src/app/dto/auth-response.dto.ts[0m:[93m10[0m:[93m3[0m - [91merror[0m[90m TS2564: [0mProperty 'refreshToken' has no initializer and is not definitely assigned in the constructor.[39m
[31m[39m
[31m[7m10[0m   refreshToken: string;[39m
[31m[7m  [0m [91m  ~~~~~~~~~~~~[0m[39m
[31m[96mpackages/auth/src/app/dto/auth-response.dto.ts[0m:[93m11[0m:[93m3[0m - [91merror[0m[90m TS2564: [0mProperty 'expiresIn' has no initializer and is not definitely assigned in the constructor.[39m
[31m[39m
[31m[7m11[0m   expiresIn: number;[39m
[31m[7m  [0m [91m  ~~~~~~~~~[0m[39m
[31m[96mpackages/auth/src/app/dto/auth-response.dto.ts[0m:[93m12[0m:[93m3[0m - [91merror[0m[90m TS2564: [0mProperty 'user' has no initializer and is not definitely assigned in the constructor.[39m
[31m[39m
[31m[7m12[0m   user: UserResponseDto;[39m
[31m[7m  [0m [91m  ~~~~[0m[39m
[31mSTACK: [39m
[31mFailed to collect coverage from /Users/acarroll/dev/projects/orion/packages/auth/src/app/dto/login.dto.ts[39m
[31mERROR: [96mpackages/auth/src/app/dto/login.dto.ts[0m:[93m6[0m:[93m3[0m - [91merror[0m[90m TS2564: [0mProperty 'email' has no initializer and is not definitely assigned in the constructor.[39m
[31m[39m
[31m[7m6[0m   email: string;[39m
[31m[7m [0m [91m  ~~~~~[0m[39m
[31m[96mpackages/auth/src/app/dto/login.dto.ts[0m:[93m11[0m:[93m3[0m - [91merror[0m[90m TS2564: [0mProperty 'password' has no initializer and is not definitely assigned in the constructor.[39m
[31m[39m
[31m[7m11[0m   password: string;[39m
[31m[7m  [0m [91m  ~~~~~~~~[0m[39m
[31mSTACK: [39m
[31mFailed to collect coverage from /Users/acarroll/dev/projects/orion/packages/auth/src/app/dto/refresh-token.dto.ts[39m
[31mERROR: [96mpackages/auth/src/app/dto/refresh-token.dto.ts[0m:[93m6[0m:[93m3[0m - [91merror[0m[90m TS2564: [0mProperty 'refreshToken' has no initializer and is not definitely assigned in the constructor.[39m
[31m[39m
[31m[7m6[0m   refreshToken: string;[39m
[31m[7m [0m [91m  ~~~~~~~~~~~~[0m[39m
[31mSTACK: [39m
[31mFailed to collect coverage from /Users/acarroll/dev/projects/orion/packages/auth/src/app/services/session.service.ts[39m
[31mERROR: [96mpackages/auth/src/app/services/session.service.ts[0m:[93m43[0m:[93m10[0m - [91merror[0m[90m TS2352: [0mConversion of type 'this' to type '{ isRedisAvailable: boolean; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.[39m
[31m  Type 'SessionService' is not comparable to type '{ isRedisAvailable: boolean; }'.[39m
[31m    Property 'isRedisAvailable' is private in type 'SessionService' but not in type '{ isRedisAvailable: boolean; }'.[39m
[31m[39m
[31m[7m43[0m         (this as { isRedisAvailable: boolean }).isRedisAvailable = true;[39m
[31m[7m  [0m [91m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m[39m
[31m[96mpackages/auth/src/app/services/session.service.ts[0m:[93m46[0m:[93m1[0m - [91merror[0m[90m TS2304: [0mCannot find name 'fa'.[39m
[31m[39m
[31m[7m46[0m fa[39m
[31m[7m  [0m [91m~~[0m[39m
[31m[96mpackages/auth/src/app/services/session.service.ts[0m:[93m48[0m:[93m10[0m - [91merror[0m[90m TS2352: [0mConversion of type 'this' to type '{ isRedisAvailable: boolean; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.[39m
[31m  Type 'SessionService' is not comparable to type '{ isRedisAvailable: boolean; }'.[39m
[31m    Property 'isRedisAvailable' is private in type 'SessionService' but not in type '{ isRedisAvailable: boolean; }'.[39m
[31m[39m
[31m[7m48[0m         (this as { isRedisAvailable: boolean }).isRedisAvailable = false;[39m
[31m[7m  [0m [91m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m[39m
[31m[96mpackages/auth/src/app/services/session.service.ts[0m:[93m52[0m:[93m56[0m - [91merror[0m[90m TS18046: [0m'error' is of type 'unknown'.[39m
[31m[39m
[31m[7m52[0m       this.logger.error(`Failed to initialize Redis: ${error.message}`);[39m
[31m[7m  [0m [91m                                                       ~~~~~[0m[39m
[31m[96mpackages/auth/src/app/services/session.service.ts[0m:[93m69[0m:[93m54[0m - [91merror[0m[90m TS18046: [0m'error' is of type 'unknown'.[39m
[31m[39m
[31m[7m69[0m       this.logger.error(`Failed to create session: ${error.message}`);[39m
[31m[7m  [0m [91m                                                     ~~~~~[0m[39m
[31m[96mpackages/auth/src/app/services/session.service.ts[0m:[93m89[0m:[93m51[0m - [91merror[0m[90m TS18046: [0m'error' is of type 'unknown'.[39m
[31m[39m
[31m[7m89[0m       this.logger.error(`Failed to get session: ${error.message}`);[39m
[31m[7m  [0m [91m                                                  ~~~~~[0m[39m
[31m[96mpackages/auth/src/app/services/session.service.ts[0m:[93m105[0m:[93m54[0m - [91merror[0m[90m TS18046: [0m'error' is of type 'unknown'.[39m
[31m[39m
[31m[7m105[0m       this.logger.error(`Failed to delete session: ${error.message}`);[39m
[31m[7m   [0m [91m                                                     ~~~~~[0m[39m
[31m[96mpackages/auth/src/app/services/session.service.ts[0m:[93m120[0m:[93m55[0m - [91merror[0m[90m TS18046: [0m'error' is of type 'unknown'.[39m
[31m[39m
[31m[7m120[0m       this.logger.error(`Failed to blacklist token: ${error.message}`);[39m
[31m[7m   [0m [91m                                                      ~~~~~[0m[39m
[31m[96mpackages/auth/src/app/services/session.service.ts[0m:[93m135[0m:[93m55[0m - [91merror[0m[90m TS18046: [0m'error' is of type 'unknown'.[39m
[31m[39m
[31m[7m135[0m       this.logger.error(`Failed to check blacklist: ${error.message}`);[39m
[31m[7m   [0m [91m                                                      ~~~~~[0m[39m
[31mSTACK: [39m
[31mFailed to collect coverage from /Users/acarroll/dev/projects/orion/packages/auth/src/app/services/auth.service.ts[39m
[31mERROR: [96mpackages/auth/src/app/services/auth.service.ts[0m:[93m30[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'PrismaService'.[39m
[31m[39m
[31m[7m30[0m     const user = await this.prisma.user.findUnique({[39m
[31m[7m  [0m [91m                                   ~~~~[0m[39m
[31m[96mpackages/auth/src/app/services/auth.service.ts[0m:[93m54[0m:[93m23[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'PrismaService'.[39m
[31m[39m
[31m[7m54[0m     await this.prisma.user.update({[39m
[31m[7m  [0m [91m                      ~~~~[0m[39m
[31m[96mpackages/auth/src/app/services/auth.service.ts[0m:[93m109[0m:[93m25[0m - [91merror[0m[90m TS2339: [0mProperty 'refreshToken' does not exist on type 'PrismaService'.[39m
[31m[39m
[31m[7m109[0m       await this.prisma.refreshToken.updateMany({[39m
[31m[7m   [0m [91m                        ~~~~~~~~~~~~[0m[39m
[31m[96mpackages/auth/src/app/services/auth.service.ts[0m:[93m121[0m:[93m42[0m - [91merror[0m[90m TS18046: [0m'error' is of type 'unknown'.[39m
[31m[39m
[31m[7m121[0m       this.logger.error(`Logout error: ${error.message}`);[39m
[31m[7m   [0m [91m                                         ~~~~~[0m[39m
[31m[96mpackages/auth/src/app/services/auth.service.ts[0m:[93m132[0m:[93m43[0m - [91merror[0m[90m TS2339: [0mProperty 'refreshToken' does not exist on type 'PrismaService'.[39m
[31m[39m
[31m[7m132[0m     const storedToken = await this.prisma.refreshToken.findUnique({[39m
[31m[7m   [0m [91m                                          ~~~~~~~~~~~~[0m[39m
[31m[96mpackages/auth/src/app/services/auth.service.ts[0m:[93m163[0m:[93m23[0m - [91merror[0m[90m TS2339: [0mProperty 'refreshToken' does not exist on type 'PrismaService'.[39m
[31m[39m
[31m[7m163[0m     await this.prisma.refreshToken.update({[39m
[31m[7m   [0m [91m                      ~~~~~~~~~~~~[0m[39m
[31m[96mpackages/auth/src/app/services/auth.service.ts[0m:[93m197[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'PrismaService'.[39m
[31m[39m
[31m[7m197[0m     const user = await this.prisma.user.findUnique({[39m
[31m[7m   [0m [91m                                   ~~~~[0m[39m
[31m[96mpackages/auth/src/app/services/auth.service.ts[0m:[93m256[0m:[93m23[0m - [91merror[0m[90m TS2339: [0mProperty 'refreshToken' does not exist on type 'PrismaService'.[39m
[31m[39m
[31m[7m256[0m     await this.prisma.refreshToken.create({[39m
[31m[7m   [0m [91m                      ~~~~~~~~~~~~[0m[39m
[31mSTACK: [39m
[31mFailed to collect coverage from /Users/acarroll/dev/projects/orion/packages/auth/src/app/strategies/jwt.strategy.ts[39m
[31mERROR: [96mpackages/auth/src/app/strategies/jwt.strategy.ts[0m:[93m22[0m:[93m36[0m - [91merror[0m[90m TS2339: [0mProperty 'user' does not exist on type 'PrismaService'.[39m
[31m[39m
[31m[7m22[0m     const user = await this.prisma.user.findUnique({[39m
[31m[7m  [0m [91m                                   ~~~~[0m[39m
[31mSTACK: [39m
---------------------|---------|----------|---------|---------|-------------------
File                 | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
---------------------|---------|----------|---------|---------|-------------------
[31;1mAll files           [0m | [31;1m      0[0m | [31;1m       0[0m | [31;1m      0[0m | [31;1m      0[0m | [31;1m                 [0m 
[31;1m app                [0m | [31;1m      0[0m | [31;1m       0[0m | [31;1m      0[0m | [31;1m      0[0m | [31;1m                 [0m 
[31;1m  app.controller.ts [0m | [31;1m      0[0m | [32;1m     100[0m | [31;1m      0[0m | [31;1m      0[0m | [31;1m1-10             [0m 
[31;1m  app.module.ts     [0m | [31;1m      0[0m | [31;1m       0[0m | [32;1m    100[0m | [31;1m      0[0m | [31;1m1-31             [0m 
[31;1m  app.service.ts    [0m | [31;1m      0[0m | [32;1m     100[0m | [31;1m      0[0m | [31;1m      0[0m | [31;1m1-6              [0m 
[31;1m  auth.controller.ts[0m | [31;1m      0[0m | [31;1m       0[0m | [31;1m      0[0m | [31;1m      0[0m | [31;1m1-71             [0m 
[31;1m app/dto            [0m | [31;1m      0[0m | [32;1m     100[0m | [32;1m    100[0m | [31;1m      0[0m | [31;1m                 [0m 
[31;1m  index.ts          [0m | [31;1m      0[0m | [32;1m     100[0m | [32;1m    100[0m | [31;1m      0[0m | [31;1m1-3              [0m 
[31;1m app/guards         [0m | [31;1m      0[0m | [32;1m     100[0m | [32;1m    100[0m | [31;1m      0[0m | [31;1m                 [0m 
[31;1m  jwt-auth.guard.ts [0m | [31;1m      0[0m | [32;1m     100[0m | [32;1m    100[0m | [31;1m      0[0m | [31;1m1-5              [0m 
[31;1m app/services       [0m | [31;1m      0[0m | [32;1m     100[0m | [31;1m      0[0m | [31;1m      0[0m | [31;1m                 [0m 
[31;1m  hash.service.ts   [0m | [31;1m      0[0m | [32;1m     100[0m | [31;1m      0[0m | [31;1m      0[0m | [31;1m1-13             [0m 
---------------------|---------|----------|---------|---------|-------------------
[1m[31mJest: "global" coverage threshold for statements (80%) not met: 0%[39m[22m
[1m[31mJest: "global" coverage threshold for branches (80%) not met: 0%[39m[22m
[1m[31mJest: "global" coverage threshold for lines (80%) not met: 0%[39m[22m
[1m[31mJest: "global" coverage threshold for functions (80%) not met: 0%[39m[22m
[1mTest Suites: [22m[1m[31m5 failed[39m[22m, 5 total
[1mTests:       [22m0 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        10 s
[2mRan all test suites[22m[2m.[22m
