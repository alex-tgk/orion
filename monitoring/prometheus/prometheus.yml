# Prometheus Configuration for ORION Microservices Platform
# This configuration sets up comprehensive monitoring for all services

global:
  # How frequently to scrape targets by default
  scrape_interval: 15s

  # How long until a scrape request times out
  scrape_timeout: 10s

  # How frequently to evaluate rules
  evaluation_interval: 15s

  # External labels to attach to any time series or alerts
  external_labels:
    cluster: 'orion-production'
    environment: '${ENVIRONMENT:-development}'
    region: '${REGION:-us-east-1}'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
            - 'alertmanager:9093'
      scheme: http
      timeout: 10s
      api_version: v2

# Load rules once and periodically evaluate them
rule_files:
  - '/etc/prometheus/rules/*.yml'

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
        labels:
          service: 'prometheus'
          tier: 'monitoring'

  # Gateway Service
  - job_name: 'gateway'
    scrape_interval: 10s
    metrics_path: '/metrics'
    static_configs:
      - targets: ['gateway:3000']
        labels:
          service: 'gateway'
          tier: 'api'
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
      - source_labels: [__scheme__]
        target_label: scheme

  # Authentication Service
  - job_name: 'auth'
    scrape_interval: 10s
    metrics_path: '/api/auth/metrics'
    static_configs:
      - targets: ['auth:3001']
        labels:
          service: 'auth'
          tier: 'core'
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance

  # User Service
  - job_name: 'user'
    scrape_interval: 10s
    metrics_path: '/api/user/metrics'
    static_configs:
      - targets: ['user:3002']
        labels:
          service: 'user'
          tier: 'core'
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance

  # Notification Service
  - job_name: 'notifications'
    scrape_interval: 10s
    metrics_path: '/api/v1/metrics'
    static_configs:
      - targets: ['notifications:3003']
        labels:
          service: 'notifications'
          tier: 'messaging'
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance

  # Admin UI Service
  - job_name: 'admin-ui'
    scrape_interval: 15s
    metrics_path: '/metrics'
    static_configs:
      - targets: ['admin-ui:3004']
        labels:
          service: 'admin-ui'
          tier: 'frontend'

  # PostgreSQL Exporter
  - job_name: 'postgres'
    scrape_interval: 15s
    static_configs:
      - targets: ['postgres-exporter:9187']
        labels:
          service: 'postgres'
          tier: 'database'

  # Redis Exporter
  - job_name: 'redis'
    scrape_interval: 15s
    static_configs:
      - targets: ['redis-exporter:9121']
        labels:
          service: 'redis'
          tier: 'cache'

  # RabbitMQ Exporter
  - job_name: 'rabbitmq'
    scrape_interval: 15s
    static_configs:
      - targets: ['rabbitmq-exporter:9419']
        labels:
          service: 'rabbitmq'
          tier: 'messaging'

  # Node Exporter (host metrics)
  - job_name: 'node'
    scrape_interval: 15s
    static_configs:
      - targets: ['node-exporter:9100']
        labels:
          service: 'node-exporter'
          tier: 'infrastructure'

  # cAdvisor (container metrics)
  - job_name: 'cadvisor'
    scrape_interval: 15s
    static_configs:
      - targets: ['cadvisor:8080']
        labels:
          service: 'cadvisor'
          tier: 'infrastructure'

  # Blackbox Exporter (synthetic monitoring)
  - job_name: 'blackbox'
    metrics_path: '/probe'
    params:
      module: [http_2xx]
    static_configs:
      - targets:
          - http://gateway:3000/health
          - http://auth:3001/api/auth/health
          - http://user:3002/api/user/health
          - http://notifications:3003/api/v1/health
          - http://admin-ui:3004/health
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # Service discovery for Kubernetes (when deployed to k8s)
  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
            - orion-production
            - orion-staging
    relabel_configs:
      # Only keep pods with prometheus.io/scrape annotation
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      # Use custom scrape path if specified
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      # Use custom port if specified
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      # Add pod metadata as labels
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name

  # Kubernetes services discovery
  - job_name: 'kubernetes-services'
    kubernetes_sd_configs:
      - role: service
        namespaces:
          names:
            - orion-production
            - orion-staging
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_service_name]
        action: replace
        target_label: kubernetes_service_name

# Remote write configuration (for long-term storage)
remote_write:
  - url: "${PROMETHEUS_REMOTE_WRITE_URL:-http://prometheus-remote-storage:9201/api/v1/push}"
    queue_config:
      capacity: 10000
      max_shards: 50
      min_shards: 1
      max_samples_per_send: 5000
      batch_send_deadline: 5s
      min_backoff: 30ms
      max_backoff: 100ms

# Storage configuration
storage:
  tsdb:
    path: /prometheus/data
    retention.time: 15d
    retention.size: 50GB
