# Blackbox Exporter Configuration for ORION Platform
# Synthetic monitoring and health check probes

modules:
  # HTTP 2xx probe - checks for successful HTTP responses
  http_2xx:
    prober: http
    timeout: 5s
    http:
      valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
      valid_status_codes: [200, 201, 202, 204]
      method: GET
      headers:
        Accept: application/json
        User-Agent: Blackbox-Exporter/1.0
      follow_redirects: true
      max_redirects: 3
      preferred_ip_protocol: "ip4"
      fail_if_ssl: false
      fail_if_not_ssl: false

  # HTTP POST probe - for API endpoints requiring POST
  http_post_2xx:
    prober: http
    timeout: 5s
    http:
      method: POST
      headers:
        Content-Type: application/json
      body: '{}'
      valid_status_codes: [200, 201]

  # HTTP probe with authentication
  http_2xx_auth:
    prober: http
    timeout: 5s
    http:
      valid_status_codes: [200]
      method: GET
      headers:
        Authorization: Bearer ${API_TOKEN}

  # HTTPS probe with SSL verification
  https_2xx:
    prober: http
    timeout: 5s
    http:
      valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
      valid_status_codes: [200]
      method: GET
      tls_config:
        insecure_skip_verify: false
      preferred_ip_protocol: "ip4"

  # TCP connectivity probe
  tcp_connect:
    prober: tcp
    timeout: 5s
    tcp:
      preferred_ip_protocol: "ip4"

  # ICMP ping probe
  icmp:
    prober: icmp
    timeout: 5s
    icmp:
      preferred_ip_protocol: "ip4"

  # DNS probe
  dns_check:
    prober: dns
    timeout: 5s
    dns:
      query_name: "orion.dev"
      query_type: "A"
      valid_rcodes:
        - NOERROR

  # PostgreSQL probe
  postgres_check:
    prober: tcp
    timeout: 5s
    tcp:
      preferred_ip_protocol: "ip4"

  # Redis probe
  redis_check:
    prober: tcp
    timeout: 5s
    tcp:
      preferred_ip_protocol: "ip4"
      query_response:
        - send: "PING\r\n"
          expect: "+PONG"

  # RabbitMQ Management API probe
  rabbitmq_api:
    prober: http
    timeout: 5s
    http:
      method: GET
      valid_status_codes: [200]
      basic_auth:
        username: ${RABBITMQ_USER}
        password: ${RABBITMQ_PASSWORD}

  # Custom health check probe
  health_check:
    prober: http
    timeout: 10s
    http:
      method: GET
      valid_status_codes: [200]
      headers:
        Accept: application/json
      fail_if_body_not_matches_regexp:
        - '"status":\s*"ok"'
      fail_if_body_matches_regexp:
        - '"status":\s*"error"'

  # Slow endpoint probe (higher timeout)
  http_slow:
    prober: http
    timeout: 30s
    http:
      valid_status_codes: [200]
      method: GET
