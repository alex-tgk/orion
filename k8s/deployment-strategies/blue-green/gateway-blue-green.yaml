# Blue-Green Deployment Configuration for Gateway Service
# This manifest includes both blue and green deployments with a service that can switch between them

---
# Blue Deployment (Current/Stable Version)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway-blue
  namespace: orion
  labels:
    app: gateway
    version: blue
    tier: api
    deployment-strategy: blue-green
    app.kubernetes.io/name: gateway
    app.kubernetes.io/part-of: orion-platform
  annotations:
    deployment.kubernetes.io/revision: "blue"
    deployment.orion.io/strategy: "blue-green"
spec:
  replicas: 5
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: gateway
      version: blue
  template:
    metadata:
      labels:
        app: gateway
        version: blue
        tier: api
        slot: blue
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
        deployment.orion.io/slot: "blue"
    spec:
      serviceAccountName: gateway
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: gateway
        image: orion/gateway:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: DEPLOYMENT_SLOT
          value: "blue"
        - name: CORS_ORIGIN
          valueFrom:
            configMapKeyRef:
              name: gateway-config
              key: cors-origin
        - name: AUTH_SERVICE_URL
          value: "http://auth-service:80"
        - name: USER_SERVICE_URL
          value: "http://user-service:3002"
        - name: NOTIFICATION_SERVICE_URL
          value: "http://notification-service:3003"
        - name: REDIS_HOST
          value: "redis-master"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: password
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: gateway-secret
              key: jwt-secret
        - name: JWT_CACHE_TTL
          value: "300"
        - name: RATE_LIMIT_DEFAULT
          value: "100"
        - name: RATE_LIMIT_WINDOW
          value: "60"
        - name: RATE_LIMIT_AUTH_LOGIN
          value: "5"
        - name: RATE_LIMIT_AUTH_REFRESH
          value: "10"
        - name: HEALTH_CHECK_TIMEOUT
          value: "5000"
        - name: REQUEST_MAX_SIZE
          value: "10485760"
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 250m
            memory: 256Mi
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - gateway
              topologyKey: kubernetes.io/hostname

---
# Green Deployment (New Version)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway-green
  namespace: orion
  labels:
    app: gateway
    version: green
    tier: api
    deployment-strategy: blue-green
    app.kubernetes.io/name: gateway
    app.kubernetes.io/part-of: orion-platform
  annotations:
    deployment.kubernetes.io/revision: "green"
    deployment.orion.io/strategy: "blue-green"
spec:
  replicas: 0  # Initially scaled to 0, scaled up during deployment
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: gateway
      version: green
  template:
    metadata:
      labels:
        app: gateway
        version: green
        tier: api
        slot: green
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
        deployment.orion.io/slot: "green"
    spec:
      serviceAccountName: gateway
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: gateway
        image: orion/gateway:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: DEPLOYMENT_SLOT
          value: "green"
        - name: CORS_ORIGIN
          valueFrom:
            configMapKeyRef:
              name: gateway-config
              key: cors-origin
        - name: AUTH_SERVICE_URL
          value: "http://auth-service:80"
        - name: USER_SERVICE_URL
          value: "http://user-service:3002"
        - name: NOTIFICATION_SERVICE_URL
          value: "http://notification-service:3003"
        - name: REDIS_HOST
          value: "redis-master"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: password
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: gateway-secret
              key: jwt-secret
        - name: JWT_CACHE_TTL
          value: "300"
        - name: RATE_LIMIT_DEFAULT
          value: "100"
        - name: RATE_LIMIT_WINDOW
          value: "60"
        - name: RATE_LIMIT_AUTH_LOGIN
          value: "5"
        - name: RATE_LIMIT_AUTH_REFRESH
          value: "10"
        - name: HEALTH_CHECK_TIMEOUT
          value: "5000"
        - name: REQUEST_MAX_SIZE
          value: "10485760"
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 250m
            memory: 256Mi
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - gateway
              topologyKey: kubernetes.io/hostname

---
# Service that routes traffic to active slot (blue or green)
apiVersion: v1
kind: Service
metadata:
  name: gateway
  namespace: orion
  labels:
    app: gateway
    app.kubernetes.io/name: gateway
    app.kubernetes.io/part-of: orion-platform
  annotations:
    deployment.orion.io/active-slot: "blue"  # Change to 'green' to switch traffic
    deployment.orion.io/strategy: "blue-green"
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: gateway
    slot: blue  # This selector switches between 'blue' and 'green'

---
# Blue-specific service for testing
apiVersion: v1
kind: Service
metadata:
  name: gateway-blue
  namespace: orion
  labels:
    app: gateway
    version: blue
    app.kubernetes.io/name: gateway
    app.kubernetes.io/part-of: orion-platform
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: gateway
    slot: blue

---
# Green-specific service for testing
apiVersion: v1
kind: Service
metadata:
  name: gateway-green
  namespace: orion
  labels:
    app: gateway
    version: green
    app.kubernetes.io/name: gateway
    app.kubernetes.io/part-of: orion-platform
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: gateway
    slot: green

---
# ServiceAccount (shared between blue and green)
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gateway
  namespace: orion
  labels:
    app: gateway
    app.kubernetes.io/name: gateway
    app.kubernetes.io/part-of: orion-platform
