# Blue-Green Deployment Configuration for User Service
# This manifest includes both blue and green deployments with a service that can switch between them

---
# Blue Deployment (Current/Stable Version)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service-blue
  namespace: orion
  labels:
    app: user-service
    version: blue
    deployment-strategy: blue-green
    app.kubernetes.io/name: user-service
    app.kubernetes.io/part-of: orion-platform
  annotations:
    deployment.kubernetes.io/revision: "blue"
    deployment.orion.io/strategy: "blue-green"
spec:
  replicas: 3
  selector:
    matchLabels:
      app: user-service
      version: blue
  template:
    metadata:
      labels:
        app: user-service
        version: blue
        slot: blue
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3002"
        prometheus.io/path: "/metrics"
        deployment.orion.io/slot: "blue"
    spec:
      serviceAccountName: user-service
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: user-service
        image: orion/user-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3002
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3002"
        - name: SERVICE_NAME
          value: "user-service"
        - name: DEPLOYMENT_SLOT
          value: "blue"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: user-service-secrets
              key: database-url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: user-service-secrets
              key: jwt-secret
        - name: REDIS_HOST
          value: "redis-service"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_DB
          value: "1"
        - name: RABBITMQ_URL
          valueFrom:
            secretKeyRef:
              name: user-service-secrets
              key: rabbitmq-url
        - name: CORS_ORIGIN
          value: "https://app.orion.com"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health/live
            port: 3002
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 3002
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: avatar-storage
          mountPath: /app/uploads/avatars
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: avatar-storage
        persistentVolumeClaim:
          claimName: user-service-avatars
      - name: tmp
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - user-service
              topologyKey: kubernetes.io/hostname

---
# Green Deployment (New Version)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service-green
  namespace: orion
  labels:
    app: user-service
    version: green
    deployment-strategy: blue-green
    app.kubernetes.io/name: user-service
    app.kubernetes.io/part-of: orion-platform
  annotations:
    deployment.kubernetes.io/revision: "green"
    deployment.orion.io/strategy: "blue-green"
spec:
  replicas: 0  # Initially scaled to 0, scaled up during deployment
  selector:
    matchLabels:
      app: user-service
      version: green
  template:
    metadata:
      labels:
        app: user-service
        version: green
        slot: green
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3002"
        prometheus.io/path: "/metrics"
        deployment.orion.io/slot: "green"
    spec:
      serviceAccountName: user-service
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: user-service
        image: orion/user-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3002
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3002"
        - name: SERVICE_NAME
          value: "user-service"
        - name: DEPLOYMENT_SLOT
          value: "green"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: user-service-secrets
              key: database-url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: user-service-secrets
              key: jwt-secret
        - name: REDIS_HOST
          value: "redis-service"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_DB
          value: "1"
        - name: RABBITMQ_URL
          valueFrom:
            secretKeyRef:
              name: user-service-secrets
              key: rabbitmq-url
        - name: CORS_ORIGIN
          value: "https://app.orion.com"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health/live
            port: 3002
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 3002
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: avatar-storage
          mountPath: /app/uploads/avatars
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: avatar-storage
        persistentVolumeClaim:
          claimName: user-service-avatars
      - name: tmp
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - user-service
              topologyKey: kubernetes.io/hostname

---
# Service that routes traffic to active slot (blue or green)
apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: orion
  labels:
    app: user-service
    app.kubernetes.io/name: user-service
    app.kubernetes.io/part-of: orion-platform
  annotations:
    deployment.orion.io/active-slot: "blue"  # Change to 'green' to switch traffic
    deployment.orion.io/strategy: "blue-green"
spec:
  type: ClusterIP
  selector:
    app: user-service
    slot: blue  # This selector switches between 'blue' and 'green'
  ports:
  - port: 3002
    targetPort: 3002
    protocol: TCP
    name: http
  sessionAffinity: None

---
# Blue-specific service for testing
apiVersion: v1
kind: Service
metadata:
  name: user-service-blue
  namespace: orion
  labels:
    app: user-service
    version: blue
    app.kubernetes.io/name: user-service
    app.kubernetes.io/part-of: orion-platform
spec:
  type: ClusterIP
  ports:
  - port: 3002
    targetPort: 3002
    protocol: TCP
    name: http
  selector:
    app: user-service
    slot: blue

---
# Green-specific service for testing
apiVersion: v1
kind: Service
metadata:
  name: user-service-green
  namespace: orion
  labels:
    app: user-service
    version: green
    app.kubernetes.io/name: user-service
    app.kubernetes.io/part-of: orion-platform
spec:
  type: ClusterIP
  ports:
  - port: 3002
    targetPort: 3002
    protocol: TCP
    name: http
  selector:
    app: user-service
    slot: green

---
# ServiceAccount (shared between blue and green)
apiVersion: v1
kind: ServiceAccount
metadata:
  name: user-service
  namespace: orion
  labels:
    app: user-service
    app.kubernetes.io/name: user-service
    app.kubernetes.io/part-of: orion-platform

---
# HorizontalPodAutoscaler for Blue deployment
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: user-service-blue-hpa
  namespace: orion
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: user-service-blue
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30
      - type: Pods
        value: 2
        periodSeconds: 30
      selectPolicy: Max

---
# HorizontalPodAutoscaler for Green deployment
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: user-service-green-hpa
  namespace: orion
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: user-service-green
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30
      - type: Pods
        value: 2
        periodSeconds: 30
      selectPolicy: Max
