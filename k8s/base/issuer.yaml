---
# Staging ClusterIssuer - Use for testing and development
# Let's Encrypt Staging has higher rate limits but issues untrusted certificates
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-staging
  labels:
    app.kubernetes.io/name: letsencrypt-staging
    app.kubernetes.io/part-of: orion-platform
    app.kubernetes.io/component: certificate-management
spec:
  acme:
    # Let's Encrypt Staging server - issues untrusted certificates for testing
    server: https://acme-staging-v02.api.letsencrypt.org/directory

    # Email for Let's Encrypt account notifications (expiry warnings, etc.)
    # Update this to your organization's email
    email: platform-team@orion.example.com

    # Secret to store ACME account private key
    privateKeySecretRef:
      name: letsencrypt-staging-key

    # ACME HTTP-01 challenge solver
    # Validates domain ownership by serving a challenge file via HTTP
    solvers:
    - http01:
        ingress:
          # Use existing ingress controller
          class: nginx
          # Pod template for HTTP-01 challenge solver
          podTemplate:
            metadata:
              labels:
                app: cert-manager-http01-solver
                app.kubernetes.io/part-of: orion-platform
            spec:
              # Run as non-root for security
              securityContext:
                runAsNonRoot: true
                runAsUser: 1000
                fsGroup: 1000
              # Node selector can be added if needed
              # nodeSelector:
              #   workload: system

---
# Production ClusterIssuer - Use in production environments
# Let's Encrypt Production has strict rate limits - use only after testing with staging
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
  labels:
    app.kubernetes.io/name: letsencrypt-prod
    app.kubernetes.io/part-of: orion-platform
    app.kubernetes.io/component: certificate-management
spec:
  acme:
    # Let's Encrypt Production server - issues trusted certificates
    # IMPORTANT: Has strict rate limits (50 certificates per registered domain per week)
    # https://letsencrypt.org/docs/rate-limits/
    server: https://acme-v02.api.letsencrypt.org/directory

    # Email for Let's Encrypt account notifications
    # Update this to your organization's email
    email: platform-team@orion.example.com

    # Secret to store ACME account private key
    privateKeySecretRef:
      name: letsencrypt-prod-key

    # ACME HTTP-01 challenge solver
    solvers:
    - http01:
        ingress:
          class: nginx
          podTemplate:
            metadata:
              labels:
                app: cert-manager-http01-solver
                app.kubernetes.io/part-of: orion-platform
            spec:
              securityContext:
                runAsNonRoot: true
                runAsUser: 1000
                fsGroup: 1000

---
# Alternative: DNS-01 solver example (commented out)
# Use if HTTP-01 is not feasible (e.g., services not accessible via HTTP)
# Requires DNS provider credentials

# apiVersion: cert-manager.io/v1
# kind: ClusterIssuer
# metadata:
#   name: letsencrypt-dns
# spec:
#   acme:
#     server: https://acme-v02.api.letsencrypt.org/directory
#     email: platform-team@orion.example.com
#     privateKeySecretRef:
#       name: letsencrypt-dns-key
#     solvers:
#     - dns01:
#         # Example: Route53 solver
#         route53:
#           region: us-east-1
#           # Credentials stored in secret
#           accessKeyID: AWS_ACCESS_KEY_ID
#           secretAccessKeySecretRef:
#             name: route53-credentials
#             key: secret-access-key
#       selector:
#         dnsZones:
#         - 'orion.example.com'
