apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: auth-service-role
  namespace: default
rules:
  # Allow reading secrets for the service
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: ["auth-service-secrets"]
    verbs: ["get", "watch"]
  # Allow reading configmaps
  - apiGroups: [""]
    resources: ["configmaps"]
    resourceNames: ["auth-service-config"]
    verbs: ["get", "watch"]
  # Allow service discovery
  - apiGroups: [""]
    resources: ["services", "endpoints"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: gateway-service-role
  namespace: default
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: ["gateway-service-secrets"]
    verbs: ["get", "watch"]
  - apiGroups: [""]
    resources: ["configmaps"]
    resourceNames: ["gateway-service-config"]
    verbs: ["get", "watch"]
  - apiGroups: [""]
    resources: ["services", "endpoints"]
    verbs: ["get", "list", "watch"]
  # Gateway needs to discover all services
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: user-service-role
  namespace: default
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: ["user-service-secrets"]
    verbs: ["get", "watch"]
  - apiGroups: [""]
    resources: ["configmaps"]
    resourceNames: ["user-service-config"]
    verbs: ["get", "watch"]
  - apiGroups: [""]
    resources: ["services", "endpoints"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: notification-service-role
  namespace: default
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: ["notification-service-secrets"]
    verbs: ["get", "watch"]
  - apiGroups: [""]
    resources: ["configmaps"]
    resourceNames: ["notification-service-config"]
    verbs: ["get", "watch"]
  - apiGroups: [""]
    resources: ["services", "endpoints"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: admin-ui-role
  namespace: default
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: ["admin-ui-secrets"]
    verbs: ["get", "watch"]
  - apiGroups: [""]
    resources: ["configmaps"]
    resourceNames: ["admin-ui-config"]
    verbs: ["get", "watch"]
  - apiGroups: [""]
    resources: ["services", "endpoints", "pods"]
    verbs: ["get", "list", "watch"]
  # Admin UI needs to monitor all services
  - apiGroups: ["apps"]
    resources: ["deployments", "statefulsets"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: vault-auth-role
  namespace: default
rules:
  # Permissions for Vault Kubernetes auth
  - apiGroups: [""]
    resources: ["serviceaccounts/token"]
    verbs: ["create"]
  - apiGroups: [""]
    resources: ["serviceaccounts"]
    verbs: ["get"]
