name: Security Scanning

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  pull-requests: write

jobs:
  snyk-scan:
    name: Snyk Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.1

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --all-projects

      - name: Upload Snyk results to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: snyk.sarif

  dependency-check:
    name: OWASP Dependency Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.1

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run OWASP Dependency-Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'orion'
          path: '.'
          format: 'HTML,JSON,SARIF'
          args: >
            --enableRetired
            --enableExperimental
            --failOnCVSS 7

      - name: Upload Dependency-Check results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: ./reports/dependency-check-report.sarif

      - name: Upload Dependency-Check report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: dependency-check-report
          path: ./reports/

  trivy-scan:
    name: Trivy Container Scanning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker images
        run: |
          docker build -t orion/auth-service:latest -f packages/auth/Dockerfile .
          docker build -t orion/gateway-service:latest -f packages/gateway/Dockerfile .
          docker build -t orion/user-service:latest -f packages/user/Dockerfile .
          docker build -t orion/notification-service:latest -f packages/notifications/Dockerfile .

      - name: Run Trivy vulnerability scanner - Auth Service
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'orion/auth-service:latest'
          format: 'sarif'
          output: 'trivy-auth-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy results - Auth Service
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-auth-results.sarif'
          category: 'trivy-auth'

      - name: Run Trivy vulnerability scanner - Gateway Service
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'orion/gateway-service:latest'
          format: 'sarif'
          output: 'trivy-gateway-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy results - Gateway Service
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-gateway-results.sarif'
          category: 'trivy-gateway'

      - name: Run Trivy vulnerability scanner - User Service
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'orion/user-service:latest'
          format: 'sarif'
          output: 'trivy-user-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy results - User Service
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-user-results.sarif'
          category: 'trivy-user'

      - name: Run Trivy vulnerability scanner - Notification Service
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'orion/notification-service:latest'
          format: 'sarif'
          output: 'trivy-notification-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy results - Notification Service
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-notification-results.sarif'
          category: 'trivy-notification'

  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: ['javascript', 'typescript']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: security-and-quality

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ matrix.language }}"

  secret-scanning:
    name: Secret Scanning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

      - name: GitLeaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  npm-audit:
    name: NPM Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.1

      - name: Run pnpm audit
        run: |
          pnpm audit --prod --audit-level=moderate || true
          pnpm audit --json > audit-results.json || true

      - name: Upload audit results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: npm-audit-results
          path: audit-results.json

  security-report:
    name: Generate Security Report
    runs-on: ubuntu-latest
    needs: [snyk-scan, dependency-check, trivy-scan, npm-audit]
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Generate security report
        run: |
          echo "# Security Scan Report" > security-report.md
          echo "## Scan Date: $(date)" >> security-report.md
          echo "## Repository: ${{ github.repository }}" >> security-report.md
          echo "## Branch: ${{ github.ref_name }}" >> security-report.md
          echo "" >> security-report.md
          echo "### Scans Performed:" >> security-report.md
          echo "- ✅ Snyk vulnerability scanning" >> security-report.md
          echo "- ✅ OWASP dependency check" >> security-report.md
          echo "- ✅ Trivy container scanning" >> security-report.md
          echo "- ✅ CodeQL analysis" >> security-report.md
          echo "- ✅ Secret scanning" >> security-report.md
          echo "- ✅ NPM audit" >> security-report.md
          echo "" >> security-report.md
          echo "Please review the detailed results in GitHub Security tab." >> security-report.md

      - name: Upload security report
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: security-report.md

      - name: Comment PR with security status
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('security-report.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: report
            });
