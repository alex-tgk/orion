name: Deploy to Production

on:
  push:
    branches: [main]
    tags: ['v*.*.*']
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to deploy'
        required: true
        default: 'latest'

env:
  ENVIRONMENT: production
  NAMESPACE: orion-prod
  REGISTRY: ghcr.io

jobs:
  approval:
    name: Deployment Approval
    runs-on: ubuntu-latest
    environment:
      name: production-approval
    steps:
      - name: Request approval
        run: echo "Deployment to production requires manual approval"

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: approval
    environment:
      name: production
      url: https://orion.example.com

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.0'

      - name: Configure kubectl
        run: bash scripts/ci-setup.sh production

      - name: Backup current deployment
        run: bash scripts/backup-deployment.sh production
        continue-on-error: true

      - name: Deploy to production
        run: bash scripts/deploy-production.sh
        timeout-minutes: 30

      - name: Run smoke tests
        run: bash scripts/smoke-tests.sh production
        timeout-minutes: 10

      - name: Verify deployment
        run: bash scripts/verify-deployment.sh production

      - name: Send success notification
        if: success()
        uses: 8398a7/action-slack@v3
        with:
          status: success
          text: 'Production deployment successful'
          webhook_url: '${SLACK_WEBHOOK}'
        env:
          SLACK_WEBHOOK: '${{ secrets.SLACK_WEBHOOK_URL }}'

      - name: Rollback on failure
        if: failure()
        run: bash scripts/rollback.sh production

      - name: Send failure notification
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          text: 'Production deployment failed - rollback initiated'
          webhook_url: '${SLACK_WEBHOOK}'
        env:
          SLACK_WEBHOOK: '${{ secrets.SLACK_WEBHOOK_URL }}'
