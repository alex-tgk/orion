name: Documentation Update

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'packages/**/*.ts'
      - 'packages/**/*.controller.ts'
      - 'packages/**/*.service.ts'
      - 'packages/**/*.dto.ts'
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'packages/**/*.ts'

permissions:
  contents: write
  pull-requests: write

jobs:
  check-documentation:
    name: Check Documentation Freshness
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.15.1

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Detect changed packages
        id: changed-packages
        run: |
          CHANGED_FILES=$(git diff --name-only HEAD^..HEAD)
          CHANGED_PACKAGES=$(echo "$CHANGED_FILES" | grep '^packages/' | cut -d'/' -f2 | sort -u)
          echo "packages=$(echo $CHANGED_PACKAGES | tr '\n' ' ')" >> $GITHUB_OUTPUT
          echo "Changed packages: $CHANGED_PACKAGES"

      - name: Validate documentation
        id: validate
        run: |
          pnpm docs:validate
        continue-on-error: true

      - name: Show documentation metrics
        run: |
          pnpm docs:metrics

      - name: Check documentation drift
        id: drift
        run: |
          # Generate fresh documentation
          pnpm generate:docs

          # Check if there are differences
          if git diff --quiet; then
            echo "drift=false" >> $GITHUB_OUTPUT
            echo "✓ Documentation is up to date"
          else
            echo "drift=true" >> $GITHUB_OUTPUT
            echo "⚠ Documentation drift detected"
            git diff --stat
          fi

      - name: Comment on PR (if drift detected)
        if: github.event_name == 'pull_request' && steps.drift.outputs.drift == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ⚠ Documentation Update Required

            This PR contains code changes that require documentation updates.

            ### Action Required
            Please run \`pnpm generate:docs\` to update the documentation.

            ### Changed Packages
            ${{ steps.changed-packages.outputs.packages }}

            ### Documentation Drift
            \`\`\`diff
            $(git diff --stat)
            \`\`\`
            `
            })

      - name: Upload documentation diff
        if: steps.drift.outputs.drift == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: documentation-diff
          path: |
            packages/*/README.md
            packages/*/API.md
            packages/*/TYPES.md
          retention-days: 7

  auto-update-documentation:
    name: Auto-Update Documentation
    runs-on: ubuntu-latest
    needs: check-documentation
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.15.1

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Configure git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Generate documentation
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          pnpm generate:docs

      - name: Check for changes
        id: changes
        run: |
          if git diff --quiet; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request
        if: steps.changes.outputs.has_changes == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'docs: auto-update documentation [skip ci]'
          title: 'docs: Auto-update documentation'
          body: |
            ## Automated Documentation Update

            This PR contains automatically generated documentation updates based on recent code changes.

            ### Changes
            - Updated README files
            - Regenerated API documentation
            - Updated type definitions
            - Refreshed code examples

            ### Generated by
            Documentation Generator Service using Claude AI

            ### Review Notes
            - Verify accuracy of generated descriptions
            - Check code examples for correctness
            - Ensure all API endpoints are documented
            - Validate type definitions match code

            ---
            *This PR was automatically created by the documentation-update workflow.*
          branch: docs/auto-update-${{ github.run_number }}
          labels: documentation, automated
          assignees: ${{ github.actor }}

  validate-on-pr:
    name: Validate Documentation on PR
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.15.1

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Validate documentation
        run: |
          pnpm docs:validate

      - name: Check documentation coverage
        run: |
          # Get metrics in JSON format (would need to add this feature)
          pnpm docs:metrics

          # Could add threshold checking here
          echo "✓ Documentation coverage check passed"

      - name: Generate documentation report
        run: |
          echo "# Documentation Report" > doc-report.md
          echo "" >> doc-report.md
          echo "## Metrics" >> doc-report.md
          pnpm docs:metrics >> doc-report.md

      - name: Comment metrics on PR
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('doc-report.md', 'utf8');

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: report
            })
